  File "<string>", line 1
    from parser.spring_entry_analyzer import SpringEntryAnalyzer; from parser.base_entry_analyzer import FileInfo; import os; analyzer = SpringEntryAnalyzer(); print('=== Spring 분석기 테스트 ==='); controller_files = ['ProductController.java', 'UserController.java', 'ErrorController.java', 'SyntaxErrorController.java', 'MixedErrorController.java']; for file_name in controller_files: file_path = f'src/main/java/com/example/controller/{file_name}'; full_path = f'projects/sampleSrc/{file_path}'; if os.path.exists(full_path): with open(full_path, 'r', encoding='utf-8') as f: content = f.read(); file_info = FileInfo(file_id=1, file_path=file_path, file_name=file_name, file_type='JAVA', content=content, hash_value='test', line_count=len(content.split('\n'))); is_target = analyzer.is_target_file(file_info.file_path); print(f'{file_name}: 필터링={is_target}'); if is_target: entries = analyzer.analyze_backend_entry(file_info, None); print(f'  -> 진입점 {len(entries)}개 발견'); [print(f'    - {entry.class_name}.{entry.method_name} {entry.http_method} {entry.url_pattern}') for entry in entries]; else: print('  -> 필터링에서 제외됨')
                                                                                                                                                                                                                                                                                                                                                          ^^^
SyntaxError: invalid syntax
