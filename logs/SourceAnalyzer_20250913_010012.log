2025-09-13 01:00:12,919 - SourceAnalyzer - INFO - logger.py:68 - SourceAnalyzer 시작
2025-09-13 01:00:12,925 - SourceAnalyzer - DEBUG - logger.py:64 - 명령행 인자 파싱 완료: {'project_name': 'sampleSrc', 'clear_metadb': False, 'verbose': False, 'output_format': 'html', 'config_file': None, 'log_level': 'INFO', 'dry_run': False, 'force': False}
2025-09-13 01:00:12,925 - SourceAnalyzer - DEBUG - logger.py:64 - 인자 검증 성공
2025-09-13 01:00:12,925 - SourceAnalyzer - INFO - logger.py:68 - 분석 대상 프로젝트: sampleSrc
2025-09-13 01:00:12,926 - SourceAnalyzer - INFO - logger.py:68 - 분석 옵션:
2025-09-13 01:00:12,926 - SourceAnalyzer - INFO - logger.py:68 -   - 메타데이터베이스 초기화: False
2025-09-13 01:00:12,926 - SourceAnalyzer - INFO - logger.py:68 -   - 상세 로그: False
2025-09-13 01:00:12,926 - SourceAnalyzer - INFO - logger.py:68 -   - 출력 형식: html
2025-09-13 01:00:12,926 - SourceAnalyzer - INFO - logger.py:68 -   - 드라이런 모드: False
2025-09-13 01:00:12,926 - SourceAnalyzer - INFO - logger.py:68 -   - 강제 실행: False
2025-09-13 01:00:12,926 - SourceAnalyzer - INFO - logger.py:68 - 1단계 실행: 파일 정보 저장 (프로젝트 전체 스캔)
2025-09-13 01:00:12,927 - SourceAnalyzer - INFO - logger.py:68 - === 파일 스캔 시작: 파일 정보 저장 ===
2025-09-13 01:00:12,928 - SourceAnalyzer - DEBUG - logger.py:64 - 데이터베이스 연결 성공: D:\Analyzer\CreateMetaDb\projects\sampleSrc\metadata.db
2025-09-13 01:00:12,928 - SourceAnalyzer - DEBUG - logger.py:64 - 인덱스가 이미 존재함 (무시): CREATE UNIQUE INDEX ix_projects_01 ON projects (pr...
2025-09-13 01:00:12,928 - SourceAnalyzer - DEBUG - logger.py:64 - 인덱스가 이미 존재함 (무시): CREATE UNIQUE INDEX ix_tables_01 ON tables (table_...
2025-09-13 01:00:12,929 - SourceAnalyzer - DEBUG - logger.py:64 - 인덱스가 이미 존재함 (무시): CREATE UNIQUE INDEX ix_columns_01 ON columns (tabl...
2025-09-13 01:00:12,929 - SourceAnalyzer - DEBUG - logger.py:64 - 인덱스가 이미 존재함 (무시): CREATE UNIQUE INDEX ix_files_01 ON files (file_nam...
2025-09-13 01:00:12,929 - SourceAnalyzer - DEBUG - logger.py:64 - 인덱스가 이미 존재함 (무시): CREATE UNIQUE INDEX ix_classes_01 ON classes (clas...
2025-09-13 01:00:12,929 - SourceAnalyzer - DEBUG - logger.py:64 - 인덱스가 이미 존재함 (무시): CREATE INDEX ix_classes_02 ON classes (parent_clas...
2025-09-13 01:00:12,929 - SourceAnalyzer - DEBUG - logger.py:64 - 인덱스가 이미 존재함 (무시): CREATE UNIQUE INDEX ix_components_01 ON components...
2025-09-13 01:00:12,929 - SourceAnalyzer - DEBUG - logger.py:64 - 인덱스가 이미 존재함 (무시): CREATE INDEX ix_components_parent_id ON components...
2025-09-13 01:00:12,929 - SourceAnalyzer - DEBUG - logger.py:64 - 인덱스가 이미 존재함 (무시): CREATE UNIQUE INDEX ix_relationships_01 ON relatio...
2025-09-13 01:00:12,929 - SourceAnalyzer - DEBUG - logger.py:64 - SQL 스크립트 실행 성공: D:\Analyzer\CreateMetaDb\database\create_table_script.sql
2025-09-13 01:00:12,929 - SourceAnalyzer - INFO - logger.py:68 - 메타데이터베이스 초기화 완료: D:\Analyzer\CreateMetaDb\projects\sampleSrc\metadata.db
2025-09-13 01:00:12,929 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 실행 성공: 
                SELECT COUNT(*) as count FROM pro...
2025-09-13 01:00:12,929 - SourceAnalyzer - DEBUG - logger.py:64 - 업데이트 쿼리 실행 성공: 
            UPDATE projects
            SET hash_..., 영향받은 행: 1
2025-09-13 01:00:12,929 - SourceAnalyzer - DEBUG - logger.py:64 - 프로젝트 정보 저장/업데이트 완료: sampleSrc
2025-09-13 01:00:12,929 - SourceAnalyzer - INFO - logger.py:68 - 프로젝트 파일 스캔 시작: D:\Analyzer\CreateMetaDb\projects\sampleSrc
2025-09-13 01:00:12,969 - SourceAnalyzer - DEBUG - logger.py:64 - 디렉토리 스캔 완료: D:\Analyzer\CreateMetaDb\projects\sampleSrc, 파일 수: 46
2025-09-13 01:00:12,970 - SourceAnalyzer - DEBUG - logger.py:64 - 파일 읽기 성공: D:\Analyzer\CreateMetaDb\projects\sampleSrc\config\target_source_config.yaml
2025-09-13 01:00:12,975 - SourceAnalyzer - DEBUG - logger.py:64 - YAML 설정 파일 로드 성공: D:\Analyzer\CreateMetaDb\projects\sampleSrc\config\target_source_config.yaml
2025-09-13 01:00:12,977 - SourceAnalyzer - DEBUG - logger.py:64 - 파일 읽기 성공: D:\Analyzer\CreateMetaDb\projects\sampleSrc\config\target_source_config.yaml
2025-09-13 01:00:12,981 - SourceAnalyzer - DEBUG - logger.py:64 - YAML 설정 파일 로드 성공: D:\Analyzer\CreateMetaDb\projects\sampleSrc\config\target_source_config.yaml
2025-09-13 01:00:12,982 - SourceAnalyzer - DEBUG - logger.py:64 - 파일 읽기 성공: D:\Analyzer\CreateMetaDb\projects\sampleSrc\config\target_source_config.yaml
2025-09-13 01:00:12,986 - SourceAnalyzer - DEBUG - logger.py:64 - YAML 설정 파일 로드 성공: D:\Analyzer\CreateMetaDb\projects\sampleSrc\config\target_source_config.yaml
2025-09-13 01:00:12,987 - SourceAnalyzer - DEBUG - logger.py:64 - 파일 읽기 성공: D:\Analyzer\CreateMetaDb\projects\sampleSrc\config\target_source_config.yaml
2025-09-13 01:00:12,992 - SourceAnalyzer - DEBUG - logger.py:64 - YAML 설정 파일 로드 성공: D:\Analyzer\CreateMetaDb\projects\sampleSrc\config\target_source_config.yaml
2025-09-13 01:00:12,992 - SourceAnalyzer - DEBUG - logger.py:64 - 파일 읽기 성공: D:\Analyzer\CreateMetaDb\projects\sampleSrc\config\target_source_config.yaml
2025-09-13 01:00:12,996 - SourceAnalyzer - DEBUG - logger.py:64 - YAML 설정 파일 로드 성공: D:\Analyzer\CreateMetaDb\projects\sampleSrc\config\target_source_config.yaml
2025-09-13 01:00:12,997 - SourceAnalyzer - DEBUG - logger.py:64 - 파일 읽기 성공: D:\Analyzer\CreateMetaDb\projects\sampleSrc\config\target_source_config.yaml
2025-09-13 01:00:13,001 - SourceAnalyzer - DEBUG - logger.py:64 - YAML 설정 파일 로드 성공: D:\Analyzer\CreateMetaDb\projects\sampleSrc\config\target_source_config.yaml
2025-09-13 01:00:13,002 - SourceAnalyzer - DEBUG - logger.py:64 - 파일 읽기 성공: D:\Analyzer\CreateMetaDb\projects\sampleSrc\config\target_source_config.yaml
2025-09-13 01:00:13,006 - SourceAnalyzer - DEBUG - logger.py:64 - YAML 설정 파일 로드 성공: D:\Analyzer\CreateMetaDb\projects\sampleSrc\config\target_source_config.yaml
2025-09-13 01:00:13,007 - SourceAnalyzer - DEBUG - logger.py:64 - 파일 읽기 성공: D:\Analyzer\CreateMetaDb\projects\sampleSrc\config\target_source_config.yaml
2025-09-13 01:00:13,011 - SourceAnalyzer - DEBUG - logger.py:64 - YAML 설정 파일 로드 성공: D:\Analyzer\CreateMetaDb\projects\sampleSrc\config\target_source_config.yaml
2025-09-13 01:00:13,012 - SourceAnalyzer - DEBUG - logger.py:64 - 파일 읽기 성공: D:\Analyzer\CreateMetaDb\projects\sampleSrc\config\target_source_config.yaml
2025-09-13 01:00:13,016 - SourceAnalyzer - DEBUG - logger.py:64 - YAML 설정 파일 로드 성공: D:\Analyzer\CreateMetaDb\projects\sampleSrc\config\target_source_config.yaml
2025-09-13 01:00:13,017 - SourceAnalyzer - DEBUG - logger.py:64 - 파일 읽기 성공: D:\Analyzer\CreateMetaDb\projects\sampleSrc\config\target_source_config.yaml
2025-09-13 01:00:13,021 - SourceAnalyzer - DEBUG - logger.py:64 - YAML 설정 파일 로드 성공: D:\Analyzer\CreateMetaDb\projects\sampleSrc\config\target_source_config.yaml
2025-09-13 01:00:13,023 - SourceAnalyzer - DEBUG - logger.py:64 - 파일 읽기 성공: D:\Analyzer\CreateMetaDb\projects\sampleSrc\config\target_source_config.yaml
2025-09-13 01:00:13,027 - SourceAnalyzer - DEBUG - logger.py:64 - YAML 설정 파일 로드 성공: D:\Analyzer\CreateMetaDb\projects\sampleSrc\config\target_source_config.yaml
2025-09-13 01:00:13,028 - SourceAnalyzer - DEBUG - logger.py:64 - 파일 읽기 성공: D:\Analyzer\CreateMetaDb\projects\sampleSrc\config\target_source_config.yaml
2025-09-13 01:00:13,032 - SourceAnalyzer - DEBUG - logger.py:64 - YAML 설정 파일 로드 성공: D:\Analyzer\CreateMetaDb\projects\sampleSrc\config\target_source_config.yaml
2025-09-13 01:00:13,033 - SourceAnalyzer - DEBUG - logger.py:64 - 파일 읽기 성공: D:\Analyzer\CreateMetaDb\projects\sampleSrc\config\target_source_config.yaml
2025-09-13 01:00:13,037 - SourceAnalyzer - DEBUG - logger.py:64 - YAML 설정 파일 로드 성공: D:\Analyzer\CreateMetaDb\projects\sampleSrc\config\target_source_config.yaml
2025-09-13 01:00:13,038 - SourceAnalyzer - DEBUG - logger.py:64 - 파일 읽기 성공: D:\Analyzer\CreateMetaDb\projects\sampleSrc\config\target_source_config.yaml
2025-09-13 01:00:13,042 - SourceAnalyzer - DEBUG - logger.py:64 - YAML 설정 파일 로드 성공: D:\Analyzer\CreateMetaDb\projects\sampleSrc\config\target_source_config.yaml
2025-09-13 01:00:13,043 - SourceAnalyzer - DEBUG - logger.py:64 - 파일 읽기 성공: D:\Analyzer\CreateMetaDb\projects\sampleSrc\config\target_source_config.yaml
2025-09-13 01:00:13,047 - SourceAnalyzer - DEBUG - logger.py:64 - YAML 설정 파일 로드 성공: D:\Analyzer\CreateMetaDb\projects\sampleSrc\config\target_source_config.yaml
2025-09-13 01:00:13,047 - SourceAnalyzer - DEBUG - logger.py:64 - 파일 읽기 성공: D:\Analyzer\CreateMetaDb\projects\sampleSrc\config\target_source_config.yaml
2025-09-13 01:00:13,052 - SourceAnalyzer - DEBUG - logger.py:64 - YAML 설정 파일 로드 성공: D:\Analyzer\CreateMetaDb\projects\sampleSrc\config\target_source_config.yaml
2025-09-13 01:00:13,053 - SourceAnalyzer - DEBUG - logger.py:64 - 파일 읽기 성공: D:\Analyzer\CreateMetaDb\projects\sampleSrc\config\target_source_config.yaml
2025-09-13 01:00:13,057 - SourceAnalyzer - DEBUG - logger.py:64 - YAML 설정 파일 로드 성공: D:\Analyzer\CreateMetaDb\projects\sampleSrc\config\target_source_config.yaml
2025-09-13 01:00:13,058 - SourceAnalyzer - DEBUG - logger.py:64 - 파일 읽기 성공: D:\Analyzer\CreateMetaDb\projects\sampleSrc\config\target_source_config.yaml
2025-09-13 01:00:13,062 - SourceAnalyzer - DEBUG - logger.py:64 - YAML 설정 파일 로드 성공: D:\Analyzer\CreateMetaDb\projects\sampleSrc\config\target_source_config.yaml
2025-09-13 01:00:13,063 - SourceAnalyzer - DEBUG - logger.py:64 - 파일 읽기 성공: D:\Analyzer\CreateMetaDb\projects\sampleSrc\config\target_source_config.yaml
2025-09-13 01:00:13,067 - SourceAnalyzer - DEBUG - logger.py:64 - YAML 설정 파일 로드 성공: D:\Analyzer\CreateMetaDb\projects\sampleSrc\config\target_source_config.yaml
2025-09-13 01:00:13,067 - SourceAnalyzer - DEBUG - logger.py:64 - 파일 읽기 성공: D:\Analyzer\CreateMetaDb\projects\sampleSrc\config\target_source_config.yaml
2025-09-13 01:00:13,071 - SourceAnalyzer - DEBUG - logger.py:64 - YAML 설정 파일 로드 성공: D:\Analyzer\CreateMetaDb\projects\sampleSrc\config\target_source_config.yaml
2025-09-13 01:00:13,072 - SourceAnalyzer - DEBUG - logger.py:64 - 파일 읽기 성공: D:\Analyzer\CreateMetaDb\projects\sampleSrc\config\target_source_config.yaml
2025-09-13 01:00:13,076 - SourceAnalyzer - DEBUG - logger.py:64 - YAML 설정 파일 로드 성공: D:\Analyzer\CreateMetaDb\projects\sampleSrc\config\target_source_config.yaml
2025-09-13 01:00:13,077 - SourceAnalyzer - DEBUG - logger.py:64 - 파일 읽기 성공: D:\Analyzer\CreateMetaDb\projects\sampleSrc\config\target_source_config.yaml
2025-09-13 01:00:13,081 - SourceAnalyzer - DEBUG - logger.py:64 - YAML 설정 파일 로드 성공: D:\Analyzer\CreateMetaDb\projects\sampleSrc\config\target_source_config.yaml
2025-09-13 01:00:13,081 - SourceAnalyzer - DEBUG - logger.py:64 - 파일 읽기 성공: D:\Analyzer\CreateMetaDb\projects\sampleSrc\config\target_source_config.yaml
2025-09-13 01:00:13,086 - SourceAnalyzer - DEBUG - logger.py:64 - YAML 설정 파일 로드 성공: D:\Analyzer\CreateMetaDb\projects\sampleSrc\config\target_source_config.yaml
2025-09-13 01:00:13,087 - SourceAnalyzer - DEBUG - logger.py:64 - 파일 읽기 성공: D:\Analyzer\CreateMetaDb\projects\sampleSrc\config\target_source_config.yaml
2025-09-13 01:00:13,091 - SourceAnalyzer - DEBUG - logger.py:64 - YAML 설정 파일 로드 성공: D:\Analyzer\CreateMetaDb\projects\sampleSrc\config\target_source_config.yaml
2025-09-13 01:00:13,092 - SourceAnalyzer - DEBUG - logger.py:64 - 파일 읽기 성공: D:\Analyzer\CreateMetaDb\projects\sampleSrc\config\target_source_config.yaml
2025-09-13 01:00:13,096 - SourceAnalyzer - DEBUG - logger.py:64 - YAML 설정 파일 로드 성공: D:\Analyzer\CreateMetaDb\projects\sampleSrc\config\target_source_config.yaml
2025-09-13 01:00:13,097 - SourceAnalyzer - DEBUG - logger.py:64 - 파일 읽기 성공: D:\Analyzer\CreateMetaDb\projects\sampleSrc\config\target_source_config.yaml
2025-09-13 01:00:13,103 - SourceAnalyzer - DEBUG - logger.py:64 - YAML 설정 파일 로드 성공: D:\Analyzer\CreateMetaDb\projects\sampleSrc\config\target_source_config.yaml
2025-09-13 01:00:13,104 - SourceAnalyzer - DEBUG - logger.py:64 - 파일 읽기 성공: D:\Analyzer\CreateMetaDb\projects\sampleSrc\config\target_source_config.yaml
2025-09-13 01:00:13,108 - SourceAnalyzer - DEBUG - logger.py:64 - YAML 설정 파일 로드 성공: D:\Analyzer\CreateMetaDb\projects\sampleSrc\config\target_source_config.yaml
2025-09-13 01:00:13,109 - SourceAnalyzer - DEBUG - logger.py:64 - 파일 읽기 성공: D:\Analyzer\CreateMetaDb\projects\sampleSrc\config\target_source_config.yaml
2025-09-13 01:00:13,113 - SourceAnalyzer - DEBUG - logger.py:64 - YAML 설정 파일 로드 성공: D:\Analyzer\CreateMetaDb\projects\sampleSrc\config\target_source_config.yaml
2025-09-13 01:00:13,114 - SourceAnalyzer - DEBUG - logger.py:64 - 파일 읽기 성공: D:\Analyzer\CreateMetaDb\projects\sampleSrc\config\target_source_config.yaml
2025-09-13 01:00:13,118 - SourceAnalyzer - DEBUG - logger.py:64 - YAML 설정 파일 로드 성공: D:\Analyzer\CreateMetaDb\projects\sampleSrc\config\target_source_config.yaml
2025-09-13 01:00:13,119 - SourceAnalyzer - DEBUG - logger.py:64 - 파일 읽기 성공: D:\Analyzer\CreateMetaDb\projects\sampleSrc\config\target_source_config.yaml
2025-09-13 01:00:13,123 - SourceAnalyzer - DEBUG - logger.py:64 - YAML 설정 파일 로드 성공: D:\Analyzer\CreateMetaDb\projects\sampleSrc\config\target_source_config.yaml
2025-09-13 01:00:13,124 - SourceAnalyzer - DEBUG - logger.py:64 - 파일 읽기 성공: D:\Analyzer\CreateMetaDb\projects\sampleSrc\config\target_source_config.yaml
2025-09-13 01:00:13,128 - SourceAnalyzer - DEBUG - logger.py:64 - YAML 설정 파일 로드 성공: D:\Analyzer\CreateMetaDb\projects\sampleSrc\config\target_source_config.yaml
2025-09-13 01:00:13,128 - SourceAnalyzer - DEBUG - logger.py:64 - 파일 읽기 성공: D:\Analyzer\CreateMetaDb\projects\sampleSrc\config\target_source_config.yaml
2025-09-13 01:00:13,132 - SourceAnalyzer - DEBUG - logger.py:64 - YAML 설정 파일 로드 성공: D:\Analyzer\CreateMetaDb\projects\sampleSrc\config\target_source_config.yaml
2025-09-13 01:00:13,133 - SourceAnalyzer - DEBUG - logger.py:64 - 파일 읽기 성공: D:\Analyzer\CreateMetaDb\projects\sampleSrc\config\target_source_config.yaml
2025-09-13 01:00:13,138 - SourceAnalyzer - DEBUG - logger.py:64 - YAML 설정 파일 로드 성공: D:\Analyzer\CreateMetaDb\projects\sampleSrc\config\target_source_config.yaml
2025-09-13 01:00:13,139 - SourceAnalyzer - DEBUG - logger.py:64 - 파일 읽기 성공: D:\Analyzer\CreateMetaDb\projects\sampleSrc\config\target_source_config.yaml
2025-09-13 01:00:13,143 - SourceAnalyzer - DEBUG - logger.py:64 - YAML 설정 파일 로드 성공: D:\Analyzer\CreateMetaDb\projects\sampleSrc\config\target_source_config.yaml
2025-09-13 01:00:13,143 - SourceAnalyzer - INFO - logger.py:68 - 파일 스캔 완료: 총 35개 파일
2025-09-13 01:00:13,144 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 실행 성공: SELECT project_id FROM projects WHERE project_name...
2025-09-13 01:00:13,144 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 실행 성공: 
                SELECT COUNT(*) as count FROM fil...
2025-09-13 01:00:13,144 - SourceAnalyzer - DEBUG - logger.py:64 - 업데이트 쿼리 실행 성공: 
            UPDATE files
            SET file_typ..., 영향받은 행: 1
2025-09-13 01:00:13,144 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 실행 성공: 
                SELECT COUNT(*) as count FROM fil...
2025-09-13 01:00:13,144 - SourceAnalyzer - DEBUG - logger.py:64 - 업데이트 쿼리 실행 성공: 
            UPDATE files
            SET file_typ..., 영향받은 행: 1
2025-09-13 01:00:13,144 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 실행 성공: 
                SELECT COUNT(*) as count FROM fil...
2025-09-13 01:00:13,144 - SourceAnalyzer - DEBUG - logger.py:64 - 업데이트 쿼리 실행 성공: 
            UPDATE files
            SET file_typ..., 영향받은 행: 1
2025-09-13 01:00:13,144 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 실행 성공: 
                SELECT COUNT(*) as count FROM fil...
2025-09-13 01:00:13,144 - SourceAnalyzer - DEBUG - logger.py:64 - 업데이트 쿼리 실행 성공: 
            UPDATE files
            SET file_typ..., 영향받은 행: 1
2025-09-13 01:00:13,144 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 실행 성공: 
                SELECT COUNT(*) as count FROM fil...
2025-09-13 01:00:13,144 - SourceAnalyzer - DEBUG - logger.py:64 - 업데이트 쿼리 실행 성공: 
            UPDATE files
            SET file_typ..., 영향받은 행: 1
2025-09-13 01:00:13,144 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 실행 성공: 
                SELECT COUNT(*) as count FROM fil...
2025-09-13 01:00:13,144 - SourceAnalyzer - DEBUG - logger.py:64 - 업데이트 쿼리 실행 성공: 
            UPDATE files
            SET file_typ..., 영향받은 행: 1
2025-09-13 01:00:13,145 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 실행 성공: 
                SELECT COUNT(*) as count FROM fil...
2025-09-13 01:00:13,145 - SourceAnalyzer - DEBUG - logger.py:64 - 업데이트 쿼리 실행 성공: 
            UPDATE files
            SET file_typ..., 영향받은 행: 1
2025-09-13 01:00:13,145 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 실행 성공: 
                SELECT COUNT(*) as count FROM fil...
2025-09-13 01:00:13,145 - SourceAnalyzer - DEBUG - logger.py:64 - 업데이트 쿼리 실행 성공: 
            UPDATE files
            SET file_typ..., 영향받은 행: 1
2025-09-13 01:00:13,145 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 실행 성공: 
                SELECT COUNT(*) as count FROM fil...
2025-09-13 01:00:13,145 - SourceAnalyzer - DEBUG - logger.py:64 - 업데이트 쿼리 실행 성공: 
            UPDATE files
            SET file_typ..., 영향받은 행: 1
2025-09-13 01:00:13,145 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 실행 성공: 
                SELECT COUNT(*) as count FROM fil...
2025-09-13 01:00:13,145 - SourceAnalyzer - DEBUG - logger.py:64 - 업데이트 쿼리 실행 성공: 
            UPDATE files
            SET file_typ..., 영향받은 행: 1
2025-09-13 01:00:13,145 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 실행 성공: 
                SELECT COUNT(*) as count FROM fil...
2025-09-13 01:00:13,145 - SourceAnalyzer - DEBUG - logger.py:64 - 업데이트 쿼리 실행 성공: 
            UPDATE files
            SET file_typ..., 영향받은 행: 1
2025-09-13 01:00:13,145 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 실행 성공: 
                SELECT COUNT(*) as count FROM fil...
2025-09-13 01:00:13,145 - SourceAnalyzer - DEBUG - logger.py:64 - 업데이트 쿼리 실행 성공: 
            UPDATE files
            SET file_typ..., 영향받은 행: 1
2025-09-13 01:00:13,145 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 실행 성공: 
                SELECT COUNT(*) as count FROM fil...
2025-09-13 01:00:13,145 - SourceAnalyzer - DEBUG - logger.py:64 - 업데이트 쿼리 실행 성공: 
            UPDATE files
            SET file_typ..., 영향받은 행: 1
2025-09-13 01:00:13,145 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 실행 성공: 
                SELECT COUNT(*) as count FROM fil...
2025-09-13 01:00:13,145 - SourceAnalyzer - DEBUG - logger.py:64 - 업데이트 쿼리 실행 성공: 
            UPDATE files
            SET file_typ..., 영향받은 행: 1
2025-09-13 01:00:13,145 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 실행 성공: 
                SELECT COUNT(*) as count FROM fil...
2025-09-13 01:00:13,145 - SourceAnalyzer - DEBUG - logger.py:64 - 업데이트 쿼리 실행 성공: 
            UPDATE files
            SET file_typ..., 영향받은 행: 1
2025-09-13 01:00:13,145 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 실행 성공: 
                SELECT COUNT(*) as count FROM fil...
2025-09-13 01:00:13,146 - SourceAnalyzer - DEBUG - logger.py:64 - 업데이트 쿼리 실행 성공: 
            UPDATE files
            SET file_typ..., 영향받은 행: 1
2025-09-13 01:00:13,146 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 실행 성공: 
                SELECT COUNT(*) as count FROM fil...
2025-09-13 01:00:13,146 - SourceAnalyzer - DEBUG - logger.py:64 - 업데이트 쿼리 실행 성공: 
            UPDATE files
            SET file_typ..., 영향받은 행: 1
2025-09-13 01:00:13,146 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 실행 성공: 
                SELECT COUNT(*) as count FROM fil...
2025-09-13 01:00:13,146 - SourceAnalyzer - DEBUG - logger.py:64 - 업데이트 쿼리 실행 성공: 
            UPDATE files
            SET file_typ..., 영향받은 행: 1
2025-09-13 01:00:13,146 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 실행 성공: 
                SELECT COUNT(*) as count FROM fil...
2025-09-13 01:00:13,146 - SourceAnalyzer - DEBUG - logger.py:64 - 업데이트 쿼리 실행 성공: 
            UPDATE files
            SET file_typ..., 영향받은 행: 1
2025-09-13 01:00:13,146 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 실행 성공: 
                SELECT COUNT(*) as count FROM fil...
2025-09-13 01:00:13,146 - SourceAnalyzer - DEBUG - logger.py:64 - 업데이트 쿼리 실행 성공: 
            UPDATE files
            SET file_typ..., 영향받은 행: 1
2025-09-13 01:00:13,146 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 실행 성공: 
                SELECT COUNT(*) as count FROM fil...
2025-09-13 01:00:13,146 - SourceAnalyzer - DEBUG - logger.py:64 - 업데이트 쿼리 실행 성공: 
            UPDATE files
            SET file_typ..., 영향받은 행: 1
2025-09-13 01:00:13,146 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 실행 성공: 
                SELECT COUNT(*) as count FROM fil...
2025-09-13 01:00:13,146 - SourceAnalyzer - DEBUG - logger.py:64 - 업데이트 쿼리 실행 성공: 
            UPDATE files
            SET file_typ..., 영향받은 행: 1
2025-09-13 01:00:13,146 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 실행 성공: 
                SELECT COUNT(*) as count FROM fil...
2025-09-13 01:00:13,146 - SourceAnalyzer - DEBUG - logger.py:64 - 업데이트 쿼리 실행 성공: 
            UPDATE files
            SET file_typ..., 영향받은 행: 1
2025-09-13 01:00:13,146 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 실행 성공: 
                SELECT COUNT(*) as count FROM fil...
2025-09-13 01:00:13,146 - SourceAnalyzer - DEBUG - logger.py:64 - 업데이트 쿼리 실행 성공: 
            UPDATE files
            SET file_typ..., 영향받은 행: 1
2025-09-13 01:00:13,146 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 실행 성공: 
                SELECT COUNT(*) as count FROM fil...
2025-09-13 01:00:13,147 - SourceAnalyzer - DEBUG - logger.py:64 - 업데이트 쿼리 실행 성공: 
            UPDATE files
            SET file_typ..., 영향받은 행: 1
2025-09-13 01:00:13,147 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 실행 성공: 
                SELECT COUNT(*) as count FROM fil...
2025-09-13 01:00:13,147 - SourceAnalyzer - DEBUG - logger.py:64 - 업데이트 쿼리 실행 성공: 
            UPDATE files
            SET file_typ..., 영향받은 행: 1
2025-09-13 01:00:13,147 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 실행 성공: 
                SELECT COUNT(*) as count FROM fil...
2025-09-13 01:00:13,147 - SourceAnalyzer - DEBUG - logger.py:64 - 업데이트 쿼리 실행 성공: 
            UPDATE files
            SET file_typ..., 영향받은 행: 1
2025-09-13 01:00:13,147 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 실행 성공: 
                SELECT COUNT(*) as count FROM fil...
2025-09-13 01:00:13,147 - SourceAnalyzer - DEBUG - logger.py:64 - 업데이트 쿼리 실행 성공: 
            UPDATE files
            SET file_typ..., 영향받은 행: 1
2025-09-13 01:00:13,147 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 실행 성공: 
                SELECT COUNT(*) as count FROM fil...
2025-09-13 01:00:13,147 - SourceAnalyzer - DEBUG - logger.py:64 - 업데이트 쿼리 실행 성공: 
            UPDATE files
            SET file_typ..., 영향받은 행: 1
2025-09-13 01:00:13,147 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 실행 성공: 
                SELECT COUNT(*) as count FROM fil...
2025-09-13 01:00:13,147 - SourceAnalyzer - DEBUG - logger.py:64 - 업데이트 쿼리 실행 성공: 
            UPDATE files
            SET file_typ..., 영향받은 행: 1
2025-09-13 01:00:13,147 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 실행 성공: 
                SELECT COUNT(*) as count FROM fil...
2025-09-13 01:00:13,147 - SourceAnalyzer - DEBUG - logger.py:64 - 업데이트 쿼리 실행 성공: 
            UPDATE files
            SET file_typ..., 영향받은 행: 1
2025-09-13 01:00:13,147 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 실행 성공: 
                SELECT COUNT(*) as count FROM fil...
2025-09-13 01:00:13,147 - SourceAnalyzer - DEBUG - logger.py:64 - 업데이트 쿼리 실행 성공: 
            UPDATE files
            SET file_typ..., 영향받은 행: 1
2025-09-13 01:00:13,147 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 실행 성공: 
                SELECT COUNT(*) as count FROM fil...
2025-09-13 01:00:13,147 - SourceAnalyzer - DEBUG - logger.py:64 - 업데이트 쿼리 실행 성공: 
            UPDATE files
            SET file_typ..., 영향받은 행: 1
2025-09-13 01:00:13,147 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 실행 성공: 
                SELECT COUNT(*) as count FROM fil...
2025-09-13 01:00:13,147 - SourceAnalyzer - DEBUG - logger.py:64 - 업데이트 쿼리 실행 성공: 
            UPDATE files
            SET file_typ..., 영향받은 행: 1
2025-09-13 01:00:13,148 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 실행 성공: 
                SELECT COUNT(*) as count FROM fil...
2025-09-13 01:00:13,148 - SourceAnalyzer - DEBUG - logger.py:64 - 업데이트 쿼리 실행 성공: 
            UPDATE files
            SET file_typ..., 영향받은 행: 1
2025-09-13 01:00:13,148 - SourceAnalyzer - INFO - logger.py:68 - 파일 정보 저장 완료: 35개 파일
2025-09-13 01:00:13,148 - SourceAnalyzer - DEBUG - logger.py:64 - 업데이트 쿼리 실행 성공: UPDATE projects SET total_files = ? WHERE project_..., 영향받은 행: 1
2025-09-13 01:00:13,148 - SourceAnalyzer - DEBUG - logger.py:64 - 프로젝트 총 파일 수 업데이트: 35
2025-09-13 01:00:13,148 - SourceAnalyzer - INFO - logger.py:68 - === 파일 스캔 통계 ===
2025-09-13 01:00:13,148 - SourceAnalyzer - INFO - logger.py:68 - 총 파일 수: 35
2025-09-13 01:00:13,148 - SourceAnalyzer - INFO - logger.py:68 - 성공 스캔: 35
2025-09-13 01:00:13,148 - SourceAnalyzer - INFO - logger.py:68 - 오류 파일: 0
2025-09-13 01:00:13,148 - SourceAnalyzer - INFO - logger.py:68 - Java 파일: 19
2025-09-13 01:00:13,148 - SourceAnalyzer - INFO - logger.py:68 - XML 파일: 6
2025-09-13 01:00:13,148 - SourceAnalyzer - INFO - logger.py:68 - JSP 파일: 8
2025-09-13 01:00:13,148 - SourceAnalyzer - INFO - logger.py:68 - SQL 파일: 0
2025-09-13 01:00:13,148 - SourceAnalyzer - INFO - logger.py:68 - CSV 파일: 2
2025-09-13 01:00:13,148 - SourceAnalyzer - INFO - logger.py:68 - 기타 파일: 0
2025-09-13 01:00:13,148 - SourceAnalyzer - INFO - logger.py:68 - === 파일 스캔 완료 ===
2025-09-13 01:00:13,148 - SourceAnalyzer - DEBUG - logger.py:64 - 데이터베이스 연결 해제: D:\Analyzer\CreateMetaDb\projects\sampleSrc\metadata.db
2025-09-13 01:00:13,149 - SourceAnalyzer - INFO - logger.py:68 - 1단계 완료: 파일 정보 저장
2025-09-13 01:00:13,149 - SourceAnalyzer - INFO - logger.py:68 - 2단계 실행: 데이터베이스 구조 저장 및 컴포넌트 생성
2025-09-13 01:00:13,149 - SourceAnalyzer - INFO - logger.py:68 - === 데이터베이스 로딩 시작: 데이터베이스 구조 저장 ===
2025-09-13 01:00:13,151 - SourceAnalyzer - DEBUG - logger.py:64 - 데이터베이스 연결 성공: D:\Analyzer\CreateMetaDb\projects\sampleSrc\metadata.db
2025-09-13 01:00:13,152 - SourceAnalyzer - INFO - logger.py:68 - 인코딩 문제 감지, 다른 인코딩으로 재시도: ALL_TABLES.csv
2025-09-13 01:00:13,152 - SourceAnalyzer - DEBUG - logger.py:64 - 파일 읽기 성공 (cp949): D:\Analyzer\CreateMetaDb\projects\sampleSrc\db_schema\ALL_TABLES.csv
2025-09-13 01:00:13,152 - SourceAnalyzer - INFO - logger.py:68 - CSV 파일 로드 완료: D:\Analyzer\CreateMetaDb\projects\sampleSrc\db_schema\ALL_TABLES.csv, 16개 행
2025-09-13 01:00:13,153 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 실행 성공: 
                SELECT f.file_id 
               ...
2025-09-13 01:00:13,153 - SourceAnalyzer - DEBUG - logger.py:64 - 배치 쿼리 실행 성공: 
            INSERT OR IGNORE INTO tables (project..., 처리된 행: 16
2025-09-13 01:00:13,153 - SourceAnalyzer - INFO - logger.py:68 - 테이블 정보 저장 완료: 16개 테이블 (오류: 0개)
2025-09-13 01:00:13,153 - SourceAnalyzer - INFO - logger.py:68 - 인코딩 문제 감지, 다른 인코딩으로 재시도: ALL_TAB_COLUMNS.csv
2025-09-13 01:00:13,153 - SourceAnalyzer - DEBUG - logger.py:64 - 파일 읽기 성공 (cp949): D:\Analyzer\CreateMetaDb\projects\sampleSrc\db_schema\ALL_TAB_COLUMNS.csv
2025-09-13 01:00:13,153 - SourceAnalyzer - INFO - logger.py:68 - CSV 파일 로드 완료: D:\Analyzer\CreateMetaDb\projects\sampleSrc\db_schema\ALL_TAB_COLUMNS.csv, 91개 행
2025-09-13 01:00:13,154 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 실행 성공: 
                SELECT t.table_id 
              ...
2025-09-13 01:00:13,154 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 실행 성공: 
                SELECT t.table_id 
              ...
2025-09-13 01:00:13,154 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 실행 성공: 
                SELECT t.table_id 
              ...
2025-09-13 01:00:13,154 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 실행 성공: 
                SELECT t.table_id 
              ...
2025-09-13 01:00:13,154 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 실행 성공: 
                SELECT t.table_id 
              ...
2025-09-13 01:00:13,154 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 실행 성공: 
                SELECT t.table_id 
              ...
2025-09-13 01:00:13,154 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 실행 성공: 
                SELECT t.table_id 
              ...
2025-09-13 01:00:13,154 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 실행 성공: 
                SELECT t.table_id 
              ...
2025-09-13 01:00:13,154 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 실행 성공: 
                SELECT t.table_id 
              ...
2025-09-13 01:00:13,154 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 실행 성공: 
                SELECT t.table_id 
              ...
2025-09-13 01:00:13,154 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 실행 성공: 
                SELECT t.table_id 
              ...
2025-09-13 01:00:13,154 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 실행 성공: 
                SELECT t.table_id 
              ...
2025-09-13 01:00:13,154 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 실행 성공: 
                SELECT t.table_id 
              ...
2025-09-13 01:00:13,154 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 실행 성공: 
                SELECT t.table_id 
              ...
2025-09-13 01:00:13,154 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 실행 성공: 
                SELECT t.table_id 
              ...
2025-09-13 01:00:13,154 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 실행 성공: 
                SELECT t.table_id 
              ...
2025-09-13 01:00:13,155 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 실행 성공: 
                SELECT t.table_id 
              ...
2025-09-13 01:00:13,155 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 실행 성공: 
                SELECT t.table_id 
              ...
2025-09-13 01:00:13,155 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 실행 성공: 
                SELECT t.table_id 
              ...
2025-09-13 01:00:13,155 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 실행 성공: 
                SELECT t.table_id 
              ...
2025-09-13 01:00:13,155 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 실행 성공: 
                SELECT t.table_id 
              ...
2025-09-13 01:00:13,155 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 실행 성공: 
                SELECT t.table_id 
              ...
2025-09-13 01:00:13,155 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 실행 성공: 
                SELECT t.table_id 
              ...
2025-09-13 01:00:13,155 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 실행 성공: 
                SELECT t.table_id 
              ...
2025-09-13 01:00:13,155 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 실행 성공: 
                SELECT t.table_id 
              ...
2025-09-13 01:00:13,155 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 실행 성공: 
                SELECT t.table_id 
              ...
2025-09-13 01:00:13,155 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 실행 성공: 
                SELECT t.table_id 
              ...
2025-09-13 01:00:13,155 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 실행 성공: 
                SELECT t.table_id 
              ...
2025-09-13 01:00:13,155 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 실행 성공: 
                SELECT t.table_id 
              ...
2025-09-13 01:00:13,155 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 실행 성공: 
                SELECT t.table_id 
              ...
2025-09-13 01:00:13,155 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 실행 성공: 
                SELECT t.table_id 
              ...
2025-09-13 01:00:13,155 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 실행 성공: 
                SELECT t.table_id 
              ...
2025-09-13 01:00:13,155 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 실행 성공: 
                SELECT t.table_id 
              ...
2025-09-13 01:00:13,155 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 실행 성공: 
                SELECT t.table_id 
              ...
2025-09-13 01:00:13,155 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 실행 성공: 
                SELECT t.table_id 
              ...
2025-09-13 01:00:13,155 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 실행 성공: 
                SELECT t.table_id 
              ...
2025-09-13 01:00:13,156 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 실행 성공: 
                SELECT t.table_id 
              ...
2025-09-13 01:00:13,156 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 실행 성공: 
                SELECT t.table_id 
              ...
2025-09-13 01:00:13,156 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 실행 성공: 
                SELECT t.table_id 
              ...
2025-09-13 01:00:13,156 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 실행 성공: 
                SELECT t.table_id 
              ...
2025-09-13 01:00:13,156 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 실행 성공: 
                SELECT t.table_id 
              ...
2025-09-13 01:00:13,156 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 실행 성공: 
                SELECT t.table_id 
              ...
2025-09-13 01:00:13,156 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 실행 성공: 
                SELECT t.table_id 
              ...
2025-09-13 01:00:13,156 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 실행 성공: 
                SELECT t.table_id 
              ...
2025-09-13 01:00:13,156 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 실행 성공: 
                SELECT t.table_id 
              ...
2025-09-13 01:00:13,156 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 실행 성공: 
                SELECT t.table_id 
              ...
2025-09-13 01:00:13,156 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 실행 성공: 
                SELECT t.table_id 
              ...
2025-09-13 01:00:13,156 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 실행 성공: 
                SELECT t.table_id 
              ...
2025-09-13 01:00:13,156 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 실행 성공: 
                SELECT t.table_id 
              ...
2025-09-13 01:00:13,156 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 실행 성공: 
                SELECT t.table_id 
              ...
2025-09-13 01:00:13,156 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 실행 성공: 
                SELECT t.table_id 
              ...
2025-09-13 01:00:13,156 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 실행 성공: 
                SELECT t.table_id 
              ...
2025-09-13 01:00:13,156 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 실행 성공: 
                SELECT t.table_id 
              ...
2025-09-13 01:00:13,156 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 실행 성공: 
                SELECT t.table_id 
              ...
2025-09-13 01:00:13,156 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 실행 성공: 
                SELECT t.table_id 
              ...
2025-09-13 01:00:13,157 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 실행 성공: 
                SELECT t.table_id 
              ...
2025-09-13 01:00:13,157 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 실행 성공: 
                SELECT t.table_id 
              ...
2025-09-13 01:00:13,157 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 실행 성공: 
                SELECT t.table_id 
              ...
2025-09-13 01:00:13,157 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 실행 성공: 
                SELECT t.table_id 
              ...
2025-09-13 01:00:13,157 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 실행 성공: 
                SELECT t.table_id 
              ...
2025-09-13 01:00:13,157 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 실행 성공: 
                SELECT t.table_id 
              ...
2025-09-13 01:00:13,157 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 실행 성공: 
                SELECT t.table_id 
              ...
2025-09-13 01:00:13,157 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 실행 성공: 
                SELECT t.table_id 
              ...
2025-09-13 01:00:13,157 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 실행 성공: 
                SELECT t.table_id 
              ...
2025-09-13 01:00:13,157 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 실행 성공: 
                SELECT t.table_id 
              ...
2025-09-13 01:00:13,157 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 실행 성공: 
                SELECT t.table_id 
              ...
2025-09-13 01:00:13,157 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 실행 성공: 
                SELECT t.table_id 
              ...
2025-09-13 01:00:13,157 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 실행 성공: 
                SELECT t.table_id 
              ...
2025-09-13 01:00:13,157 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 실행 성공: 
                SELECT t.table_id 
              ...
2025-09-13 01:00:13,157 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 실행 성공: 
                SELECT t.table_id 
              ...
2025-09-13 01:00:13,157 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 실행 성공: 
                SELECT t.table_id 
              ...
2025-09-13 01:00:13,157 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 실행 성공: 
                SELECT t.table_id 
              ...
2025-09-13 01:00:13,157 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 실행 성공: 
                SELECT t.table_id 
              ...
2025-09-13 01:00:13,158 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 실행 성공: 
                SELECT t.table_id 
              ...
2025-09-13 01:00:13,158 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 실행 성공: 
                SELECT t.table_id 
              ...
2025-09-13 01:00:13,158 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 실행 성공: 
                SELECT t.table_id 
              ...
2025-09-13 01:00:13,158 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 실행 성공: 
                SELECT t.table_id 
              ...
2025-09-13 01:00:13,158 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 실행 성공: 
                SELECT t.table_id 
              ...
2025-09-13 01:00:13,158 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 실행 성공: 
                SELECT t.table_id 
              ...
2025-09-13 01:00:13,158 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 실행 성공: 
                SELECT t.table_id 
              ...
2025-09-13 01:00:13,158 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 실행 성공: 
                SELECT t.table_id 
              ...
2025-09-13 01:00:13,158 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 실행 성공: 
                SELECT t.table_id 
              ...
2025-09-13 01:00:13,158 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 실행 성공: 
                SELECT t.table_id 
              ...
2025-09-13 01:00:13,158 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 실행 성공: 
                SELECT t.table_id 
              ...
2025-09-13 01:00:13,158 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 실행 성공: 
                SELECT t.table_id 
              ...
2025-09-13 01:00:13,158 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 실행 성공: 
                SELECT t.table_id 
              ...
2025-09-13 01:00:13,158 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 실행 성공: 
                SELECT t.table_id 
              ...
2025-09-13 01:00:13,158 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 실행 성공: 
                SELECT t.table_id 
              ...
2025-09-13 01:00:13,158 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 실행 성공: 
                SELECT t.table_id 
              ...
2025-09-13 01:00:13,158 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 실행 성공: 
                SELECT t.table_id 
              ...
2025-09-13 01:00:13,158 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 실행 성공: 
                SELECT t.table_id 
              ...
2025-09-13 01:00:13,159 - SourceAnalyzer - DEBUG - logger.py:64 - 배치 쿼리 실행 성공: 
            INSERT OR IGNORE INTO columns (table_..., 처리된 행: 91
2025-09-13 01:00:13,159 - SourceAnalyzer - INFO - logger.py:68 - 컬럼 정보 저장 완료: 91개 컬럼 (오류: 0개)
2025-09-13 01:00:13,159 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 실행 성공: 
                SELECT f.file_id 
               ...
2025-09-13 01:00:13,159 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 실행 성공: 
                SELECT table_id, table_name, tabl...
2025-09-13 01:00:13,159 - SourceAnalyzer - DEBUG - logger.py:64 - 배치 쿼리 실행 성공: 
            INSERT OR IGNORE INTO components (pro..., 처리된 행: 20
2025-09-13 01:00:13,159 - SourceAnalyzer - INFO - logger.py:68 - 테이블 컴포넌트 생성 완료: 20개
2025-09-13 01:00:13,159 - SourceAnalyzer - DEBUG - logger.py:64 - 업데이트 쿼리 실행 성공: 
                UPDATE tables 
                SE..., 영향받은 행: 20
2025-09-13 01:00:13,160 - SourceAnalyzer - DEBUG - logger.py:64 - 테이블 component_id 업데이트 완료
2025-09-13 01:00:13,160 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 실행 성공: 
                SELECT f.file_id 
               ...
2025-09-13 01:00:13,160 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 실행 성공: 
                SELECT c.column_id, c.column_name...
2025-09-13 01:00:13,160 - SourceAnalyzer - DEBUG - logger.py:64 - 배치 쿼리 실행 성공: 
            INSERT OR IGNORE INTO components (pro..., 처리된 행: 91
2025-09-13 01:00:13,160 - SourceAnalyzer - INFO - logger.py:68 - 컬럼 컴포넌트 생성 완료: 91개
2025-09-13 01:00:13,161 - SourceAnalyzer - INFO - logger.py:68 - === 데이터베이스 구조 저장 통계 ===
2025-09-13 01:00:13,161 - SourceAnalyzer - INFO - logger.py:68 - 테이블 로드: 16 (오류: 0)
2025-09-13 01:00:13,161 - SourceAnalyzer - INFO - logger.py:68 - 컬럼 로드: 91 (오류: 0)
2025-09-13 01:00:13,161 - SourceAnalyzer - INFO - logger.py:68 - 컴포넌트 생성: 111 (오류: 0)
2025-09-13 01:00:13,161 - SourceAnalyzer - INFO - logger.py:68 - 오류 없이 완료
2025-09-13 01:00:13,161 - SourceAnalyzer - INFO - logger.py:68 - === 데이터베이스 로딩 완료 ===
2025-09-13 01:00:13,161 - SourceAnalyzer - DEBUG - logger.py:64 - 데이터베이스 연결 해제: D:\Analyzer\CreateMetaDb\projects\sampleSrc\metadata.db
2025-09-13 01:00:13,161 - SourceAnalyzer - INFO - logger.py:68 - 2단계 완료: 데이터베이스 구조 저장 및 컴포넌트 생성
2025-09-13 01:00:13,161 - SourceAnalyzer - INFO - logger.py:68 - 3단계 실행: XML 파일 분석 및 SQL 컴포넌트 등록 + JOIN 관계 분석
2025-09-13 01:00:13,178 - SourceAnalyzer - DEBUG - logger.py:64 - 파일 읽기 성공: config/parser/sql_keyword.yaml
2025-09-13 01:00:13,199 - SourceAnalyzer - DEBUG - logger.py:64 - YAML 설정 파일 로드 성공: config/parser/sql_keyword.yaml
2025-09-13 01:00:13,199 - SourceAnalyzer - DEBUG - logger.py:64 - 파일 읽기 성공: config/parser/xml_parser_config.yaml
2025-09-13 01:00:13,206 - SourceAnalyzer - DEBUG - logger.py:64 - YAML 설정 파일 로드 성공: config/parser/xml_parser_config.yaml
2025-09-13 01:00:13,207 - SourceAnalyzer - DEBUG - logger.py:64 - 데이터베이스 연결 성공: D:\Analyzer\CreateMetaDb\projects\sampleSrc\SqlContent.db
2025-09-13 01:00:13,207 - SourceAnalyzer - DEBUG - logger.py:64 - SQL 스크립트 실행 성공: D:\Analyzer\CreateMetaDb\database\create_sql_content_db.sql
2025-09-13 01:00:13,207 - SourceAnalyzer - INFO - logger.py:68 - SQL Content 데이터베이스 초기화 완료: D:\Analyzer\CreateMetaDb\projects\sampleSrc\SqlContent.db
2025-09-13 01:00:13,207 - SourceAnalyzer - INFO - logger.py:68 - === XML 로딩 시작: 3~4단계 통합 처리 ===
2025-09-13 01:00:13,208 - SourceAnalyzer - DEBUG - logger.py:64 - 데이터베이스 연결 성공: D:\Analyzer\CreateMetaDb\projects\sampleSrc\metadata.db
2025-09-13 01:00:13,208 - SourceAnalyzer - INFO - logger.py:68 - SQL Content Processor 초기화 시작
2025-09-13 01:00:13,209 - SourceAnalyzer - DEBUG - logger.py:64 - 데이터베이스 연결 성공: D:\Analyzer\CreateMetaDb\projects\sampleSrc\SqlContent.db
2025-09-13 01:00:13,210 - SourceAnalyzer - DEBUG - logger.py:64 - SQL 스크립트 실행 성공: D:\Analyzer\CreateMetaDb\database\create_sql_content_db.sql
2025-09-13 01:00:13,210 - SourceAnalyzer - INFO - logger.py:68 - SQL Content 데이터베이스 초기화 완료: D:\Analyzer\CreateMetaDb\projects\sampleSrc\SqlContent.db
2025-09-13 01:00:13,210 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 실행 성공: 
                SELECT file_id, file_path, file_n...
2025-09-13 01:00:13,210 - SourceAnalyzer - DEBUG - logger.py:64 - LOAD XML ID 매핑: src\com\example\dynamicquery + UserMapper.xml -> src/com/example/dynamicquery/UserMapper.xml (ID: 5)
2025-09-13 01:00:13,210 - SourceAnalyzer - DEBUG - logger.py:64 - LOAD XML ID 매핑: src\main\resources\mybatis\mapper + ImplicitJoinMapper.xml -> src/main/resources/mybatis/mapper/ImplicitJoinMapper.xml (ID: 23)
2025-09-13 01:00:13,210 - SourceAnalyzer - DEBUG - logger.py:64 - LOAD XML ID 매핑: src\main\resources\mybatis\mapper + ImplicitJoinTestMapper.xml -> src/main/resources/mybatis/mapper/ImplicitJoinTestMapper.xml (ID: 24)
2025-09-13 01:00:13,210 - SourceAnalyzer - DEBUG - logger.py:64 - LOAD XML ID 매핑: src\main\resources\mybatis\mapper + MixedErrorMapper.xml -> src/main/resources/mybatis/mapper/MixedErrorMapper.xml (ID: 25)
2025-09-13 01:00:13,210 - SourceAnalyzer - DEBUG - logger.py:64 - LOAD XML ID 매핑: src\main\resources\mybatis\mapper + ProductMapper.xml -> src/main/resources/mybatis/mapper/ProductMapper.xml (ID: 26)
2025-09-13 01:00:13,210 - SourceAnalyzer - DEBUG - logger.py:64 - LOAD XML ID 매핑: src\main\resources\mybatis\mapper + UserMapper.xml -> src/main/resources/mybatis/mapper/UserMapper.xml (ID: 27)
2025-09-13 01:00:13,210 - SourceAnalyzer - INFO - logger.py:68 - XML 파일 ID 매핑 로드 완료: 6개 파일
2025-09-13 01:00:13,210 - SourceAnalyzer - DEBUG - logger.py:64 - 매핑 테이블 키들: ['src/com/example/dynamicquery/UserMapper.xml', 'src/main/resources/mybatis/mapper/ImplicitJoinMapper.xml', 'src/main/resources/mybatis/mapper/ImplicitJoinTestMapper.xml', 'src/main/resources/mybatis/mapper/MixedErrorMapper.xml', 'src/main/resources/mybatis/mapper/ProductMapper.xml', 'src/main/resources/mybatis/mapper/UserMapper.xml']
2025-09-13 01:00:13,210 - SourceAnalyzer - INFO - logger.py:68 - SQL Content Processor 초기화 완료
2025-09-13 01:00:13,211 - SourceAnalyzer - DEBUG - logger.py:64 - 파일 읽기 성공: D:\Analyzer\CreateMetaDb\projects\sampleSrc\src\com\example\dynamicquery\UserMapper.xml
2025-09-13 01:00:13,212 - SourceAnalyzer - DEBUG - logger.py:64 - 파일 읽기 성공: D:\Analyzer\CreateMetaDb\projects\sampleSrc\src\main\resources\mybatis\mapper\ImplicitJoinMapper.xml
2025-09-13 01:00:13,212 - SourceAnalyzer - DEBUG - logger.py:64 - 파일 읽기 성공: D:\Analyzer\CreateMetaDb\projects\sampleSrc\src\main\resources\mybatis\mapper\ImplicitJoinTestMapper.xml
2025-09-13 01:00:13,212 - SourceAnalyzer - DEBUG - logger.py:64 - 파일 읽기 성공: D:\Analyzer\CreateMetaDb\projects\sampleSrc\src\main\resources\mybatis\mapper\MixedErrorMapper.xml
2025-09-13 01:00:13,213 - SourceAnalyzer - DEBUG - logger.py:64 - 파일 읽기 성공: D:\Analyzer\CreateMetaDb\projects\sampleSrc\src\main\resources\mybatis\mapper\ProductMapper.xml
2025-09-13 01:00:13,213 - SourceAnalyzer - DEBUG - logger.py:64 - 파일 읽기 성공: D:\Analyzer\CreateMetaDb\projects\sampleSrc\src\main\resources\mybatis\mapper\UserMapper.xml
2025-09-13 01:00:13,213 - SourceAnalyzer - INFO - logger.py:68 - MyBatis XML 파일 수집 완료: 6개
2025-09-13 01:00:13,215 - SourceAnalyzer - DEBUG - logger.py:64 - 파일 읽기 성공: D:\Analyzer\CreateMetaDb\projects\sampleSrc\src\com\example\dynamicquery\UserMapper.xml
2025-09-13 01:00:13,222 - SourceAnalyzer - DEBUG - logger.py:64 - 파일 읽기 성공: D:\Analyzer\CreateMetaDb\projects\sampleSrc\src\com\example\dynamicquery\UserMapper.xml
2025-09-13 01:00:13,223 - SourceAnalyzer - DEBUG - logger.py:64 - 파일 읽기 성공: D:\Analyzer\CreateMetaDb\projects\sampleSrc\src\com\example\dynamicquery\UserMapper.xml
2025-09-13 01:00:13,224 - SourceAnalyzer - DEBUG - logger.py:64 - 파일 읽기 성공: D:\Analyzer\CreateMetaDb\projects\sampleSrc\src\com\example\dynamicquery\UserMapper.xml
2025-09-13 01:00:13,224 - SourceAnalyzer - DEBUG - logger.py:64 - 파일 읽기 성공: D:\Analyzer\CreateMetaDb\projects\sampleSrc\src\com\example\dynamicquery\UserMapper.xml
2025-09-13 01:00:13,225 - SourceAnalyzer - DEBUG - logger.py:64 - 파일 읽기 성공: D:\Analyzer\CreateMetaDb\projects\sampleSrc\src\com\example\dynamicquery\UserMapper.xml
2025-09-13 01:00:13,226 - SourceAnalyzer - DEBUG - logger.py:64 - 파일 읽기 성공: D:\Analyzer\CreateMetaDb\projects\sampleSrc\src\com\example\dynamicquery\UserMapper.xml
2025-09-13 01:00:13,227 - SourceAnalyzer - DEBUG - logger.py:64 - 파일 읽기 성공: D:\Analyzer\CreateMetaDb\projects\sampleSrc\src\com\example\dynamicquery\UserMapper.xml
2025-09-13 01:00:13,228 - SourceAnalyzer - INFO - logger.py:68 - === XML 로딩 엔진: SQL 컴포넌트 저장 시작 ===
2025-09-13 01:00:13,228 - SourceAnalyzer - INFO - logger.py:68 - 전달받은 SQL 쿼리 수: 8개
2025-09-13 01:00:13,228 - SourceAnalyzer - INFO - logger.py:68 - XML에서 추출된 SQL 쿼리 타입별 통계: {'select': 8}
2025-09-13 01:00:13,228 - SourceAnalyzer - INFO - logger.py:68 - 프로젝트 ID: 1
2025-09-13 01:00:13,229 - SourceAnalyzer - INFO - logger.py:68 - SQL Content Processor를 사용하여 처리 시작
2025-09-13 01:00:13,229 - SourceAnalyzer - INFO - logger.py:68 - process_sql_queries 호출 전: sql_queries=8, project_id=1
2025-09-13 01:00:13,229 - SourceAnalyzer - INFO - logger.py:68 - === SQL 쿼리 처리 시작 ===
2025-09-13 01:00:13,229 - SourceAnalyzer - INFO - logger.py:68 - 전달받은 SQL 쿼리 수: 8
2025-09-13 01:00:13,229 - SourceAnalyzer - INFO - logger.py:68 - 프로젝트 ID: 1
2025-09-13 01:00:13,229 - SourceAnalyzer - INFO - logger.py:68 - SQL 쿼리 타입별 통계: {'select': 8}
2025-09-13 01:00:13,229 - SourceAnalyzer - DEBUG - logger.py:64 - SQL 쿼리 리스트 크기: 8
2025-09-13 01:00:13,229 - SourceAnalyzer - DEBUG - logger.py:64 - SQL 쿼리 리스트 타입: <class 'list'>
2025-09-13 01:00:13,229 - SourceAnalyzer - DEBUG - logger.py:64 - 첫 번째 쿼리 정보: {'tag_name': 'select', 'query_id': 'findUsers', 'sql_content': 'SELECT u.USER_ID, u.USER_NAME, u.EMAIL, u.STATUS, d.DEPT_NAME, p.PROFILE_IMAGE_URL, u.CREATED_AT FROM USERS u, DEPARTMENTS d, USER_PROFILES p WHERE u.DEPT_ID = d.DEPT_ID AND u.USER_ID = p.USER_ID(+)', 'file_path': 'D:\\Analyzer\\CreateMetaDb\\projects\\sampleSrc\\src\\com\\example\\dynamicquery\\UserMapper.xml', 'line_start': 14, 'line_end': 46, 'hash_value': '02fb23379f0fe5133a141a75ed789e89'}
2025-09-13 01:00:13,229 - SourceAnalyzer - DEBUG - logger.py:64 - SQL 쿼리 처리 루프 시작: 1/8
2025-09-13 01:00:13,229 - SourceAnalyzer - DEBUG - logger.py:64 - SQL 쿼리 처리 시작: findUsers (select)
2025-09-13 01:00:13,229 - SourceAnalyzer - DEBUG - logger.py:64 - GET XML ID 조회: D:\Analyzer\CreateMetaDb\projects\sampleSrc\src\com\example\dynamicquery\UserMapper.xml -> src/com/example/dynamicquery/UserMapper.xml
2025-09-13 01:00:13,229 - SourceAnalyzer - DEBUG - logger.py:64 - 메모리 매핑 테이블 키들: ['src/com/example/dynamicquery/UserMapper.xml', 'src/main/resources/mybatis/mapper/ImplicitJoinMapper.xml', 'src/main/resources/mybatis/mapper/ImplicitJoinTestMapper.xml', 'src/main/resources/mybatis/mapper/MixedErrorMapper.xml', 'src/main/resources/mybatis/mapper/ProductMapper.xml', 'src/main/resources/mybatis/mapper/UserMapper.xml']
2025-09-13 01:00:13,229 - SourceAnalyzer - DEBUG - logger.py:64 - 메모리에서 file_id 조회 성공: src/com/example/dynamicquery/UserMapper.xml -> 5
2025-09-13 01:00:13,229 - SourceAnalyzer - DEBUG - logger.py:64 - 파일 ID 조회 성공: 5
2025-09-13 01:00:13,229 - SourceAnalyzer - DEBUG - logger.py:64 - 컴포넌트 저장 시도: findUsers (select) -> SQL_SELECT
2025-09-13 01:00:13,229 - SourceAnalyzer - DEBUG - logger.py:64 - Upsert 실행: components
2025-09-13 01:00:13,229 - SourceAnalyzer - DEBUG - logger.py:64 - 데이터: {'project_id': 1, 'component_type': 'SQL_SELECT', 'component_name': 'findUsers', 'parent_id': None, 'layer': 'SQL', 'file_id': 5, 'line_start': 14, 'line_end': 46, 'hash_value': '02fb23379f0fe5133a141a75ed789e89', 'has_error': 'N', 'error_message': None, 'del_yn': 'N'}
2025-09-13 01:00:13,229 - SourceAnalyzer - DEBUG - logger.py:64 - Components upsert 시작: findUsers (SQL_SELECT)
2025-09-13 01:00:13,229 - SourceAnalyzer - DEBUG - logger.py:64 - 기존 레코드 확인 쿼리: 
                    SELECT component_id FROM components 
                    WHERE project_id = ? AND component_name = ? AND file_id = ?
                    
2025-09-13 01:00:13,229 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 파라미터: (1, 'findUsers', 5)
2025-09-13 01:00:13,229 - SourceAnalyzer - DEBUG - logger.py:64 - 기존 레코드 조회 결과: <sqlite3.Row object at 0x0000015C84B75B10>
2025-09-13 01:00:13,229 - SourceAnalyzer - DEBUG - logger.py:64 - UPDATE 쿼리: 
                        UPDATE components SET component_type = ?, parent_id = ?, layer = ?, line_start = ?, line_end = ?, hash_value = ?, has_error = ?, error_message = ?, del_yn = ?
                        WHERE component_id = ?
                        
2025-09-13 01:00:13,229 - SourceAnalyzer - DEBUG - logger.py:64 - UPDATE 파라미터: ['SQL_SELECT', None, 'SQL', 14, 46, '02fb23379f0fe5133a141a75ed789e89', 'N', None, 'N', 1944]
2025-09-13 01:00:13,230 - SourceAnalyzer - DEBUG - logger.py:64 - UPDATE 실행 완료: component_id = 1944
2025-09-13 01:00:13,230 - SourceAnalyzer - DEBUG - logger.py:64 - 컴포넌트 저장 완료: findUsers (ID: 1944)
2025-09-13 01:00:13,230 - SourceAnalyzer - DEBUG - logger.py:64 - 컴포넌트 저장 결과: component_id = 1944
2025-09-13 01:00:13,230 - SourceAnalyzer - DEBUG - logger.py:64 - SQL Content 저장 시작: findUsers (component_id: 1944)
2025-09-13 01:00:13,230 - SourceAnalyzer - DEBUG - logger.py:64 - SQL Content 상대경로: src/com/example/dynamicquery
2025-09-13 01:00:13,230 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 실행 성공: SELECT project_id FROM projects WHERE project_id =...
2025-09-13 01:00:13,230 - SourceAnalyzer - DEBUG - logger.py:64 - 업데이트 쿼리 실행 성공: 
            INSERT OR REPLACE INTO sql_contents (..., 영향받은 행: 1
2025-09-13 01:00:13,230 - SourceAnalyzer - DEBUG - logger.py:64 - SQL 내용 저장 완료: findUsers - src/com/example/dynamicquery
2025-09-13 01:00:13,230 - SourceAnalyzer - DEBUG - logger.py:64 - SQL Content 저장 완료: findUsers - src/com/example/dynamicquery
2025-09-13 01:00:13,230 - SourceAnalyzer - DEBUG - logger.py:64 - SQL 쿼리 처리 완료: findUsers
2025-09-13 01:00:13,230 - SourceAnalyzer - DEBUG - logger.py:64 - SQL 쿼리 처리 루프 시작: 2/8
2025-09-13 01:00:13,230 - SourceAnalyzer - DEBUG - logger.py:64 - SQL 쿼리 처리 시작: findUsersWithAnsiJoin (select)
2025-09-13 01:00:13,231 - SourceAnalyzer - DEBUG - logger.py:64 - GET XML ID 조회: D:\Analyzer\CreateMetaDb\projects\sampleSrc\src\com\example\dynamicquery\UserMapper.xml -> src/com/example/dynamicquery/UserMapper.xml
2025-09-13 01:00:13,231 - SourceAnalyzer - DEBUG - logger.py:64 - 메모리 매핑 테이블 키들: ['src/com/example/dynamicquery/UserMapper.xml', 'src/main/resources/mybatis/mapper/ImplicitJoinMapper.xml', 'src/main/resources/mybatis/mapper/ImplicitJoinTestMapper.xml', 'src/main/resources/mybatis/mapper/MixedErrorMapper.xml', 'src/main/resources/mybatis/mapper/ProductMapper.xml', 'src/main/resources/mybatis/mapper/UserMapper.xml']
2025-09-13 01:00:13,231 - SourceAnalyzer - DEBUG - logger.py:64 - 메모리에서 file_id 조회 성공: src/com/example/dynamicquery/UserMapper.xml -> 5
2025-09-13 01:00:13,231 - SourceAnalyzer - DEBUG - logger.py:64 - 파일 ID 조회 성공: 5
2025-09-13 01:00:13,231 - SourceAnalyzer - DEBUG - logger.py:64 - 컴포넌트 저장 시도: findUsersWithAnsiJoin (select) -> SQL_SELECT
2025-09-13 01:00:13,231 - SourceAnalyzer - DEBUG - logger.py:64 - Upsert 실행: components
2025-09-13 01:00:13,231 - SourceAnalyzer - DEBUG - logger.py:64 - 데이터: {'project_id': 1, 'component_type': 'SQL_SELECT', 'component_name': 'findUsersWithAnsiJoin', 'parent_id': None, 'layer': 'SQL', 'file_id': 5, 'line_start': 50, 'line_end': 80, 'hash_value': '2bc1cc752e46133b955373137387e73d', 'has_error': 'N', 'error_message': None, 'del_yn': 'N'}
2025-09-13 01:00:13,231 - SourceAnalyzer - DEBUG - logger.py:64 - Components upsert 시작: findUsersWithAnsiJoin (SQL_SELECT)
2025-09-13 01:00:13,231 - SourceAnalyzer - DEBUG - logger.py:64 - 기존 레코드 확인 쿼리: 
                    SELECT component_id FROM components 
                    WHERE project_id = ? AND component_name = ? AND file_id = ?
                    
2025-09-13 01:00:13,231 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 파라미터: (1, 'findUsersWithAnsiJoin', 5)
2025-09-13 01:00:13,231 - SourceAnalyzer - DEBUG - logger.py:64 - 기존 레코드 조회 결과: <sqlite3.Row object at 0x0000015C84A82FB0>
2025-09-13 01:00:13,231 - SourceAnalyzer - DEBUG - logger.py:64 - UPDATE 쿼리: 
                        UPDATE components SET component_type = ?, parent_id = ?, layer = ?, line_start = ?, line_end = ?, hash_value = ?, has_error = ?, error_message = ?, del_yn = ?
                        WHERE component_id = ?
                        
2025-09-13 01:00:13,231 - SourceAnalyzer - DEBUG - logger.py:64 - UPDATE 파라미터: ['SQL_SELECT', None, 'SQL', 50, 80, '2bc1cc752e46133b955373137387e73d', 'N', None, 'N', 1945]
2025-09-13 01:00:13,231 - SourceAnalyzer - DEBUG - logger.py:64 - UPDATE 실행 완료: component_id = 1945
2025-09-13 01:00:13,231 - SourceAnalyzer - DEBUG - logger.py:64 - 컴포넌트 저장 완료: findUsersWithAnsiJoin (ID: 1945)
2025-09-13 01:00:13,231 - SourceAnalyzer - DEBUG - logger.py:64 - 컴포넌트 저장 결과: component_id = 1945
2025-09-13 01:00:13,231 - SourceAnalyzer - DEBUG - logger.py:64 - SQL Content 저장 시작: findUsersWithAnsiJoin (component_id: 1945)
2025-09-13 01:00:13,231 - SourceAnalyzer - DEBUG - logger.py:64 - SQL Content 상대경로: src/com/example/dynamicquery
2025-09-13 01:00:13,231 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 실행 성공: SELECT project_id FROM projects WHERE project_id =...
2025-09-13 01:00:13,231 - SourceAnalyzer - DEBUG - logger.py:64 - 업데이트 쿼리 실행 성공: 
            INSERT OR REPLACE INTO sql_contents (..., 영향받은 행: 1
2025-09-13 01:00:13,231 - SourceAnalyzer - DEBUG - logger.py:64 - SQL 내용 저장 완료: findUsersWithAnsiJoin - src/com/example/dynamicquery
2025-09-13 01:00:13,231 - SourceAnalyzer - DEBUG - logger.py:64 - SQL Content 저장 완료: findUsersWithAnsiJoin - src/com/example/dynamicquery
2025-09-13 01:00:13,232 - SourceAnalyzer - DEBUG - logger.py:64 - SQL 쿼리 처리 완료: findUsersWithAnsiJoin
2025-09-13 01:00:13,232 - SourceAnalyzer - DEBUG - logger.py:64 - SQL 쿼리 처리 루프 시작: 3/8
2025-09-13 01:00:13,232 - SourceAnalyzer - DEBUG - logger.py:64 - SQL 쿼리 처리 시작: findUsersWithAliasOmission (select)
2025-09-13 01:00:13,232 - SourceAnalyzer - DEBUG - logger.py:64 - GET XML ID 조회: D:\Analyzer\CreateMetaDb\projects\sampleSrc\src\com\example\dynamicquery\UserMapper.xml -> src/com/example/dynamicquery/UserMapper.xml
2025-09-13 01:00:13,232 - SourceAnalyzer - DEBUG - logger.py:64 - 메모리 매핑 테이블 키들: ['src/com/example/dynamicquery/UserMapper.xml', 'src/main/resources/mybatis/mapper/ImplicitJoinMapper.xml', 'src/main/resources/mybatis/mapper/ImplicitJoinTestMapper.xml', 'src/main/resources/mybatis/mapper/MixedErrorMapper.xml', 'src/main/resources/mybatis/mapper/ProductMapper.xml', 'src/main/resources/mybatis/mapper/UserMapper.xml']
2025-09-13 01:00:13,232 - SourceAnalyzer - DEBUG - logger.py:64 - 메모리에서 file_id 조회 성공: src/com/example/dynamicquery/UserMapper.xml -> 5
2025-09-13 01:00:13,232 - SourceAnalyzer - DEBUG - logger.py:64 - 파일 ID 조회 성공: 5
2025-09-13 01:00:13,232 - SourceAnalyzer - DEBUG - logger.py:64 - 컴포넌트 저장 시도: findUsersWithAliasOmission (select) -> SQL_SELECT
2025-09-13 01:00:13,232 - SourceAnalyzer - DEBUG - logger.py:64 - Upsert 실행: components
2025-09-13 01:00:13,232 - SourceAnalyzer - DEBUG - logger.py:64 - 데이터: {'project_id': 1, 'component_type': 'SQL_SELECT', 'component_name': 'findUsersWithAliasOmission', 'parent_id': None, 'layer': 'SQL', 'file_id': 5, 'line_start': 83, 'line_end': 100, 'hash_value': '96e1e7c60ded3f8d4035644f010a5fe6', 'has_error': 'N', 'error_message': None, 'del_yn': 'N'}
2025-09-13 01:00:13,232 - SourceAnalyzer - DEBUG - logger.py:64 - Components upsert 시작: findUsersWithAliasOmission (SQL_SELECT)
2025-09-13 01:00:13,232 - SourceAnalyzer - DEBUG - logger.py:64 - 기존 레코드 확인 쿼리: 
                    SELECT component_id FROM components 
                    WHERE project_id = ? AND component_name = ? AND file_id = ?
                    
2025-09-13 01:00:13,232 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 파라미터: (1, 'findUsersWithAliasOmission', 5)
2025-09-13 01:00:13,232 - SourceAnalyzer - DEBUG - logger.py:64 - 기존 레코드 조회 결과: <sqlite3.Row object at 0x0000015C84A82FB0>
2025-09-13 01:00:13,232 - SourceAnalyzer - DEBUG - logger.py:64 - UPDATE 쿼리: 
                        UPDATE components SET component_type = ?, parent_id = ?, layer = ?, line_start = ?, line_end = ?, hash_value = ?, has_error = ?, error_message = ?, del_yn = ?
                        WHERE component_id = ?
                        
2025-09-13 01:00:13,232 - SourceAnalyzer - DEBUG - logger.py:64 - UPDATE 파라미터: ['SQL_SELECT', None, 'SQL', 83, 100, '96e1e7c60ded3f8d4035644f010a5fe6', 'N', None, 'N', 1946]
2025-09-13 01:00:13,232 - SourceAnalyzer - DEBUG - logger.py:64 - UPDATE 실행 완료: component_id = 1946
2025-09-13 01:00:13,232 - SourceAnalyzer - DEBUG - logger.py:64 - 컴포넌트 저장 완료: findUsersWithAliasOmission (ID: 1946)
2025-09-13 01:00:13,232 - SourceAnalyzer - DEBUG - logger.py:64 - 컴포넌트 저장 결과: component_id = 1946
2025-09-13 01:00:13,232 - SourceAnalyzer - DEBUG - logger.py:64 - SQL Content 저장 시작: findUsersWithAliasOmission (component_id: 1946)
2025-09-13 01:00:13,232 - SourceAnalyzer - DEBUG - logger.py:64 - SQL Content 상대경로: src/com/example/dynamicquery
2025-09-13 01:00:13,232 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 실행 성공: SELECT project_id FROM projects WHERE project_id =...
2025-09-13 01:00:13,233 - SourceAnalyzer - DEBUG - logger.py:64 - 업데이트 쿼리 실행 성공: 
            INSERT OR REPLACE INTO sql_contents (..., 영향받은 행: 1
2025-09-13 01:00:13,233 - SourceAnalyzer - DEBUG - logger.py:64 - SQL 내용 저장 완료: findUsersWithAliasOmission - src/com/example/dynamicquery
2025-09-13 01:00:13,233 - SourceAnalyzer - DEBUG - logger.py:64 - SQL Content 저장 완료: findUsersWithAliasOmission - src/com/example/dynamicquery
2025-09-13 01:00:13,233 - SourceAnalyzer - DEBUG - logger.py:64 - SQL 쿼리 처리 완료: findUsersWithAliasOmission
2025-09-13 01:00:13,233 - SourceAnalyzer - DEBUG - logger.py:64 - SQL 쿼리 처리 루프 시작: 4/8
2025-09-13 01:00:13,233 - SourceAnalyzer - DEBUG - logger.py:64 - SQL 쿼리 처리 시작: findUsersWithMixedJoins (select)
2025-09-13 01:00:13,233 - SourceAnalyzer - DEBUG - logger.py:64 - GET XML ID 조회: D:\Analyzer\CreateMetaDb\projects\sampleSrc\src\com\example\dynamicquery\UserMapper.xml -> src/com/example/dynamicquery/UserMapper.xml
2025-09-13 01:00:13,233 - SourceAnalyzer - DEBUG - logger.py:64 - 메모리 매핑 테이블 키들: ['src/com/example/dynamicquery/UserMapper.xml', 'src/main/resources/mybatis/mapper/ImplicitJoinMapper.xml', 'src/main/resources/mybatis/mapper/ImplicitJoinTestMapper.xml', 'src/main/resources/mybatis/mapper/MixedErrorMapper.xml', 'src/main/resources/mybatis/mapper/ProductMapper.xml', 'src/main/resources/mybatis/mapper/UserMapper.xml']
2025-09-13 01:00:13,233 - SourceAnalyzer - DEBUG - logger.py:64 - 메모리에서 file_id 조회 성공: src/com/example/dynamicquery/UserMapper.xml -> 5
2025-09-13 01:00:13,233 - SourceAnalyzer - DEBUG - logger.py:64 - 파일 ID 조회 성공: 5
2025-09-13 01:00:13,233 - SourceAnalyzer - DEBUG - logger.py:64 - 컴포넌트 저장 시도: findUsersWithMixedJoins (select) -> SQL_SELECT
2025-09-13 01:00:13,233 - SourceAnalyzer - DEBUG - logger.py:64 - Upsert 실행: components
2025-09-13 01:00:13,233 - SourceAnalyzer - DEBUG - logger.py:64 - 데이터: {'project_id': 1, 'component_type': 'SQL_SELECT', 'component_name': 'findUsersWithMixedJoins', 'parent_id': None, 'layer': 'SQL', 'file_id': 5, 'line_start': 103, 'line_end': 123, 'hash_value': '08cef49565812c5c950a79955f1ebbfa', 'has_error': 'N', 'error_message': None, 'del_yn': 'N'}
2025-09-13 01:00:13,233 - SourceAnalyzer - DEBUG - logger.py:64 - Components upsert 시작: findUsersWithMixedJoins (SQL_SELECT)
2025-09-13 01:00:13,233 - SourceAnalyzer - DEBUG - logger.py:64 - 기존 레코드 확인 쿼리: 
                    SELECT component_id FROM components 
                    WHERE project_id = ? AND component_name = ? AND file_id = ?
                    
2025-09-13 01:00:13,233 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 파라미터: (1, 'findUsersWithMixedJoins', 5)
2025-09-13 01:00:13,233 - SourceAnalyzer - DEBUG - logger.py:64 - 기존 레코드 조회 결과: <sqlite3.Row object at 0x0000015C84A82FB0>
2025-09-13 01:00:13,233 - SourceAnalyzer - DEBUG - logger.py:64 - UPDATE 쿼리: 
                        UPDATE components SET component_type = ?, parent_id = ?, layer = ?, line_start = ?, line_end = ?, hash_value = ?, has_error = ?, error_message = ?, del_yn = ?
                        WHERE component_id = ?
                        
2025-09-13 01:00:13,233 - SourceAnalyzer - DEBUG - logger.py:64 - UPDATE 파라미터: ['SQL_SELECT', None, 'SQL', 103, 123, '08cef49565812c5c950a79955f1ebbfa', 'N', None, 'N', 1947]
2025-09-13 01:00:13,233 - SourceAnalyzer - DEBUG - logger.py:64 - UPDATE 실행 완료: component_id = 1947
2025-09-13 01:00:13,233 - SourceAnalyzer - DEBUG - logger.py:64 - 컴포넌트 저장 완료: findUsersWithMixedJoins (ID: 1947)
2025-09-13 01:00:13,233 - SourceAnalyzer - DEBUG - logger.py:64 - 컴포넌트 저장 결과: component_id = 1947
2025-09-13 01:00:13,233 - SourceAnalyzer - DEBUG - logger.py:64 - SQL Content 저장 시작: findUsersWithMixedJoins (component_id: 1947)
2025-09-13 01:00:13,233 - SourceAnalyzer - DEBUG - logger.py:64 - SQL Content 상대경로: src/com/example/dynamicquery
2025-09-13 01:00:13,233 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 실행 성공: SELECT project_id FROM projects WHERE project_id =...
2025-09-13 01:00:13,234 - SourceAnalyzer - DEBUG - logger.py:64 - 업데이트 쿼리 실행 성공: 
            INSERT OR REPLACE INTO sql_contents (..., 영향받은 행: 1
2025-09-13 01:00:13,234 - SourceAnalyzer - DEBUG - logger.py:64 - SQL 내용 저장 완료: findUsersWithMixedJoins - src/com/example/dynamicquery
2025-09-13 01:00:13,234 - SourceAnalyzer - DEBUG - logger.py:64 - SQL Content 저장 완료: findUsersWithMixedJoins - src/com/example/dynamicquery
2025-09-13 01:00:13,234 - SourceAnalyzer - DEBUG - logger.py:64 - SQL 쿼리 처리 완료: findUsersWithMixedJoins
2025-09-13 01:00:13,234 - SourceAnalyzer - DEBUG - logger.py:64 - SQL 쿼리 처리 루프 시작: 5/8
2025-09-13 01:00:13,234 - SourceAnalyzer - DEBUG - logger.py:64 - SQL 쿼리 처리 시작: findComplexJoins (select)
2025-09-13 01:00:13,234 - SourceAnalyzer - DEBUG - logger.py:64 - GET XML ID 조회: D:\Analyzer\CreateMetaDb\projects\sampleSrc\src\com\example\dynamicquery\UserMapper.xml -> src/com/example/dynamicquery/UserMapper.xml
2025-09-13 01:00:13,234 - SourceAnalyzer - DEBUG - logger.py:64 - 메모리 매핑 테이블 키들: ['src/com/example/dynamicquery/UserMapper.xml', 'src/main/resources/mybatis/mapper/ImplicitJoinMapper.xml', 'src/main/resources/mybatis/mapper/ImplicitJoinTestMapper.xml', 'src/main/resources/mybatis/mapper/MixedErrorMapper.xml', 'src/main/resources/mybatis/mapper/ProductMapper.xml', 'src/main/resources/mybatis/mapper/UserMapper.xml']
2025-09-13 01:00:13,234 - SourceAnalyzer - DEBUG - logger.py:64 - 메모리에서 file_id 조회 성공: src/com/example/dynamicquery/UserMapper.xml -> 5
2025-09-13 01:00:13,234 - SourceAnalyzer - DEBUG - logger.py:64 - 파일 ID 조회 성공: 5
2025-09-13 01:00:13,234 - SourceAnalyzer - DEBUG - logger.py:64 - 컴포넌트 저장 시도: findComplexJoins (select) -> SQL_SELECT
2025-09-13 01:00:13,234 - SourceAnalyzer - DEBUG - logger.py:64 - Upsert 실행: components
2025-09-13 01:00:13,234 - SourceAnalyzer - DEBUG - logger.py:64 - 데이터: {'project_id': 1, 'component_type': 'SQL_SELECT', 'component_name': 'findComplexJoins', 'parent_id': None, 'layer': 'SQL', 'file_id': 5, 'line_start': 126, 'line_end': 147, 'hash_value': '2934655db9a98d82dd72e2b87d85bd03', 'has_error': 'N', 'error_message': None, 'del_yn': 'N'}
2025-09-13 01:00:13,234 - SourceAnalyzer - DEBUG - logger.py:64 - Components upsert 시작: findComplexJoins (SQL_SELECT)
2025-09-13 01:00:13,234 - SourceAnalyzer - DEBUG - logger.py:64 - 기존 레코드 확인 쿼리: 
                    SELECT component_id FROM components 
                    WHERE project_id = ? AND component_name = ? AND file_id = ?
                    
2025-09-13 01:00:13,234 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 파라미터: (1, 'findComplexJoins', 5)
2025-09-13 01:00:13,234 - SourceAnalyzer - DEBUG - logger.py:64 - 기존 레코드 조회 결과: <sqlite3.Row object at 0x0000015C84A82FB0>
2025-09-13 01:00:13,234 - SourceAnalyzer - DEBUG - logger.py:64 - UPDATE 쿼리: 
                        UPDATE components SET component_type = ?, parent_id = ?, layer = ?, line_start = ?, line_end = ?, hash_value = ?, has_error = ?, error_message = ?, del_yn = ?
                        WHERE component_id = ?
                        
2025-09-13 01:00:13,234 - SourceAnalyzer - DEBUG - logger.py:64 - UPDATE 파라미터: ['SQL_SELECT', None, 'SQL', 126, 147, '2934655db9a98d82dd72e2b87d85bd03', 'N', None, 'N', 1948]
2025-09-13 01:00:13,234 - SourceAnalyzer - DEBUG - logger.py:64 - UPDATE 실행 완료: component_id = 1948
2025-09-13 01:00:13,234 - SourceAnalyzer - DEBUG - logger.py:64 - 컴포넌트 저장 완료: findComplexJoins (ID: 1948)
2025-09-13 01:00:13,234 - SourceAnalyzer - DEBUG - logger.py:64 - 컴포넌트 저장 결과: component_id = 1948
2025-09-13 01:00:13,234 - SourceAnalyzer - DEBUG - logger.py:64 - SQL Content 저장 시작: findComplexJoins (component_id: 1948)
2025-09-13 01:00:13,234 - SourceAnalyzer - DEBUG - logger.py:64 - SQL Content 상대경로: src/com/example/dynamicquery
2025-09-13 01:00:13,234 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 실행 성공: SELECT project_id FROM projects WHERE project_id =...
2025-09-13 01:00:13,235 - SourceAnalyzer - DEBUG - logger.py:64 - 업데이트 쿼리 실행 성공: 
            INSERT OR REPLACE INTO sql_contents (..., 영향받은 행: 1
2025-09-13 01:00:13,235 - SourceAnalyzer - DEBUG - logger.py:64 - SQL 내용 저장 완료: findComplexJoins - src/com/example/dynamicquery
2025-09-13 01:00:13,235 - SourceAnalyzer - DEBUG - logger.py:64 - SQL Content 저장 완료: findComplexJoins - src/com/example/dynamicquery
2025-09-13 01:00:13,235 - SourceAnalyzer - DEBUG - logger.py:64 - SQL 쿼리 처리 완료: findComplexJoins
2025-09-13 01:00:13,235 - SourceAnalyzer - DEBUG - logger.py:64 - SQL 쿼리 처리 루프 시작: 6/8
2025-09-13 01:00:13,235 - SourceAnalyzer - DEBUG - logger.py:64 - SQL 쿼리 처리 시작: findUsersWithScatteredConditions (select)
2025-09-13 01:00:13,235 - SourceAnalyzer - DEBUG - logger.py:64 - GET XML ID 조회: D:\Analyzer\CreateMetaDb\projects\sampleSrc\src\com\example\dynamicquery\UserMapper.xml -> src/com/example/dynamicquery/UserMapper.xml
2025-09-13 01:00:13,235 - SourceAnalyzer - DEBUG - logger.py:64 - 메모리 매핑 테이블 키들: ['src/com/example/dynamicquery/UserMapper.xml', 'src/main/resources/mybatis/mapper/ImplicitJoinMapper.xml', 'src/main/resources/mybatis/mapper/ImplicitJoinTestMapper.xml', 'src/main/resources/mybatis/mapper/MixedErrorMapper.xml', 'src/main/resources/mybatis/mapper/ProductMapper.xml', 'src/main/resources/mybatis/mapper/UserMapper.xml']
2025-09-13 01:00:13,235 - SourceAnalyzer - DEBUG - logger.py:64 - 메모리에서 file_id 조회 성공: src/com/example/dynamicquery/UserMapper.xml -> 5
2025-09-13 01:00:13,235 - SourceAnalyzer - DEBUG - logger.py:64 - 파일 ID 조회 성공: 5
2025-09-13 01:00:13,235 - SourceAnalyzer - DEBUG - logger.py:64 - 컴포넌트 저장 시도: findUsersWithScatteredConditions (select) -> SQL_SELECT
2025-09-13 01:00:13,235 - SourceAnalyzer - DEBUG - logger.py:64 - Upsert 실행: components
2025-09-13 01:00:13,235 - SourceAnalyzer - DEBUG - logger.py:64 - 데이터: {'project_id': 1, 'component_type': 'SQL_SELECT', 'component_name': 'findUsersWithScatteredConditions', 'parent_id': None, 'layer': 'SQL', 'file_id': 5, 'line_start': 150, 'line_end': 177, 'hash_value': 'cf58c56f433af9c36f120b504c5a8e2e', 'has_error': 'N', 'error_message': None, 'del_yn': 'N'}
2025-09-13 01:00:13,235 - SourceAnalyzer - DEBUG - logger.py:64 - Components upsert 시작: findUsersWithScatteredConditions (SQL_SELECT)
2025-09-13 01:00:13,235 - SourceAnalyzer - DEBUG - logger.py:64 - 기존 레코드 확인 쿼리: 
                    SELECT component_id FROM components 
                    WHERE project_id = ? AND component_name = ? AND file_id = ?
                    
2025-09-13 01:00:13,235 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 파라미터: (1, 'findUsersWithScatteredConditions', 5)
2025-09-13 01:00:13,235 - SourceAnalyzer - DEBUG - logger.py:64 - 기존 레코드 조회 결과: <sqlite3.Row object at 0x0000015C84A82FB0>
2025-09-13 01:00:13,235 - SourceAnalyzer - DEBUG - logger.py:64 - UPDATE 쿼리: 
                        UPDATE components SET component_type = ?, parent_id = ?, layer = ?, line_start = ?, line_end = ?, hash_value = ?, has_error = ?, error_message = ?, del_yn = ?
                        WHERE component_id = ?
                        
2025-09-13 01:00:13,235 - SourceAnalyzer - DEBUG - logger.py:64 - UPDATE 파라미터: ['SQL_SELECT', None, 'SQL', 150, 177, 'cf58c56f433af9c36f120b504c5a8e2e', 'N', None, 'N', 1949]
2025-09-13 01:00:13,235 - SourceAnalyzer - DEBUG - logger.py:64 - UPDATE 실행 완료: component_id = 1949
2025-09-13 01:00:13,235 - SourceAnalyzer - DEBUG - logger.py:64 - 컴포넌트 저장 완료: findUsersWithScatteredConditions (ID: 1949)
2025-09-13 01:00:13,235 - SourceAnalyzer - DEBUG - logger.py:64 - 컴포넌트 저장 결과: component_id = 1949
2025-09-13 01:00:13,235 - SourceAnalyzer - DEBUG - logger.py:64 - SQL Content 저장 시작: findUsersWithScatteredConditions (component_id: 1949)
2025-09-13 01:00:13,236 - SourceAnalyzer - DEBUG - logger.py:64 - SQL Content 상대경로: src/com/example/dynamicquery
2025-09-13 01:00:13,236 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 실행 성공: SELECT project_id FROM projects WHERE project_id =...
2025-09-13 01:00:13,236 - SourceAnalyzer - DEBUG - logger.py:64 - 업데이트 쿼리 실행 성공: 
            INSERT OR REPLACE INTO sql_contents (..., 영향받은 행: 1
2025-09-13 01:00:13,236 - SourceAnalyzer - DEBUG - logger.py:64 - SQL 내용 저장 완료: findUsersWithScatteredConditions - src/com/example/dynamicquery
2025-09-13 01:00:13,236 - SourceAnalyzer - DEBUG - logger.py:64 - SQL Content 저장 완료: findUsersWithScatteredConditions - src/com/example/dynamicquery
2025-09-13 01:00:13,236 - SourceAnalyzer - DEBUG - logger.py:64 - SQL 쿼리 처리 완료: findUsersWithScatteredConditions
2025-09-13 01:00:13,236 - SourceAnalyzer - DEBUG - logger.py:64 - SQL 쿼리 처리 루프 시작: 7/8
2025-09-13 01:00:13,236 - SourceAnalyzer - DEBUG - logger.py:64 - SQL 쿼리 처리 시작: findOrdersWithScatteredJoins (select)
2025-09-13 01:00:13,236 - SourceAnalyzer - DEBUG - logger.py:64 - GET XML ID 조회: D:\Analyzer\CreateMetaDb\projects\sampleSrc\src\com\example\dynamicquery\UserMapper.xml -> src/com/example/dynamicquery/UserMapper.xml
2025-09-13 01:00:13,236 - SourceAnalyzer - DEBUG - logger.py:64 - 메모리 매핑 테이블 키들: ['src/com/example/dynamicquery/UserMapper.xml', 'src/main/resources/mybatis/mapper/ImplicitJoinMapper.xml', 'src/main/resources/mybatis/mapper/ImplicitJoinTestMapper.xml', 'src/main/resources/mybatis/mapper/MixedErrorMapper.xml', 'src/main/resources/mybatis/mapper/ProductMapper.xml', 'src/main/resources/mybatis/mapper/UserMapper.xml']
2025-09-13 01:00:13,236 - SourceAnalyzer - DEBUG - logger.py:64 - 메모리에서 file_id 조회 성공: src/com/example/dynamicquery/UserMapper.xml -> 5
2025-09-13 01:00:13,236 - SourceAnalyzer - DEBUG - logger.py:64 - 파일 ID 조회 성공: 5
2025-09-13 01:00:13,236 - SourceAnalyzer - DEBUG - logger.py:64 - 컴포넌트 저장 시도: findOrdersWithScatteredJoins (select) -> SQL_SELECT
2025-09-13 01:00:13,236 - SourceAnalyzer - DEBUG - logger.py:64 - Upsert 실행: components
2025-09-13 01:00:13,236 - SourceAnalyzer - DEBUG - logger.py:64 - 데이터: {'project_id': 1, 'component_type': 'SQL_SELECT', 'component_name': 'findOrdersWithScatteredJoins', 'parent_id': None, 'layer': 'SQL', 'file_id': 5, 'line_start': 180, 'line_end': 213, 'hash_value': '818bef24a33e69036115132d408bdca6', 'has_error': 'N', 'error_message': None, 'del_yn': 'N'}
2025-09-13 01:00:13,236 - SourceAnalyzer - DEBUG - logger.py:64 - Components upsert 시작: findOrdersWithScatteredJoins (SQL_SELECT)
2025-09-13 01:00:13,236 - SourceAnalyzer - DEBUG - logger.py:64 - 기존 레코드 확인 쿼리: 
                    SELECT component_id FROM components 
                    WHERE project_id = ? AND component_name = ? AND file_id = ?
                    
2025-09-13 01:00:13,236 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 파라미터: (1, 'findOrdersWithScatteredJoins', 5)
2025-09-13 01:00:13,236 - SourceAnalyzer - DEBUG - logger.py:64 - 기존 레코드 조회 결과: <sqlite3.Row object at 0x0000015C84A82FB0>
2025-09-13 01:00:13,236 - SourceAnalyzer - DEBUG - logger.py:64 - UPDATE 쿼리: 
                        UPDATE components SET component_type = ?, parent_id = ?, layer = ?, line_start = ?, line_end = ?, hash_value = ?, has_error = ?, error_message = ?, del_yn = ?
                        WHERE component_id = ?
                        
2025-09-13 01:00:13,236 - SourceAnalyzer - DEBUG - logger.py:64 - UPDATE 파라미터: ['SQL_SELECT', None, 'SQL', 180, 213, '818bef24a33e69036115132d408bdca6', 'N', None, 'N', 1950]
2025-09-13 01:00:13,236 - SourceAnalyzer - DEBUG - logger.py:64 - UPDATE 실행 완료: component_id = 1950
2025-09-13 01:00:13,237 - SourceAnalyzer - DEBUG - logger.py:64 - 컴포넌트 저장 완료: findOrdersWithScatteredJoins (ID: 1950)
2025-09-13 01:00:13,237 - SourceAnalyzer - DEBUG - logger.py:64 - 컴포넌트 저장 결과: component_id = 1950
2025-09-13 01:00:13,237 - SourceAnalyzer - DEBUG - logger.py:64 - SQL Content 저장 시작: findOrdersWithScatteredJoins (component_id: 1950)
2025-09-13 01:00:13,237 - SourceAnalyzer - DEBUG - logger.py:64 - SQL Content 상대경로: src/com/example/dynamicquery
2025-09-13 01:00:13,237 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 실행 성공: SELECT project_id FROM projects WHERE project_id =...
2025-09-13 01:00:13,237 - SourceAnalyzer - DEBUG - logger.py:64 - 업데이트 쿼리 실행 성공: 
            INSERT OR REPLACE INTO sql_contents (..., 영향받은 행: 1
2025-09-13 01:00:13,237 - SourceAnalyzer - DEBUG - logger.py:64 - SQL 내용 저장 완료: findOrdersWithScatteredJoins - src/com/example/dynamicquery
2025-09-13 01:00:13,237 - SourceAnalyzer - DEBUG - logger.py:64 - SQL Content 저장 완료: findOrdersWithScatteredJoins - src/com/example/dynamicquery
2025-09-13 01:00:13,237 - SourceAnalyzer - DEBUG - logger.py:64 - SQL 쿼리 처리 완료: findOrdersWithScatteredJoins
2025-09-13 01:00:13,237 - SourceAnalyzer - DEBUG - logger.py:64 - SQL 쿼리 처리 루프 시작: 8/8
2025-09-13 01:00:13,237 - SourceAnalyzer - DEBUG - logger.py:64 - SQL 쿼리 처리 시작: findComplexScatteredJoins (select)
2025-09-13 01:00:13,237 - SourceAnalyzer - DEBUG - logger.py:64 - GET XML ID 조회: D:\Analyzer\CreateMetaDb\projects\sampleSrc\src\com\example\dynamicquery\UserMapper.xml -> src/com/example/dynamicquery/UserMapper.xml
2025-09-13 01:00:13,237 - SourceAnalyzer - DEBUG - logger.py:64 - 메모리 매핑 테이블 키들: ['src/com/example/dynamicquery/UserMapper.xml', 'src/main/resources/mybatis/mapper/ImplicitJoinMapper.xml', 'src/main/resources/mybatis/mapper/ImplicitJoinTestMapper.xml', 'src/main/resources/mybatis/mapper/MixedErrorMapper.xml', 'src/main/resources/mybatis/mapper/ProductMapper.xml', 'src/main/resources/mybatis/mapper/UserMapper.xml']
2025-09-13 01:00:13,237 - SourceAnalyzer - DEBUG - logger.py:64 - 메모리에서 file_id 조회 성공: src/com/example/dynamicquery/UserMapper.xml -> 5
2025-09-13 01:00:13,237 - SourceAnalyzer - DEBUG - logger.py:64 - 파일 ID 조회 성공: 5
2025-09-13 01:00:13,237 - SourceAnalyzer - DEBUG - logger.py:64 - 컴포넌트 저장 시도: findComplexScatteredJoins (select) -> SQL_SELECT
2025-09-13 01:00:13,237 - SourceAnalyzer - DEBUG - logger.py:64 - Upsert 실행: components
2025-09-13 01:00:13,237 - SourceAnalyzer - DEBUG - logger.py:64 - 데이터: {'project_id': 1, 'component_type': 'SQL_SELECT', 'component_name': 'findComplexScatteredJoins', 'parent_id': None, 'layer': 'SQL', 'file_id': 5, 'line_start': 216, 'line_end': 248, 'hash_value': '2b2a6c0eb5448cb9fbd000071d9030cf', 'has_error': 'N', 'error_message': None, 'del_yn': 'N'}
2025-09-13 01:00:13,237 - SourceAnalyzer - DEBUG - logger.py:64 - Components upsert 시작: findComplexScatteredJoins (SQL_SELECT)
2025-09-13 01:00:13,237 - SourceAnalyzer - DEBUG - logger.py:64 - 기존 레코드 확인 쿼리: 
                    SELECT component_id FROM components 
                    WHERE project_id = ? AND component_name = ? AND file_id = ?
                    
2025-09-13 01:00:13,237 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 파라미터: (1, 'findComplexScatteredJoins', 5)
2025-09-13 01:00:13,238 - SourceAnalyzer - DEBUG - logger.py:64 - 기존 레코드 조회 결과: <sqlite3.Row object at 0x0000015C84A82FB0>
2025-09-13 01:00:13,238 - SourceAnalyzer - DEBUG - logger.py:64 - UPDATE 쿼리: 
                        UPDATE components SET component_type = ?, parent_id = ?, layer = ?, line_start = ?, line_end = ?, hash_value = ?, has_error = ?, error_message = ?, del_yn = ?
                        WHERE component_id = ?
                        
2025-09-13 01:00:13,238 - SourceAnalyzer - DEBUG - logger.py:64 - UPDATE 파라미터: ['SQL_SELECT', None, 'SQL', 216, 248, '2b2a6c0eb5448cb9fbd000071d9030cf', 'N', None, 'N', 1951]
2025-09-13 01:00:13,238 - SourceAnalyzer - DEBUG - logger.py:64 - UPDATE 실행 완료: component_id = 1951
2025-09-13 01:00:13,238 - SourceAnalyzer - DEBUG - logger.py:64 - 컴포넌트 저장 완료: findComplexScatteredJoins (ID: 1951)
2025-09-13 01:00:13,238 - SourceAnalyzer - DEBUG - logger.py:64 - 컴포넌트 저장 결과: component_id = 1951
2025-09-13 01:00:13,238 - SourceAnalyzer - DEBUG - logger.py:64 - SQL Content 저장 시작: findComplexScatteredJoins (component_id: 1951)
2025-09-13 01:00:13,238 - SourceAnalyzer - DEBUG - logger.py:64 - SQL Content 상대경로: src/com/example/dynamicquery
2025-09-13 01:00:13,238 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 실행 성공: SELECT project_id FROM projects WHERE project_id =...
2025-09-13 01:00:13,238 - SourceAnalyzer - DEBUG - logger.py:64 - 업데이트 쿼리 실행 성공: 
            INSERT OR REPLACE INTO sql_contents (..., 영향받은 행: 1
2025-09-13 01:00:13,238 - SourceAnalyzer - DEBUG - logger.py:64 - SQL 내용 저장 완료: findComplexScatteredJoins - src/com/example/dynamicquery
2025-09-13 01:00:13,238 - SourceAnalyzer - DEBUG - logger.py:64 - SQL Content 저장 완료: findComplexScatteredJoins - src/com/example/dynamicquery
2025-09-13 01:00:13,238 - SourceAnalyzer - DEBUG - logger.py:64 - SQL 쿼리 처리 완료: findComplexScatteredJoins
2025-09-13 01:00:13,238 - SourceAnalyzer - INFO - logger.py:68 - === SQL 쿼리 처리 완료 ===
2025-09-13 01:00:13,238 - SourceAnalyzer - INFO - logger.py:68 - 처리된 쿼리 수: 8
2025-09-13 01:00:13,238 - SourceAnalyzer - INFO - logger.py:68 - 건너뜀 쿼리 수: 0
2025-09-13 01:00:13,238 - SourceAnalyzer - INFO - logger.py:68 - 컴포넌트 ID 매핑 크기: 8
2025-09-13 01:00:13,238 - SourceAnalyzer - INFO - logger.py:68 - SQL 컴포넌트 저장 완료: 8개 (건너뜀: 0개)
2025-09-13 01:00:13,238 - SourceAnalyzer - INFO - logger.py:68 - process_sql_queries 호출 후: result=True
2025-09-13 01:00:13,239 - SourceAnalyzer - INFO - logger.py:68 - SQL Content Processor 처리 결과: True
2025-09-13 01:00:13,239 - SourceAnalyzer - INFO - logger.py:68 - === XML 로딩 엔진: SQL 컴포넌트 저장 완료 ===
2025-09-13 01:00:13,239 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 실행 성공: 
                SELECT c.component_id 
          ...
2025-09-13 01:00:13,239 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 실행 성공: 
                SELECT c.component_id 
          ...
2025-09-13 01:00:13,239 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 실행 성공: 
                SELECT c.component_id 
          ...
2025-09-13 01:00:13,239 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 실행 성공: 
                SELECT c.component_id 
          ...
2025-09-13 01:00:13,239 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 실행 성공: 
                SELECT c.component_id 
          ...
2025-09-13 01:00:13,239 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 실행 성공: 
                SELECT c.component_id 
          ...
2025-09-13 01:00:13,239 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 실행 성공: 
                SELECT c.component_id 
          ...
2025-09-13 01:00:13,239 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 실행 성공: 
                SELECT c.component_id 
          ...
2025-09-13 01:00:13,239 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 실행 성공: 
                SELECT c.component_id 
          ...
2025-09-13 01:00:13,239 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 실행 성공: 
                SELECT c.component_id 
          ...
2025-09-13 01:00:13,239 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 실행 성공: 
                SELECT c.component_id 
          ...
2025-09-13 01:00:13,239 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 실행 성공: 
                SELECT c.component_id 
          ...
2025-09-13 01:00:13,239 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 실행 성공: 
                SELECT c.component_id 
          ...
2025-09-13 01:00:13,239 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 실행 성공: 
                SELECT c.component_id 
          ...
2025-09-13 01:00:13,239 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 실행 성공: 
                SELECT c.component_id 
          ...
2025-09-13 01:00:13,239 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 실행 성공: 
                SELECT c.component_id 
          ...
2025-09-13 01:00:13,240 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 실행 성공: 
                SELECT c.component_id 
          ...
2025-09-13 01:00:13,240 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 실행 성공: 
                SELECT c.component_id 
          ...
2025-09-13 01:00:13,240 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 실행 성공: 
                SELECT c.component_id 
          ...
2025-09-13 01:00:13,240 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 실행 성공: 
                SELECT c.component_id 
          ...
2025-09-13 01:00:13,240 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 실행 성공: 
                SELECT c.component_id 
          ...
2025-09-13 01:00:13,240 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 실행 성공: 
                SELECT c.component_id 
          ...
2025-09-13 01:00:13,240 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 실행 성공: 
                SELECT c.component_id 
          ...
2025-09-13 01:00:13,240 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 실행 성공: 
                SELECT c.component_id 
          ...
2025-09-13 01:00:13,240 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 실행 성공: 
                SELECT c.component_id 
          ...
2025-09-13 01:00:13,240 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 실행 성공: 
                SELECT c.component_id 
          ...
2025-09-13 01:00:13,240 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 실행 성공: 
                SELECT c.component_id 
          ...
2025-09-13 01:00:13,240 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 실행 성공: 
                SELECT c.component_id 
          ...
2025-09-13 01:00:13,240 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 실행 성공: 
                SELECT c.component_id 
          ...
2025-09-13 01:00:13,240 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 실행 성공: 
                SELECT c.component_id 
          ...
2025-09-13 01:00:13,241 - SourceAnalyzer - DEBUG - logger.py:64 - 배치 쿼리 실행 성공: 
            INSERT OR IGNORE INTO relationships (..., 처리된 행: 15
2025-09-13 01:00:13,241 - SourceAnalyzer - INFO - logger.py:68 - JOIN 관계 저장 완료: 15개
2025-09-13 01:00:13,241 - SourceAnalyzer - DEBUG - logger.py:64 - 파일 읽기 성공: D:\Analyzer\CreateMetaDb\projects\sampleSrc\src\main\resources\mybatis\mapper\ImplicitJoinMapper.xml
2025-09-13 01:00:13,242 - SourceAnalyzer - DEBUG - logger.py:64 - 파일 읽기 성공: D:\Analyzer\CreateMetaDb\projects\sampleSrc\src\main\resources\mybatis\mapper\ImplicitJoinMapper.xml
2025-09-13 01:00:13,242 - SourceAnalyzer - DEBUG - logger.py:64 - 파일 읽기 성공: D:\Analyzer\CreateMetaDb\projects\sampleSrc\src\main\resources\mybatis\mapper\ImplicitJoinMapper.xml
2025-09-13 01:00:13,243 - SourceAnalyzer - DEBUG - logger.py:64 - 파일 읽기 성공: D:\Analyzer\CreateMetaDb\projects\sampleSrc\src\main\resources\mybatis\mapper\ImplicitJoinMapper.xml
2025-09-13 01:00:13,243 - SourceAnalyzer - DEBUG - logger.py:64 - 파일 읽기 성공: D:\Analyzer\CreateMetaDb\projects\sampleSrc\src\main\resources\mybatis\mapper\ImplicitJoinMapper.xml
2025-09-13 01:00:13,245 - SourceAnalyzer - INFO - logger.py:68 - === XML 로딩 엔진: SQL 컴포넌트 저장 시작 ===
2025-09-13 01:00:13,245 - SourceAnalyzer - INFO - logger.py:68 - 전달받은 SQL 쿼리 수: 5개
2025-09-13 01:00:13,245 - SourceAnalyzer - INFO - logger.py:68 - XML에서 추출된 SQL 쿼리 타입별 통계: {'select': 5}
2025-09-13 01:00:13,245 - SourceAnalyzer - INFO - logger.py:68 - 프로젝트 ID: 1
2025-09-13 01:00:13,245 - SourceAnalyzer - INFO - logger.py:68 - SQL Content Processor를 사용하여 처리 시작
2025-09-13 01:00:13,245 - SourceAnalyzer - INFO - logger.py:68 - process_sql_queries 호출 전: sql_queries=5, project_id=1
2025-09-13 01:00:13,245 - SourceAnalyzer - INFO - logger.py:68 - === SQL 쿼리 처리 시작 ===
2025-09-13 01:00:13,245 - SourceAnalyzer - INFO - logger.py:68 - 전달받은 SQL 쿼리 수: 5
2025-09-13 01:00:13,245 - SourceAnalyzer - INFO - logger.py:68 - 프로젝트 ID: 1
2025-09-13 01:00:13,245 - SourceAnalyzer - INFO - logger.py:68 - SQL 쿼리 타입별 통계: {'select': 5}
2025-09-13 01:00:13,245 - SourceAnalyzer - DEBUG - logger.py:64 - SQL 쿼리 리스트 크기: 5
2025-09-13 01:00:13,245 - SourceAnalyzer - DEBUG - logger.py:64 - SQL 쿼리 리스트 타입: <class 'list'>
2025-09-13 01:00:13,245 - SourceAnalyzer - DEBUG - logger.py:64 - 첫 번째 쿼리 정보: {'tag_name': 'select', 'query_id': 'getUsersWithTypes', 'sql_content': 'SELECT u.id, u.name, u.email, ut.type_name FROM users u, user_types ut WHERE u.type_id = ut.id ORDER BY u.name', 'file_path': 'D:\\Analyzer\\CreateMetaDb\\projects\\sampleSrc\\src\\main\\resources\\mybatis\\mapper\\ImplicitJoinMapper.xml', 'line_start': 9, 'line_end': 17, 'hash_value': '5f328ed2b01128cb17d40742efb61892'}
2025-09-13 01:00:13,245 - SourceAnalyzer - DEBUG - logger.py:64 - SQL 쿼리 처리 루프 시작: 1/5
2025-09-13 01:00:13,245 - SourceAnalyzer - DEBUG - logger.py:64 - SQL 쿼리 처리 시작: getUsersWithTypes (select)
2025-09-13 01:00:13,245 - SourceAnalyzer - DEBUG - logger.py:64 - GET XML ID 조회: D:\Analyzer\CreateMetaDb\projects\sampleSrc\src\main\resources\mybatis\mapper\ImplicitJoinMapper.xml -> src/main/resources/mybatis/mapper/ImplicitJoinMapper.xml
2025-09-13 01:00:13,245 - SourceAnalyzer - DEBUG - logger.py:64 - 메모리 매핑 테이블 키들: ['src/com/example/dynamicquery/UserMapper.xml', 'src/main/resources/mybatis/mapper/ImplicitJoinMapper.xml', 'src/main/resources/mybatis/mapper/ImplicitJoinTestMapper.xml', 'src/main/resources/mybatis/mapper/MixedErrorMapper.xml', 'src/main/resources/mybatis/mapper/ProductMapper.xml', 'src/main/resources/mybatis/mapper/UserMapper.xml']
2025-09-13 01:00:13,245 - SourceAnalyzer - DEBUG - logger.py:64 - 메모리에서 file_id 조회 성공: src/main/resources/mybatis/mapper/ImplicitJoinMapper.xml -> 23
2025-09-13 01:00:13,245 - SourceAnalyzer - DEBUG - logger.py:64 - 파일 ID 조회 성공: 23
2025-09-13 01:00:13,245 - SourceAnalyzer - DEBUG - logger.py:64 - 컴포넌트 저장 시도: getUsersWithTypes (select) -> SQL_SELECT
2025-09-13 01:00:13,245 - SourceAnalyzer - DEBUG - logger.py:64 - Upsert 실행: components
2025-09-13 01:00:13,245 - SourceAnalyzer - DEBUG - logger.py:64 - 데이터: {'project_id': 1, 'component_type': 'SQL_SELECT', 'component_name': 'getUsersWithTypes', 'parent_id': None, 'layer': 'SQL', 'file_id': 23, 'line_start': 9, 'line_end': 17, 'hash_value': '5f328ed2b01128cb17d40742efb61892', 'has_error': 'N', 'error_message': None, 'del_yn': 'N'}
2025-09-13 01:00:13,245 - SourceAnalyzer - DEBUG - logger.py:64 - Components upsert 시작: getUsersWithTypes (SQL_SELECT)
2025-09-13 01:00:13,246 - SourceAnalyzer - DEBUG - logger.py:64 - 기존 레코드 확인 쿼리: 
                    SELECT component_id FROM components 
                    WHERE project_id = ? AND component_name = ? AND file_id = ?
                    
2025-09-13 01:00:13,246 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 파라미터: (1, 'getUsersWithTypes', 23)
2025-09-13 01:00:13,246 - SourceAnalyzer - DEBUG - logger.py:64 - 기존 레코드 조회 결과: <sqlite3.Row object at 0x0000015C850A9000>
2025-09-13 01:00:13,246 - SourceAnalyzer - DEBUG - logger.py:64 - UPDATE 쿼리: 
                        UPDATE components SET component_type = ?, parent_id = ?, layer = ?, line_start = ?, line_end = ?, hash_value = ?, has_error = ?, error_message = ?, del_yn = ?
                        WHERE component_id = ?
                        
2025-09-13 01:00:13,246 - SourceAnalyzer - DEBUG - logger.py:64 - UPDATE 파라미터: ['SQL_SELECT', None, 'SQL', 9, 17, '5f328ed2b01128cb17d40742efb61892', 'N', None, 'N', 1952]
2025-09-13 01:00:13,246 - SourceAnalyzer - DEBUG - logger.py:64 - UPDATE 실행 완료: component_id = 1952
2025-09-13 01:00:13,246 - SourceAnalyzer - DEBUG - logger.py:64 - 컴포넌트 저장 완료: getUsersWithTypes (ID: 1952)
2025-09-13 01:00:13,246 - SourceAnalyzer - DEBUG - logger.py:64 - 컴포넌트 저장 결과: component_id = 1952
2025-09-13 01:00:13,246 - SourceAnalyzer - DEBUG - logger.py:64 - SQL Content 저장 시작: getUsersWithTypes (component_id: 1952)
2025-09-13 01:00:13,246 - SourceAnalyzer - DEBUG - logger.py:64 - SQL Content 상대경로: src/main/resources/mybatis/mapper
2025-09-13 01:00:13,246 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 실행 성공: SELECT project_id FROM projects WHERE project_id =...
2025-09-13 01:00:13,246 - SourceAnalyzer - DEBUG - logger.py:64 - 업데이트 쿼리 실행 성공: 
            INSERT OR REPLACE INTO sql_contents (..., 영향받은 행: 1
2025-09-13 01:00:13,246 - SourceAnalyzer - DEBUG - logger.py:64 - SQL 내용 저장 완료: getUsersWithTypes - src/main/resources/mybatis/mapper
2025-09-13 01:00:13,246 - SourceAnalyzer - DEBUG - logger.py:64 - SQL Content 저장 완료: getUsersWithTypes - src/main/resources/mybatis/mapper
2025-09-13 01:00:13,246 - SourceAnalyzer - DEBUG - logger.py:64 - SQL 쿼리 처리 완료: getUsersWithTypes
2025-09-13 01:00:13,246 - SourceAnalyzer - DEBUG - logger.py:64 - SQL 쿼리 처리 루프 시작: 2/5
2025-09-13 01:00:13,246 - SourceAnalyzer - DEBUG - logger.py:64 - SQL 쿼리 처리 시작: getProductsWithCategoryAndBrand (select)
2025-09-13 01:00:13,246 - SourceAnalyzer - DEBUG - logger.py:64 - GET XML ID 조회: D:\Analyzer\CreateMetaDb\projects\sampleSrc\src\main\resources\mybatis\mapper\ImplicitJoinMapper.xml -> src/main/resources/mybatis/mapper/ImplicitJoinMapper.xml
2025-09-13 01:00:13,246 - SourceAnalyzer - DEBUG - logger.py:64 - 메모리 매핑 테이블 키들: ['src/com/example/dynamicquery/UserMapper.xml', 'src/main/resources/mybatis/mapper/ImplicitJoinMapper.xml', 'src/main/resources/mybatis/mapper/ImplicitJoinTestMapper.xml', 'src/main/resources/mybatis/mapper/MixedErrorMapper.xml', 'src/main/resources/mybatis/mapper/ProductMapper.xml', 'src/main/resources/mybatis/mapper/UserMapper.xml']
2025-09-13 01:00:13,246 - SourceAnalyzer - DEBUG - logger.py:64 - 메모리에서 file_id 조회 성공: src/main/resources/mybatis/mapper/ImplicitJoinMapper.xml -> 23
2025-09-13 01:00:13,246 - SourceAnalyzer - DEBUG - logger.py:64 - 파일 ID 조회 성공: 23
2025-09-13 01:00:13,247 - SourceAnalyzer - DEBUG - logger.py:64 - 컴포넌트 저장 시도: getProductsWithCategoryAndBrand (select) -> SQL_SELECT
2025-09-13 01:00:13,247 - SourceAnalyzer - DEBUG - logger.py:64 - Upsert 실행: components
2025-09-13 01:00:13,247 - SourceAnalyzer - DEBUG - logger.py:64 - 데이터: {'project_id': 1, 'component_type': 'SQL_SELECT', 'component_name': 'getProductsWithCategoryAndBrand', 'parent_id': None, 'layer': 'SQL', 'file_id': 23, 'line_start': 17, 'line_end': 27, 'hash_value': '8e62fda025ef4242162dc4b36e580302', 'has_error': 'N', 'error_message': None, 'del_yn': 'N'}
2025-09-13 01:00:13,247 - SourceAnalyzer - DEBUG - logger.py:64 - Components upsert 시작: getProductsWithCategoryAndBrand (SQL_SELECT)
2025-09-13 01:00:13,247 - SourceAnalyzer - DEBUG - logger.py:64 - 기존 레코드 확인 쿼리: 
                    SELECT component_id FROM components 
                    WHERE project_id = ? AND component_name = ? AND file_id = ?
                    
2025-09-13 01:00:13,247 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 파라미터: (1, 'getProductsWithCategoryAndBrand', 23)
2025-09-13 01:00:13,247 - SourceAnalyzer - DEBUG - logger.py:64 - 기존 레코드 조회 결과: <sqlite3.Row object at 0x0000015C850A89D0>
2025-09-13 01:00:13,247 - SourceAnalyzer - DEBUG - logger.py:64 - UPDATE 쿼리: 
                        UPDATE components SET component_type = ?, parent_id = ?, layer = ?, line_start = ?, line_end = ?, hash_value = ?, has_error = ?, error_message = ?, del_yn = ?
                        WHERE component_id = ?
                        
2025-09-13 01:00:13,247 - SourceAnalyzer - DEBUG - logger.py:64 - UPDATE 파라미터: ['SQL_SELECT', None, 'SQL', 17, 27, '8e62fda025ef4242162dc4b36e580302', 'N', None, 'N', 1953]
2025-09-13 01:00:13,247 - SourceAnalyzer - DEBUG - logger.py:64 - UPDATE 실행 완료: component_id = 1953
2025-09-13 01:00:13,247 - SourceAnalyzer - DEBUG - logger.py:64 - 컴포넌트 저장 완료: getProductsWithCategoryAndBrand (ID: 1953)
2025-09-13 01:00:13,247 - SourceAnalyzer - DEBUG - logger.py:64 - 컴포넌트 저장 결과: component_id = 1953
2025-09-13 01:00:13,247 - SourceAnalyzer - DEBUG - logger.py:64 - SQL Content 저장 시작: getProductsWithCategoryAndBrand (component_id: 1953)
2025-09-13 01:00:13,247 - SourceAnalyzer - DEBUG - logger.py:64 - SQL Content 상대경로: src/main/resources/mybatis/mapper
2025-09-13 01:00:13,247 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 실행 성공: SELECT project_id FROM projects WHERE project_id =...
2025-09-13 01:00:13,247 - SourceAnalyzer - DEBUG - logger.py:64 - 업데이트 쿼리 실행 성공: 
            INSERT OR REPLACE INTO sql_contents (..., 영향받은 행: 1
2025-09-13 01:00:13,247 - SourceAnalyzer - DEBUG - logger.py:64 - SQL 내용 저장 완료: getProductsWithCategoryAndBrand - src/main/resources/mybatis/mapper
2025-09-13 01:00:13,247 - SourceAnalyzer - DEBUG - logger.py:64 - SQL Content 저장 완료: getProductsWithCategoryAndBrand - src/main/resources/mybatis/mapper
2025-09-13 01:00:13,247 - SourceAnalyzer - DEBUG - logger.py:64 - SQL 쿼리 처리 완료: getProductsWithCategoryAndBrand
2025-09-13 01:00:13,247 - SourceAnalyzer - DEBUG - logger.py:64 - SQL 쿼리 처리 루프 시작: 3/5
2025-09-13 01:00:13,247 - SourceAnalyzer - DEBUG - logger.py:64 - SQL 쿼리 처리 시작: getOrdersWithUsers (select)
2025-09-13 01:00:13,247 - SourceAnalyzer - DEBUG - logger.py:64 - GET XML ID 조회: D:\Analyzer\CreateMetaDb\projects\sampleSrc\src\main\resources\mybatis\mapper\ImplicitJoinMapper.xml -> src/main/resources/mybatis/mapper/ImplicitJoinMapper.xml
2025-09-13 01:00:13,248 - SourceAnalyzer - DEBUG - logger.py:64 - 메모리 매핑 테이블 키들: ['src/com/example/dynamicquery/UserMapper.xml', 'src/main/resources/mybatis/mapper/ImplicitJoinMapper.xml', 'src/main/resources/mybatis/mapper/ImplicitJoinTestMapper.xml', 'src/main/resources/mybatis/mapper/MixedErrorMapper.xml', 'src/main/resources/mybatis/mapper/ProductMapper.xml', 'src/main/resources/mybatis/mapper/UserMapper.xml']
2025-09-13 01:00:13,248 - SourceAnalyzer - DEBUG - logger.py:64 - 메모리에서 file_id 조회 성공: src/main/resources/mybatis/mapper/ImplicitJoinMapper.xml -> 23
2025-09-13 01:00:13,248 - SourceAnalyzer - DEBUG - logger.py:64 - 파일 ID 조회 성공: 23
2025-09-13 01:00:13,248 - SourceAnalyzer - DEBUG - logger.py:64 - 컴포넌트 저장 시도: getOrdersWithUsers (select) -> SQL_SELECT
2025-09-13 01:00:13,248 - SourceAnalyzer - DEBUG - logger.py:64 - Upsert 실행: components
2025-09-13 01:00:13,248 - SourceAnalyzer - DEBUG - logger.py:64 - 데이터: {'project_id': 1, 'component_type': 'SQL_SELECT', 'component_name': 'getOrdersWithUsers', 'parent_id': None, 'layer': 'SQL', 'file_id': 23, 'line_start': 27, 'line_end': 36, 'hash_value': '9af7b4cb9cb711157b8e5c996b799242', 'has_error': 'N', 'error_message': None, 'del_yn': 'N'}
2025-09-13 01:00:13,248 - SourceAnalyzer - DEBUG - logger.py:64 - Components upsert 시작: getOrdersWithUsers (SQL_SELECT)
2025-09-13 01:00:13,248 - SourceAnalyzer - DEBUG - logger.py:64 - 기존 레코드 확인 쿼리: 
                    SELECT component_id FROM components 
                    WHERE project_id = ? AND component_name = ? AND file_id = ?
                    
2025-09-13 01:00:13,248 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 파라미터: (1, 'getOrdersWithUsers', 23)
2025-09-13 01:00:13,248 - SourceAnalyzer - DEBUG - logger.py:64 - 기존 레코드 조회 결과: <sqlite3.Row object at 0x0000015C850A8730>
2025-09-13 01:00:13,248 - SourceAnalyzer - DEBUG - logger.py:64 - UPDATE 쿼리: 
                        UPDATE components SET component_type = ?, parent_id = ?, layer = ?, line_start = ?, line_end = ?, hash_value = ?, has_error = ?, error_message = ?, del_yn = ?
                        WHERE component_id = ?
                        
2025-09-13 01:00:13,248 - SourceAnalyzer - DEBUG - logger.py:64 - UPDATE 파라미터: ['SQL_SELECT', None, 'SQL', 27, 36, '9af7b4cb9cb711157b8e5c996b799242', 'N', None, 'N', 1954]
2025-09-13 01:00:13,248 - SourceAnalyzer - DEBUG - logger.py:64 - UPDATE 실행 완료: component_id = 1954
2025-09-13 01:00:13,248 - SourceAnalyzer - DEBUG - logger.py:64 - 컴포넌트 저장 완료: getOrdersWithUsers (ID: 1954)
2025-09-13 01:00:13,248 - SourceAnalyzer - DEBUG - logger.py:64 - 컴포넌트 저장 결과: component_id = 1954
2025-09-13 01:00:13,248 - SourceAnalyzer - DEBUG - logger.py:64 - SQL Content 저장 시작: getOrdersWithUsers (component_id: 1954)
2025-09-13 01:00:13,248 - SourceAnalyzer - DEBUG - logger.py:64 - SQL Content 상대경로: src/main/resources/mybatis/mapper
2025-09-13 01:00:13,248 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 실행 성공: SELECT project_id FROM projects WHERE project_id =...
2025-09-13 01:00:13,248 - SourceAnalyzer - DEBUG - logger.py:64 - 업데이트 쿼리 실행 성공: 
            INSERT OR REPLACE INTO sql_contents (..., 영향받은 행: 1
2025-09-13 01:00:13,249 - SourceAnalyzer - DEBUG - logger.py:64 - SQL 내용 저장 완료: getOrdersWithUsers - src/main/resources/mybatis/mapper
2025-09-13 01:00:13,249 - SourceAnalyzer - DEBUG - logger.py:64 - SQL Content 저장 완료: getOrdersWithUsers - src/main/resources/mybatis/mapper
2025-09-13 01:00:13,249 - SourceAnalyzer - DEBUG - logger.py:64 - SQL 쿼리 처리 완료: getOrdersWithUsers
2025-09-13 01:00:13,249 - SourceAnalyzer - DEBUG - logger.py:64 - SQL 쿼리 처리 루프 시작: 4/5
2025-09-13 01:00:13,249 - SourceAnalyzer - DEBUG - logger.py:64 - SQL 쿼리 처리 시작: getComplexJoin (select)
2025-09-13 01:00:13,249 - SourceAnalyzer - DEBUG - logger.py:64 - GET XML ID 조회: D:\Analyzer\CreateMetaDb\projects\sampleSrc\src\main\resources\mybatis\mapper\ImplicitJoinMapper.xml -> src/main/resources/mybatis/mapper/ImplicitJoinMapper.xml
2025-09-13 01:00:13,249 - SourceAnalyzer - DEBUG - logger.py:64 - 메모리 매핑 테이블 키들: ['src/com/example/dynamicquery/UserMapper.xml', 'src/main/resources/mybatis/mapper/ImplicitJoinMapper.xml', 'src/main/resources/mybatis/mapper/ImplicitJoinTestMapper.xml', 'src/main/resources/mybatis/mapper/MixedErrorMapper.xml', 'src/main/resources/mybatis/mapper/ProductMapper.xml', 'src/main/resources/mybatis/mapper/UserMapper.xml']
2025-09-13 01:00:13,249 - SourceAnalyzer - DEBUG - logger.py:64 - 메모리에서 file_id 조회 성공: src/main/resources/mybatis/mapper/ImplicitJoinMapper.xml -> 23
2025-09-13 01:00:13,249 - SourceAnalyzer - DEBUG - logger.py:64 - 파일 ID 조회 성공: 23
2025-09-13 01:00:13,249 - SourceAnalyzer - DEBUG - logger.py:64 - 컴포넌트 저장 시도: getComplexJoin (select) -> SQL_SELECT
2025-09-13 01:00:13,249 - SourceAnalyzer - DEBUG - logger.py:64 - Upsert 실행: components
2025-09-13 01:00:13,249 - SourceAnalyzer - DEBUG - logger.py:64 - 데이터: {'project_id': 1, 'component_type': 'SQL_SELECT', 'component_name': 'getComplexJoin', 'parent_id': None, 'layer': 'SQL', 'file_id': 23, 'line_start': 36, 'line_end': 47, 'hash_value': '4f6edc2e1837a26f97161f2570f0665e', 'has_error': 'N', 'error_message': None, 'del_yn': 'N'}
2025-09-13 01:00:13,249 - SourceAnalyzer - DEBUG - logger.py:64 - Components upsert 시작: getComplexJoin (SQL_SELECT)
2025-09-13 01:00:13,249 - SourceAnalyzer - DEBUG - logger.py:64 - 기존 레코드 확인 쿼리: 
                    SELECT component_id FROM components 
                    WHERE project_id = ? AND component_name = ? AND file_id = ?
                    
2025-09-13 01:00:13,249 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 파라미터: (1, 'getComplexJoin', 23)
2025-09-13 01:00:13,249 - SourceAnalyzer - DEBUG - logger.py:64 - 기존 레코드 조회 결과: <sqlite3.Row object at 0x0000015C850A8880>
2025-09-13 01:00:13,249 - SourceAnalyzer - DEBUG - logger.py:64 - UPDATE 쿼리: 
                        UPDATE components SET component_type = ?, parent_id = ?, layer = ?, line_start = ?, line_end = ?, hash_value = ?, has_error = ?, error_message = ?, del_yn = ?
                        WHERE component_id = ?
                        
2025-09-13 01:00:13,249 - SourceAnalyzer - DEBUG - logger.py:64 - UPDATE 파라미터: ['SQL_SELECT', None, 'SQL', 36, 47, '4f6edc2e1837a26f97161f2570f0665e', 'N', None, 'N', 1955]
2025-09-13 01:00:13,249 - SourceAnalyzer - DEBUG - logger.py:64 - UPDATE 실행 완료: component_id = 1955
2025-09-13 01:00:13,249 - SourceAnalyzer - DEBUG - logger.py:64 - 컴포넌트 저장 완료: getComplexJoin (ID: 1955)
2025-09-13 01:00:13,249 - SourceAnalyzer - DEBUG - logger.py:64 - 컴포넌트 저장 결과: component_id = 1955
2025-09-13 01:00:13,249 - SourceAnalyzer - DEBUG - logger.py:64 - SQL Content 저장 시작: getComplexJoin (component_id: 1955)
2025-09-13 01:00:13,249 - SourceAnalyzer - DEBUG - logger.py:64 - SQL Content 상대경로: src/main/resources/mybatis/mapper
2025-09-13 01:00:13,249 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 실행 성공: SELECT project_id FROM projects WHERE project_id =...
2025-09-13 01:00:13,249 - SourceAnalyzer - DEBUG - logger.py:64 - 업데이트 쿼리 실행 성공: 
            INSERT OR REPLACE INTO sql_contents (..., 영향받은 행: 1
2025-09-13 01:00:13,250 - SourceAnalyzer - DEBUG - logger.py:64 - SQL 내용 저장 완료: getComplexJoin - src/main/resources/mybatis/mapper
2025-09-13 01:00:13,250 - SourceAnalyzer - DEBUG - logger.py:64 - SQL Content 저장 완료: getComplexJoin - src/main/resources/mybatis/mapper
2025-09-13 01:00:13,250 - SourceAnalyzer - DEBUG - logger.py:64 - SQL 쿼리 처리 완료: getComplexJoin
2025-09-13 01:00:13,250 - SourceAnalyzer - DEBUG - logger.py:64 - SQL 쿼리 처리 루프 시작: 5/5
2025-09-13 01:00:13,250 - SourceAnalyzer - DEBUG - logger.py:64 - SQL 쿼리 처리 시작: getMixedJoin (select)
2025-09-13 01:00:13,250 - SourceAnalyzer - DEBUG - logger.py:64 - GET XML ID 조회: D:\Analyzer\CreateMetaDb\projects\sampleSrc\src\main\resources\mybatis\mapper\ImplicitJoinMapper.xml -> src/main/resources/mybatis/mapper/ImplicitJoinMapper.xml
2025-09-13 01:00:13,250 - SourceAnalyzer - DEBUG - logger.py:64 - 메모리 매핑 테이블 키들: ['src/com/example/dynamicquery/UserMapper.xml', 'src/main/resources/mybatis/mapper/ImplicitJoinMapper.xml', 'src/main/resources/mybatis/mapper/ImplicitJoinTestMapper.xml', 'src/main/resources/mybatis/mapper/MixedErrorMapper.xml', 'src/main/resources/mybatis/mapper/ProductMapper.xml', 'src/main/resources/mybatis/mapper/UserMapper.xml']
2025-09-13 01:00:13,250 - SourceAnalyzer - DEBUG - logger.py:64 - 메모리에서 file_id 조회 성공: src/main/resources/mybatis/mapper/ImplicitJoinMapper.xml -> 23
2025-09-13 01:00:13,250 - SourceAnalyzer - DEBUG - logger.py:64 - 파일 ID 조회 성공: 23
2025-09-13 01:00:13,250 - SourceAnalyzer - DEBUG - logger.py:64 - 컴포넌트 저장 시도: getMixedJoin (select) -> SQL_SELECT
2025-09-13 01:00:13,250 - SourceAnalyzer - DEBUG - logger.py:64 - Upsert 실행: components
2025-09-13 01:00:13,250 - SourceAnalyzer - DEBUG - logger.py:64 - 데이터: {'project_id': 1, 'component_type': 'SQL_SELECT', 'component_name': 'getMixedJoin', 'parent_id': None, 'layer': 'SQL', 'file_id': 23, 'line_start': 47, 'line_end': 58, 'hash_value': 'b4e61b3903db473ee77eb65a530b7136', 'has_error': 'N', 'error_message': None, 'del_yn': 'N'}
2025-09-13 01:00:13,250 - SourceAnalyzer - DEBUG - logger.py:64 - Components upsert 시작: getMixedJoin (SQL_SELECT)
2025-09-13 01:00:13,250 - SourceAnalyzer - DEBUG - logger.py:64 - 기존 레코드 확인 쿼리: 
                    SELECT component_id FROM components 
                    WHERE project_id = ? AND component_name = ? AND file_id = ?
                    
2025-09-13 01:00:13,250 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 파라미터: (1, 'getMixedJoin', 23)
2025-09-13 01:00:13,250 - SourceAnalyzer - DEBUG - logger.py:64 - 기존 레코드 조회 결과: <sqlite3.Row object at 0x0000015C850A9000>
2025-09-13 01:00:13,250 - SourceAnalyzer - DEBUG - logger.py:64 - UPDATE 쿼리: 
                        UPDATE components SET component_type = ?, parent_id = ?, layer = ?, line_start = ?, line_end = ?, hash_value = ?, has_error = ?, error_message = ?, del_yn = ?
                        WHERE component_id = ?
                        
2025-09-13 01:00:13,250 - SourceAnalyzer - DEBUG - logger.py:64 - UPDATE 파라미터: ['SQL_SELECT', None, 'SQL', 47, 58, 'b4e61b3903db473ee77eb65a530b7136', 'N', None, 'N', 1956]
2025-09-13 01:00:13,250 - SourceAnalyzer - DEBUG - logger.py:64 - UPDATE 실행 완료: component_id = 1956
2025-09-13 01:00:13,250 - SourceAnalyzer - DEBUG - logger.py:64 - 컴포넌트 저장 완료: getMixedJoin (ID: 1956)
2025-09-13 01:00:13,250 - SourceAnalyzer - DEBUG - logger.py:64 - 컴포넌트 저장 결과: component_id = 1956
2025-09-13 01:00:13,250 - SourceAnalyzer - DEBUG - logger.py:64 - SQL Content 저장 시작: getMixedJoin (component_id: 1956)
2025-09-13 01:00:13,250 - SourceAnalyzer - DEBUG - logger.py:64 - SQL Content 상대경로: src/main/resources/mybatis/mapper
2025-09-13 01:00:13,250 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 실행 성공: SELECT project_id FROM projects WHERE project_id =...
2025-09-13 01:00:13,251 - SourceAnalyzer - DEBUG - logger.py:64 - 업데이트 쿼리 실행 성공: 
            INSERT OR REPLACE INTO sql_contents (..., 영향받은 행: 1
2025-09-13 01:00:13,251 - SourceAnalyzer - DEBUG - logger.py:64 - SQL 내용 저장 완료: getMixedJoin - src/main/resources/mybatis/mapper
2025-09-13 01:00:13,251 - SourceAnalyzer - DEBUG - logger.py:64 - SQL Content 저장 완료: getMixedJoin - src/main/resources/mybatis/mapper
2025-09-13 01:00:13,251 - SourceAnalyzer - DEBUG - logger.py:64 - SQL 쿼리 처리 완료: getMixedJoin
2025-09-13 01:00:13,251 - SourceAnalyzer - INFO - logger.py:68 - === SQL 쿼리 처리 완료 ===
2025-09-13 01:00:13,251 - SourceAnalyzer - INFO - logger.py:68 - 처리된 쿼리 수: 5
2025-09-13 01:00:13,251 - SourceAnalyzer - INFO - logger.py:68 - 건너뜀 쿼리 수: 0
2025-09-13 01:00:13,251 - SourceAnalyzer - INFO - logger.py:68 - 컴포넌트 ID 매핑 크기: 5
2025-09-13 01:00:13,251 - SourceAnalyzer - INFO - logger.py:68 - SQL 컴포넌트 저장 완료: 5개 (건너뜀: 0개)
2025-09-13 01:00:13,251 - SourceAnalyzer - INFO - logger.py:68 - process_sql_queries 호출 후: result=True
2025-09-13 01:00:13,251 - SourceAnalyzer - INFO - logger.py:68 - SQL Content Processor 처리 결과: True
2025-09-13 01:00:13,251 - SourceAnalyzer - INFO - logger.py:68 - === XML 로딩 엔진: SQL 컴포넌트 저장 완료 ===
2025-09-13 01:00:13,251 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 실행 성공: 
                SELECT c.component_id 
          ...
2025-09-13 01:00:13,251 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 실행 성공: 
                SELECT c.component_id 
          ...
2025-09-13 01:00:13,252 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 실행 성공: 
                SELECT c.component_id 
          ...
2025-09-13 01:00:13,252 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 실행 성공: 
                SELECT c.component_id 
          ...
2025-09-13 01:00:13,252 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 실행 성공: 
                SELECT c.component_id 
          ...
2025-09-13 01:00:13,252 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 실행 성공: 
                SELECT c.component_id 
          ...
2025-09-13 01:00:13,252 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 실행 성공: 
                SELECT c.component_id 
          ...
2025-09-13 01:00:13,252 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 실행 성공: 
                SELECT c.component_id 
          ...
2025-09-13 01:00:13,252 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 실행 성공: 
                SELECT c.component_id 
          ...
2025-09-13 01:00:13,252 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 실행 성공: 
                SELECT c.component_id 
          ...
2025-09-13 01:00:13,252 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 실행 성공: 
                SELECT c.component_id 
          ...
2025-09-13 01:00:13,252 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 실행 성공: 
                SELECT c.component_id 
          ...
2025-09-13 01:00:13,252 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 실행 성공: 
                SELECT c.component_id 
          ...
2025-09-13 01:00:13,252 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 실행 성공: 
                SELECT c.component_id 
          ...
2025-09-13 01:00:13,252 - SourceAnalyzer - DEBUG - logger.py:64 - 배치 쿼리 실행 성공: 
            INSERT OR IGNORE INTO relationships (..., 처리된 행: 7
2025-09-13 01:00:13,252 - SourceAnalyzer - INFO - logger.py:68 - JOIN 관계 저장 완료: 7개
2025-09-13 01:00:13,253 - SourceAnalyzer - WARNING - logger.py:72 - XML 파싱 오류: D:\Analyzer\CreateMetaDb\projects\sampleSrc\src\main\resources\mybatis\mapper\ImplicitJoinTestMapper.xml - not well-formed (invalid token): line 190, column 37
2025-09-13 01:00:13,253 - SourceAnalyzer - WARNING - logger.py:72 - XML 파싱 에러로 건너뜀: D:\Analyzer\CreateMetaDb\projects\sampleSrc\src\main\resources\mybatis\mapper\ImplicitJoinTestMapper.xml - XML 파싱 오류: not well-formed (invalid token): line 190, column 37
2025-09-13 01:00:13,254 - SourceAnalyzer - DEBUG - logger.py:64 - 파일 읽기 성공: D:\Analyzer\CreateMetaDb\projects\sampleSrc\src\main\resources\mybatis\mapper\MixedErrorMapper.xml
2025-09-13 01:00:13,254 - SourceAnalyzer - DEBUG - logger.py:64 - 파일 읽기 성공: D:\Analyzer\CreateMetaDb\projects\sampleSrc\src\main\resources\mybatis\mapper\MixedErrorMapper.xml
2025-09-13 01:00:13,255 - SourceAnalyzer - DEBUG - logger.py:64 - 파일 읽기 성공: D:\Analyzer\CreateMetaDb\projects\sampleSrc\src\main\resources\mybatis\mapper\MixedErrorMapper.xml
2025-09-13 01:00:13,255 - SourceAnalyzer - DEBUG - logger.py:64 - 파일 읽기 성공: D:\Analyzer\CreateMetaDb\projects\sampleSrc\src\main\resources\mybatis\mapper\MixedErrorMapper.xml
2025-09-13 01:00:13,255 - SourceAnalyzer - DEBUG - logger.py:64 - 파일 읽기 성공: D:\Analyzer\CreateMetaDb\projects\sampleSrc\src\main\resources\mybatis\mapper\MixedErrorMapper.xml
2025-09-13 01:00:13,256 - SourceAnalyzer - DEBUG - logger.py:64 - 파일 읽기 성공: D:\Analyzer\CreateMetaDb\projects\sampleSrc\src\main\resources\mybatis\mapper\MixedErrorMapper.xml
2025-09-13 01:00:13,256 - SourceAnalyzer - DEBUG - logger.py:64 - 파일 읽기 성공: D:\Analyzer\CreateMetaDb\projects\sampleSrc\src\main\resources\mybatis\mapper\MixedErrorMapper.xml
2025-09-13 01:00:13,256 - SourceAnalyzer - DEBUG - logger.py:64 - 파일 읽기 성공: D:\Analyzer\CreateMetaDb\projects\sampleSrc\src\main\resources\mybatis\mapper\MixedErrorMapper.xml
2025-09-13 01:00:13,257 - SourceAnalyzer - DEBUG - logger.py:64 - 파일 읽기 성공: D:\Analyzer\CreateMetaDb\projects\sampleSrc\src\main\resources\mybatis\mapper\MixedErrorMapper.xml
2025-09-13 01:00:13,258 - SourceAnalyzer - DEBUG - logger.py:64 - 파일 읽기 성공: D:\Analyzer\CreateMetaDb\projects\sampleSrc\src\main\resources\mybatis\mapper\MixedErrorMapper.xml
2025-09-13 01:00:13,259 - SourceAnalyzer - DEBUG - logger.py:64 - 파일 읽기 성공: D:\Analyzer\CreateMetaDb\projects\sampleSrc\src\main\resources\mybatis\mapper\MixedErrorMapper.xml
2025-09-13 01:00:13,259 - SourceAnalyzer - DEBUG - logger.py:64 - 파일 읽기 성공: D:\Analyzer\CreateMetaDb\projects\sampleSrc\src\main\resources\mybatis\mapper\MixedErrorMapper.xml
2025-09-13 01:00:13,260 - SourceAnalyzer - INFO - logger.py:68 - === XML 로딩 엔진: SQL 컴포넌트 저장 시작 ===
2025-09-13 01:00:13,260 - SourceAnalyzer - INFO - logger.py:68 - 전달받은 SQL 쿼리 수: 12개
2025-09-13 01:00:13,260 - SourceAnalyzer - INFO - logger.py:68 - XML에서 추출된 SQL 쿼리 타입별 통계: {'select': 9, 'insert': 1, 'update': 1, 'delete': 1}
2025-09-13 01:00:13,260 - SourceAnalyzer - INFO - logger.py:68 - 프로젝트 ID: 1
2025-09-13 01:00:13,260 - SourceAnalyzer - INFO - logger.py:68 - SQL Content Processor를 사용하여 처리 시작
2025-09-13 01:00:13,260 - SourceAnalyzer - INFO - logger.py:68 - process_sql_queries 호출 전: sql_queries=12, project_id=1
2025-09-13 01:00:13,260 - SourceAnalyzer - INFO - logger.py:68 - === SQL 쿼리 처리 시작 ===
2025-09-13 01:00:13,260 - SourceAnalyzer - INFO - logger.py:68 - 전달받은 SQL 쿼리 수: 12
2025-09-13 01:00:13,260 - SourceAnalyzer - INFO - logger.py:68 - 프로젝트 ID: 1
2025-09-13 01:00:13,260 - SourceAnalyzer - INFO - logger.py:68 - SQL 쿼리 타입별 통계: {'select': 9, 'insert': 1, 'update': 1, 'delete': 1}
2025-09-13 01:00:13,260 - SourceAnalyzer - DEBUG - logger.py:64 - SQL 쿼리 리스트 크기: 12
2025-09-13 01:00:13,260 - SourceAnalyzer - DEBUG - logger.py:64 - SQL 쿼리 리스트 타입: <class 'list'>
2025-09-13 01:00:13,260 - SourceAnalyzer - DEBUG - logger.py:64 - 첫 번째 쿼리 정보: {'tag_name': 'select', 'query_id': 'selectAll', 'sql_content': 'SELECT id, name, email, create_date, update_date FROM users ORDER BY create_date DESC', 'file_path': 'D:\\Analyzer\\CreateMetaDb\\projects\\sampleSrc\\src\\main\\resources\\mybatis\\mapper\\MixedErrorMapper.xml', 'line_start': 9, 'line_end': 16, 'hash_value': '1a310b2b806e08551a7e2f1c48659e6d'}
2025-09-13 01:00:13,260 - SourceAnalyzer - DEBUG - logger.py:64 - SQL 쿼리 처리 루프 시작: 1/12
2025-09-13 01:00:13,260 - SourceAnalyzer - DEBUG - logger.py:64 - SQL 쿼리 처리 시작: selectAll (select)
2025-09-13 01:00:13,260 - SourceAnalyzer - DEBUG - logger.py:64 - GET XML ID 조회: D:\Analyzer\CreateMetaDb\projects\sampleSrc\src\main\resources\mybatis\mapper\MixedErrorMapper.xml -> src/main/resources/mybatis/mapper/MixedErrorMapper.xml
2025-09-13 01:00:13,260 - SourceAnalyzer - DEBUG - logger.py:64 - 메모리 매핑 테이블 키들: ['src/com/example/dynamicquery/UserMapper.xml', 'src/main/resources/mybatis/mapper/ImplicitJoinMapper.xml', 'src/main/resources/mybatis/mapper/ImplicitJoinTestMapper.xml', 'src/main/resources/mybatis/mapper/MixedErrorMapper.xml', 'src/main/resources/mybatis/mapper/ProductMapper.xml', 'src/main/resources/mybatis/mapper/UserMapper.xml']
2025-09-13 01:00:13,260 - SourceAnalyzer - DEBUG - logger.py:64 - 메모리에서 file_id 조회 성공: src/main/resources/mybatis/mapper/MixedErrorMapper.xml -> 25
2025-09-13 01:00:13,260 - SourceAnalyzer - DEBUG - logger.py:64 - 파일 ID 조회 성공: 25
2025-09-13 01:00:13,260 - SourceAnalyzer - DEBUG - logger.py:64 - 컴포넌트 저장 시도: selectAll (select) -> SQL_SELECT
2025-09-13 01:00:13,260 - SourceAnalyzer - DEBUG - logger.py:64 - Upsert 실행: components
2025-09-13 01:00:13,260 - SourceAnalyzer - DEBUG - logger.py:64 - 데이터: {'project_id': 1, 'component_type': 'SQL_SELECT', 'component_name': 'selectAll', 'parent_id': None, 'layer': 'SQL', 'file_id': 25, 'line_start': 9, 'line_end': 16, 'hash_value': '1a310b2b806e08551a7e2f1c48659e6d', 'has_error': 'N', 'error_message': None, 'del_yn': 'N'}
2025-09-13 01:00:13,260 - SourceAnalyzer - DEBUG - logger.py:64 - Components upsert 시작: selectAll (SQL_SELECT)
2025-09-13 01:00:13,260 - SourceAnalyzer - DEBUG - logger.py:64 - 기존 레코드 확인 쿼리: 
                    SELECT component_id FROM components 
                    WHERE project_id = ? AND component_name = ? AND file_id = ?
                    
2025-09-13 01:00:13,261 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 파라미터: (1, 'selectAll', 25)
2025-09-13 01:00:13,261 - SourceAnalyzer - DEBUG - logger.py:64 - 기존 레코드 조회 결과: None
2025-09-13 01:00:13,261 - SourceAnalyzer - DEBUG - logger.py:64 - INSERT 쿼리: 
                        INSERT INTO components (project_id, component_type, component_name, parent_id, layer, file_id, line_start, line_end, hash_value, has_error, error_message, del_yn)
                        VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
                        
2025-09-13 01:00:13,261 - SourceAnalyzer - DEBUG - logger.py:64 - INSERT 파라미터: (1, 'SQL_SELECT', 'selectAll', None, 'SQL', 25, 9, 16, '1a310b2b806e08551a7e2f1c48659e6d', 'N', None, 'N')
2025-09-13 01:00:13,261 - SourceAnalyzer - DEBUG - logger.py:64 - INSERT 실행 완료: component_id = 3067
2025-09-13 01:00:13,261 - SourceAnalyzer - DEBUG - logger.py:64 - 컴포넌트 저장 완료: selectAll (ID: 3067)
2025-09-13 01:00:13,261 - SourceAnalyzer - DEBUG - logger.py:64 - 컴포넌트 저장 결과: component_id = 3067
2025-09-13 01:00:13,261 - SourceAnalyzer - DEBUG - logger.py:64 - SQL Content 저장 시작: selectAll (component_id: 3067)
2025-09-13 01:00:13,261 - SourceAnalyzer - DEBUG - logger.py:64 - SQL Content 상대경로: src/main/resources/mybatis/mapper
2025-09-13 01:00:13,261 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 실행 성공: SELECT project_id FROM projects WHERE project_id =...
2025-09-13 01:00:13,261 - SourceAnalyzer - DEBUG - logger.py:64 - 업데이트 쿼리 실행 성공: 
            INSERT OR REPLACE INTO sql_contents (..., 영향받은 행: 1
2025-09-13 01:00:13,261 - SourceAnalyzer - DEBUG - logger.py:64 - SQL 내용 저장 완료: selectAll - src/main/resources/mybatis/mapper
2025-09-13 01:00:13,261 - SourceAnalyzer - DEBUG - logger.py:64 - SQL Content 저장 완료: selectAll - src/main/resources/mybatis/mapper
2025-09-13 01:00:13,261 - SourceAnalyzer - DEBUG - logger.py:64 - SQL 쿼리 처리 완료: selectAll
2025-09-13 01:00:13,261 - SourceAnalyzer - DEBUG - logger.py:64 - SQL 쿼리 처리 루프 시작: 2/12
2025-09-13 01:00:13,261 - SourceAnalyzer - DEBUG - logger.py:64 - SQL 쿼리 처리 시작: selectById (select)
2025-09-13 01:00:13,261 - SourceAnalyzer - DEBUG - logger.py:64 - GET XML ID 조회: D:\Analyzer\CreateMetaDb\projects\sampleSrc\src\main\resources\mybatis\mapper\MixedErrorMapper.xml -> src/main/resources/mybatis/mapper/MixedErrorMapper.xml
2025-09-13 01:00:13,262 - SourceAnalyzer - DEBUG - logger.py:64 - 메모리 매핑 테이블 키들: ['src/com/example/dynamicquery/UserMapper.xml', 'src/main/resources/mybatis/mapper/ImplicitJoinMapper.xml', 'src/main/resources/mybatis/mapper/ImplicitJoinTestMapper.xml', 'src/main/resources/mybatis/mapper/MixedErrorMapper.xml', 'src/main/resources/mybatis/mapper/ProductMapper.xml', 'src/main/resources/mybatis/mapper/UserMapper.xml']
2025-09-13 01:00:13,262 - SourceAnalyzer - DEBUG - logger.py:64 - 메모리에서 file_id 조회 성공: src/main/resources/mybatis/mapper/MixedErrorMapper.xml -> 25
2025-09-13 01:00:13,262 - SourceAnalyzer - DEBUG - logger.py:64 - 파일 ID 조회 성공: 25
2025-09-13 01:00:13,262 - SourceAnalyzer - DEBUG - logger.py:64 - 컴포넌트 저장 시도: selectById (select) -> SQL_SELECT
2025-09-13 01:00:13,262 - SourceAnalyzer - DEBUG - logger.py:64 - Upsert 실행: components
2025-09-13 01:00:13,262 - SourceAnalyzer - DEBUG - logger.py:64 - 데이터: {'project_id': 1, 'component_type': 'SQL_SELECT', 'component_name': 'selectById', 'parent_id': None, 'layer': 'SQL', 'file_id': 25, 'line_start': 16, 'line_end': 23, 'hash_value': '8c13dec51af673af3fbf8cb69d054b6c', 'has_error': 'N', 'error_message': None, 'del_yn': 'N'}
2025-09-13 01:00:13,262 - SourceAnalyzer - DEBUG - logger.py:64 - Components upsert 시작: selectById (SQL_SELECT)
2025-09-13 01:00:13,262 - SourceAnalyzer - DEBUG - logger.py:64 - 기존 레코드 확인 쿼리: 
                    SELECT component_id FROM components 
                    WHERE project_id = ? AND component_name = ? AND file_id = ?
                    
2025-09-13 01:00:13,262 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 파라미터: (1, 'selectById', 25)
2025-09-13 01:00:13,262 - SourceAnalyzer - DEBUG - logger.py:64 - 기존 레코드 조회 결과: None
2025-09-13 01:00:13,262 - SourceAnalyzer - DEBUG - logger.py:64 - INSERT 쿼리: 
                        INSERT INTO components (project_id, component_type, component_name, parent_id, layer, file_id, line_start, line_end, hash_value, has_error, error_message, del_yn)
                        VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
                        
2025-09-13 01:00:13,262 - SourceAnalyzer - DEBUG - logger.py:64 - INSERT 파라미터: (1, 'SQL_SELECT', 'selectById', None, 'SQL', 25, 16, 23, '8c13dec51af673af3fbf8cb69d054b6c', 'N', None, 'N')
2025-09-13 01:00:13,262 - SourceAnalyzer - DEBUG - logger.py:64 - INSERT 실행 완료: component_id = 3068
2025-09-13 01:00:13,262 - SourceAnalyzer - DEBUG - logger.py:64 - 컴포넌트 저장 완료: selectById (ID: 3068)
2025-09-13 01:00:13,262 - SourceAnalyzer - DEBUG - logger.py:64 - 컴포넌트 저장 결과: component_id = 3068
2025-09-13 01:00:13,262 - SourceAnalyzer - DEBUG - logger.py:64 - SQL Content 저장 시작: selectById (component_id: 3068)
2025-09-13 01:00:13,262 - SourceAnalyzer - DEBUG - logger.py:64 - SQL Content 상대경로: src/main/resources/mybatis/mapper
2025-09-13 01:00:13,262 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 실행 성공: SELECT project_id FROM projects WHERE project_id =...
2025-09-13 01:00:13,262 - SourceAnalyzer - DEBUG - logger.py:64 - 업데이트 쿼리 실행 성공: 
            INSERT OR REPLACE INTO sql_contents (..., 영향받은 행: 1
2025-09-13 01:00:13,263 - SourceAnalyzer - DEBUG - logger.py:64 - SQL 내용 저장 완료: selectById - src/main/resources/mybatis/mapper
2025-09-13 01:00:13,263 - SourceAnalyzer - DEBUG - logger.py:64 - SQL Content 저장 완료: selectById - src/main/resources/mybatis/mapper
2025-09-13 01:00:13,263 - SourceAnalyzer - DEBUG - logger.py:64 - SQL 쿼리 처리 완료: selectById
2025-09-13 01:00:13,263 - SourceAnalyzer - DEBUG - logger.py:64 - SQL 쿼리 처리 루프 시작: 3/12
2025-09-13 01:00:13,263 - SourceAnalyzer - DEBUG - logger.py:64 - SQL 쿼리 처리 시작: selectByName (select)
2025-09-13 01:00:13,263 - SourceAnalyzer - DEBUG - logger.py:64 - GET XML ID 조회: D:\Analyzer\CreateMetaDb\projects\sampleSrc\src\main\resources\mybatis\mapper\MixedErrorMapper.xml -> src/main/resources/mybatis/mapper/MixedErrorMapper.xml
2025-09-13 01:00:13,263 - SourceAnalyzer - DEBUG - logger.py:64 - 메모리 매핑 테이블 키들: ['src/com/example/dynamicquery/UserMapper.xml', 'src/main/resources/mybatis/mapper/ImplicitJoinMapper.xml', 'src/main/resources/mybatis/mapper/ImplicitJoinTestMapper.xml', 'src/main/resources/mybatis/mapper/MixedErrorMapper.xml', 'src/main/resources/mybatis/mapper/ProductMapper.xml', 'src/main/resources/mybatis/mapper/UserMapper.xml']
2025-09-13 01:00:13,263 - SourceAnalyzer - DEBUG - logger.py:64 - 메모리에서 file_id 조회 성공: src/main/resources/mybatis/mapper/MixedErrorMapper.xml -> 25
2025-09-13 01:00:13,263 - SourceAnalyzer - DEBUG - logger.py:64 - 파일 ID 조회 성공: 25
2025-09-13 01:00:13,263 - SourceAnalyzer - DEBUG - logger.py:64 - 컴포넌트 저장 시도: selectByName (select) -> SQL_SELECT
2025-09-13 01:00:13,263 - SourceAnalyzer - DEBUG - logger.py:64 - Upsert 실행: components
2025-09-13 01:00:13,263 - SourceAnalyzer - DEBUG - logger.py:64 - 데이터: {'project_id': 1, 'component_type': 'SQL_SELECT', 'component_name': 'selectByName', 'parent_id': None, 'layer': 'SQL', 'file_id': 25, 'line_start': 23, 'line_end': 37, 'hash_value': 'a5657c9c3e73e175c83c7ef4da08f273', 'has_error': 'N', 'error_message': None, 'del_yn': 'N'}
2025-09-13 01:00:13,263 - SourceAnalyzer - DEBUG - logger.py:64 - Components upsert 시작: selectByName (SQL_SELECT)
2025-09-13 01:00:13,263 - SourceAnalyzer - DEBUG - logger.py:64 - 기존 레코드 확인 쿼리: 
                    SELECT component_id FROM components 
                    WHERE project_id = ? AND component_name = ? AND file_id = ?
                    
2025-09-13 01:00:13,263 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 파라미터: (1, 'selectByName', 25)
2025-09-13 01:00:13,263 - SourceAnalyzer - DEBUG - logger.py:64 - 기존 레코드 조회 결과: None
2025-09-13 01:00:13,263 - SourceAnalyzer - DEBUG - logger.py:64 - INSERT 쿼리: 
                        INSERT INTO components (project_id, component_type, component_name, parent_id, layer, file_id, line_start, line_end, hash_value, has_error, error_message, del_yn)
                        VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
                        
2025-09-13 01:00:13,263 - SourceAnalyzer - DEBUG - logger.py:64 - INSERT 파라미터: (1, 'SQL_SELECT', 'selectByName', None, 'SQL', 25, 23, 37, 'a5657c9c3e73e175c83c7ef4da08f273', 'N', None, 'N')
2025-09-13 01:00:13,263 - SourceAnalyzer - DEBUG - logger.py:64 - INSERT 실행 완료: component_id = 3069
2025-09-13 01:00:13,263 - SourceAnalyzer - DEBUG - logger.py:64 - 컴포넌트 저장 완료: selectByName (ID: 3069)
2025-09-13 01:00:13,263 - SourceAnalyzer - DEBUG - logger.py:64 - 컴포넌트 저장 결과: component_id = 3069
2025-09-13 01:00:13,263 - SourceAnalyzer - DEBUG - logger.py:64 - SQL Content 저장 시작: selectByName (component_id: 3069)
2025-09-13 01:00:13,263 - SourceAnalyzer - DEBUG - logger.py:64 - SQL Content 상대경로: src/main/resources/mybatis/mapper
2025-09-13 01:00:13,263 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 실행 성공: SELECT project_id FROM projects WHERE project_id =...
2025-09-13 01:00:13,264 - SourceAnalyzer - DEBUG - logger.py:64 - 업데이트 쿼리 실행 성공: 
            INSERT OR REPLACE INTO sql_contents (..., 영향받은 행: 1
2025-09-13 01:00:13,264 - SourceAnalyzer - DEBUG - logger.py:64 - SQL 내용 저장 완료: selectByName - src/main/resources/mybatis/mapper
2025-09-13 01:00:13,264 - SourceAnalyzer - DEBUG - logger.py:64 - SQL Content 저장 완료: selectByName - src/main/resources/mybatis/mapper
2025-09-13 01:00:13,264 - SourceAnalyzer - DEBUG - logger.py:64 - SQL 쿼리 처리 완료: selectByName
2025-09-13 01:00:13,264 - SourceAnalyzer - DEBUG - logger.py:64 - SQL 쿼리 처리 루프 시작: 4/12
2025-09-13 01:00:13,264 - SourceAnalyzer - DEBUG - logger.py:64 - SQL 쿼리 처리 시작: insert (insert)
2025-09-13 01:00:13,264 - SourceAnalyzer - DEBUG - logger.py:64 - GET XML ID 조회: D:\Analyzer\CreateMetaDb\projects\sampleSrc\src\main\resources\mybatis\mapper\MixedErrorMapper.xml -> src/main/resources/mybatis/mapper/MixedErrorMapper.xml
2025-09-13 01:00:13,264 - SourceAnalyzer - DEBUG - logger.py:64 - 메모리 매핑 테이블 키들: ['src/com/example/dynamicquery/UserMapper.xml', 'src/main/resources/mybatis/mapper/ImplicitJoinMapper.xml', 'src/main/resources/mybatis/mapper/ImplicitJoinTestMapper.xml', 'src/main/resources/mybatis/mapper/MixedErrorMapper.xml', 'src/main/resources/mybatis/mapper/ProductMapper.xml', 'src/main/resources/mybatis/mapper/UserMapper.xml']
2025-09-13 01:00:13,264 - SourceAnalyzer - DEBUG - logger.py:64 - 메모리에서 file_id 조회 성공: src/main/resources/mybatis/mapper/MixedErrorMapper.xml -> 25
2025-09-13 01:00:13,264 - SourceAnalyzer - DEBUG - logger.py:64 - 파일 ID 조회 성공: 25
2025-09-13 01:00:13,264 - SourceAnalyzer - DEBUG - logger.py:64 - 컴포넌트 저장 시도: insert (insert) -> SQL_INSERT
2025-09-13 01:00:13,264 - SourceAnalyzer - DEBUG - logger.py:64 - Upsert 실행: components
2025-09-13 01:00:13,264 - SourceAnalyzer - DEBUG - logger.py:64 - 데이터: {'project_id': 1, 'component_type': 'SQL_INSERT', 'component_name': 'insert', 'parent_id': None, 'layer': 'SQL', 'file_id': 25, 'line_start': 37, 'line_end': 43, 'hash_value': '6aa3fec8a2c1b715df5cc342714f6bc0', 'has_error': 'N', 'error_message': None, 'del_yn': 'N'}
2025-09-13 01:00:13,264 - SourceAnalyzer - DEBUG - logger.py:64 - Components upsert 시작: insert (SQL_INSERT)
2025-09-13 01:00:13,264 - SourceAnalyzer - DEBUG - logger.py:64 - 기존 레코드 확인 쿼리: 
                    SELECT component_id FROM components 
                    WHERE project_id = ? AND component_name = ? AND file_id = ?
                    
2025-09-13 01:00:13,264 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 파라미터: (1, 'insert', 25)
2025-09-13 01:00:13,264 - SourceAnalyzer - DEBUG - logger.py:64 - 기존 레코드 조회 결과: None
2025-09-13 01:00:13,264 - SourceAnalyzer - DEBUG - logger.py:64 - INSERT 쿼리: 
                        INSERT INTO components (project_id, component_type, component_name, parent_id, layer, file_id, line_start, line_end, hash_value, has_error, error_message, del_yn)
                        VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
                        
2025-09-13 01:00:13,264 - SourceAnalyzer - DEBUG - logger.py:64 - INSERT 파라미터: (1, 'SQL_INSERT', 'insert', None, 'SQL', 25, 37, 43, '6aa3fec8a2c1b715df5cc342714f6bc0', 'N', None, 'N')
2025-09-13 01:00:13,264 - SourceAnalyzer - DEBUG - logger.py:64 - INSERT 실행 완료: component_id = 3070
2025-09-13 01:00:13,264 - SourceAnalyzer - DEBUG - logger.py:64 - 컴포넌트 저장 완료: insert (ID: 3070)
2025-09-13 01:00:13,264 - SourceAnalyzer - DEBUG - logger.py:64 - 컴포넌트 저장 결과: component_id = 3070
2025-09-13 01:00:13,264 - SourceAnalyzer - DEBUG - logger.py:64 - SQL Content 저장 시작: insert (component_id: 3070)
2025-09-13 01:00:13,264 - SourceAnalyzer - DEBUG - logger.py:64 - SQL Content 상대경로: src/main/resources/mybatis/mapper
2025-09-13 01:00:13,264 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 실행 성공: SELECT project_id FROM projects WHERE project_id =...
2025-09-13 01:00:13,265 - SourceAnalyzer - DEBUG - logger.py:64 - 업데이트 쿼리 실행 성공: 
            INSERT OR REPLACE INTO sql_contents (..., 영향받은 행: 1
2025-09-13 01:00:13,265 - SourceAnalyzer - DEBUG - logger.py:64 - SQL 내용 저장 완료: insert - src/main/resources/mybatis/mapper
2025-09-13 01:00:13,265 - SourceAnalyzer - DEBUG - logger.py:64 - SQL Content 저장 완료: insert - src/main/resources/mybatis/mapper
2025-09-13 01:00:13,265 - SourceAnalyzer - DEBUG - logger.py:64 - SQL 쿼리 처리 완료: insert
2025-09-13 01:00:13,265 - SourceAnalyzer - DEBUG - logger.py:64 - SQL 쿼리 처리 루프 시작: 5/12
2025-09-13 01:00:13,265 - SourceAnalyzer - DEBUG - logger.py:64 - SQL 쿼리 처리 시작: update (update)
2025-09-13 01:00:13,265 - SourceAnalyzer - DEBUG - logger.py:64 - GET XML ID 조회: D:\Analyzer\CreateMetaDb\projects\sampleSrc\src\main\resources\mybatis\mapper\MixedErrorMapper.xml -> src/main/resources/mybatis/mapper/MixedErrorMapper.xml
2025-09-13 01:00:13,265 - SourceAnalyzer - DEBUG - logger.py:64 - 메모리 매핑 테이블 키들: ['src/com/example/dynamicquery/UserMapper.xml', 'src/main/resources/mybatis/mapper/ImplicitJoinMapper.xml', 'src/main/resources/mybatis/mapper/ImplicitJoinTestMapper.xml', 'src/main/resources/mybatis/mapper/MixedErrorMapper.xml', 'src/main/resources/mybatis/mapper/ProductMapper.xml', 'src/main/resources/mybatis/mapper/UserMapper.xml']
2025-09-13 01:00:13,265 - SourceAnalyzer - DEBUG - logger.py:64 - 메모리에서 file_id 조회 성공: src/main/resources/mybatis/mapper/MixedErrorMapper.xml -> 25
2025-09-13 01:00:13,265 - SourceAnalyzer - DEBUG - logger.py:64 - 파일 ID 조회 성공: 25
2025-09-13 01:00:13,265 - SourceAnalyzer - DEBUG - logger.py:64 - 컴포넌트 저장 시도: update (update) -> SQL_UPDATE
2025-09-13 01:00:13,265 - SourceAnalyzer - DEBUG - logger.py:64 - Upsert 실행: components
2025-09-13 01:00:13,265 - SourceAnalyzer - DEBUG - logger.py:64 - 데이터: {'project_id': 1, 'component_type': 'SQL_UPDATE', 'component_name': 'update', 'parent_id': None, 'layer': 'SQL', 'file_id': 25, 'line_start': 10, 'line_end': 25, 'hash_value': 'ea7bceace242ccf5c137e65c4dc0ddb6', 'has_error': 'N', 'error_message': None, 'del_yn': 'N'}
2025-09-13 01:00:13,265 - SourceAnalyzer - DEBUG - logger.py:64 - Components upsert 시작: update (SQL_UPDATE)
2025-09-13 01:00:13,265 - SourceAnalyzer - DEBUG - logger.py:64 - 기존 레코드 확인 쿼리: 
                    SELECT component_id FROM components 
                    WHERE project_id = ? AND component_name = ? AND file_id = ?
                    
2025-09-13 01:00:13,265 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 파라미터: (1, 'update', 25)
2025-09-13 01:00:13,265 - SourceAnalyzer - DEBUG - logger.py:64 - 기존 레코드 조회 결과: None
2025-09-13 01:00:13,265 - SourceAnalyzer - DEBUG - logger.py:64 - INSERT 쿼리: 
                        INSERT INTO components (project_id, component_type, component_name, parent_id, layer, file_id, line_start, line_end, hash_value, has_error, error_message, del_yn)
                        VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
                        
2025-09-13 01:00:13,265 - SourceAnalyzer - DEBUG - logger.py:64 - INSERT 파라미터: (1, 'SQL_UPDATE', 'update', None, 'SQL', 25, 10, 25, 'ea7bceace242ccf5c137e65c4dc0ddb6', 'N', None, 'N')
2025-09-13 01:00:13,265 - SourceAnalyzer - DEBUG - logger.py:64 - INSERT 실행 완료: component_id = 3071
2025-09-13 01:00:13,265 - SourceAnalyzer - DEBUG - logger.py:64 - 컴포넌트 저장 완료: update (ID: 3071)
2025-09-13 01:00:13,265 - SourceAnalyzer - DEBUG - logger.py:64 - 컴포넌트 저장 결과: component_id = 3071
2025-09-13 01:00:13,265 - SourceAnalyzer - DEBUG - logger.py:64 - SQL Content 저장 시작: update (component_id: 3071)
2025-09-13 01:00:13,265 - SourceAnalyzer - DEBUG - logger.py:64 - SQL Content 상대경로: src/main/resources/mybatis/mapper
2025-09-13 01:00:13,265 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 실행 성공: SELECT project_id FROM projects WHERE project_id =...
2025-09-13 01:00:13,266 - SourceAnalyzer - DEBUG - logger.py:64 - 업데이트 쿼리 실행 성공: 
            INSERT OR REPLACE INTO sql_contents (..., 영향받은 행: 1
2025-09-13 01:00:13,266 - SourceAnalyzer - DEBUG - logger.py:64 - SQL 내용 저장 완료: update - src/main/resources/mybatis/mapper
2025-09-13 01:00:13,266 - SourceAnalyzer - DEBUG - logger.py:64 - SQL Content 저장 완료: update - src/main/resources/mybatis/mapper
2025-09-13 01:00:13,266 - SourceAnalyzer - DEBUG - logger.py:64 - SQL 쿼리 처리 완료: update
2025-09-13 01:00:13,266 - SourceAnalyzer - DEBUG - logger.py:64 - SQL 쿼리 처리 루프 시작: 6/12
2025-09-13 01:00:13,266 - SourceAnalyzer - DEBUG - logger.py:64 - SQL 쿼리 처리 시작: delete (delete)
2025-09-13 01:00:13,266 - SourceAnalyzer - DEBUG - logger.py:64 - GET XML ID 조회: D:\Analyzer\CreateMetaDb\projects\sampleSrc\src\main\resources\mybatis\mapper\MixedErrorMapper.xml -> src/main/resources/mybatis/mapper/MixedErrorMapper.xml
2025-09-13 01:00:13,266 - SourceAnalyzer - DEBUG - logger.py:64 - 메모리 매핑 테이블 키들: ['src/com/example/dynamicquery/UserMapper.xml', 'src/main/resources/mybatis/mapper/ImplicitJoinMapper.xml', 'src/main/resources/mybatis/mapper/ImplicitJoinTestMapper.xml', 'src/main/resources/mybatis/mapper/MixedErrorMapper.xml', 'src/main/resources/mybatis/mapper/ProductMapper.xml', 'src/main/resources/mybatis/mapper/UserMapper.xml']
2025-09-13 01:00:13,266 - SourceAnalyzer - DEBUG - logger.py:64 - 메모리에서 file_id 조회 성공: src/main/resources/mybatis/mapper/MixedErrorMapper.xml -> 25
2025-09-13 01:00:13,266 - SourceAnalyzer - DEBUG - logger.py:64 - 파일 ID 조회 성공: 25
2025-09-13 01:00:13,266 - SourceAnalyzer - DEBUG - logger.py:64 - 컴포넌트 저장 시도: delete (delete) -> SQL_DELETE
2025-09-13 01:00:13,266 - SourceAnalyzer - DEBUG - logger.py:64 - Upsert 실행: components
2025-09-13 01:00:13,266 - SourceAnalyzer - DEBUG - logger.py:64 - 데이터: {'project_id': 1, 'component_type': 'SQL_DELETE', 'component_name': 'delete', 'parent_id': None, 'layer': 'SQL', 'file_id': 25, 'line_start': 58, 'line_end': 63, 'hash_value': '4ec384832a696d48eeca1dc3edb39549', 'has_error': 'N', 'error_message': None, 'del_yn': 'N'}
2025-09-13 01:00:13,266 - SourceAnalyzer - DEBUG - logger.py:64 - Components upsert 시작: delete (SQL_DELETE)
2025-09-13 01:00:13,266 - SourceAnalyzer - DEBUG - logger.py:64 - 기존 레코드 확인 쿼리: 
                    SELECT component_id FROM components 
                    WHERE project_id = ? AND component_name = ? AND file_id = ?
                    
2025-09-13 01:00:13,266 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 파라미터: (1, 'delete', 25)
2025-09-13 01:00:13,266 - SourceAnalyzer - DEBUG - logger.py:64 - 기존 레코드 조회 결과: None
2025-09-13 01:00:13,266 - SourceAnalyzer - DEBUG - logger.py:64 - INSERT 쿼리: 
                        INSERT INTO components (project_id, component_type, component_name, parent_id, layer, file_id, line_start, line_end, hash_value, has_error, error_message, del_yn)
                        VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
                        
2025-09-13 01:00:13,266 - SourceAnalyzer - DEBUG - logger.py:64 - INSERT 파라미터: (1, 'SQL_DELETE', 'delete', None, 'SQL', 25, 58, 63, '4ec384832a696d48eeca1dc3edb39549', 'N', None, 'N')
2025-09-13 01:00:13,266 - SourceAnalyzer - DEBUG - logger.py:64 - INSERT 실행 완료: component_id = 3072
2025-09-13 01:00:13,266 - SourceAnalyzer - DEBUG - logger.py:64 - 컴포넌트 저장 완료: delete (ID: 3072)
2025-09-13 01:00:13,266 - SourceAnalyzer - DEBUG - logger.py:64 - 컴포넌트 저장 결과: component_id = 3072
2025-09-13 01:00:13,266 - SourceAnalyzer - DEBUG - logger.py:64 - SQL Content 저장 시작: delete (component_id: 3072)
2025-09-13 01:00:13,266 - SourceAnalyzer - DEBUG - logger.py:64 - SQL Content 상대경로: src/main/resources/mybatis/mapper
2025-09-13 01:00:13,266 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 실행 성공: SELECT project_id FROM projects WHERE project_id =...
2025-09-13 01:00:13,267 - SourceAnalyzer - DEBUG - logger.py:64 - 업데이트 쿼리 실행 성공: 
            INSERT OR REPLACE INTO sql_contents (..., 영향받은 행: 1
2025-09-13 01:00:13,267 - SourceAnalyzer - DEBUG - logger.py:64 - SQL 내용 저장 완료: delete - src/main/resources/mybatis/mapper
2025-09-13 01:00:13,267 - SourceAnalyzer - DEBUG - logger.py:64 - SQL Content 저장 완료: delete - src/main/resources/mybatis/mapper
2025-09-13 01:00:13,267 - SourceAnalyzer - DEBUG - logger.py:64 - SQL 쿼리 처리 완료: delete
2025-09-13 01:00:13,267 - SourceAnalyzer - DEBUG - logger.py:64 - SQL 쿼리 처리 루프 시작: 7/12
2025-09-13 01:00:13,267 - SourceAnalyzer - DEBUG - logger.py:64 - SQL 쿼리 처리 시작: searchUsers (select)
2025-09-13 01:00:13,267 - SourceAnalyzer - DEBUG - logger.py:64 - GET XML ID 조회: D:\Analyzer\CreateMetaDb\projects\sampleSrc\src\main\resources\mybatis\mapper\MixedErrorMapper.xml -> src/main/resources/mybatis/mapper/MixedErrorMapper.xml
2025-09-13 01:00:13,267 - SourceAnalyzer - DEBUG - logger.py:64 - 메모리 매핑 테이블 키들: ['src/com/example/dynamicquery/UserMapper.xml', 'src/main/resources/mybatis/mapper/ImplicitJoinMapper.xml', 'src/main/resources/mybatis/mapper/ImplicitJoinTestMapper.xml', 'src/main/resources/mybatis/mapper/MixedErrorMapper.xml', 'src/main/resources/mybatis/mapper/ProductMapper.xml', 'src/main/resources/mybatis/mapper/UserMapper.xml']
2025-09-13 01:00:13,267 - SourceAnalyzer - DEBUG - logger.py:64 - 메모리에서 file_id 조회 성공: src/main/resources/mybatis/mapper/MixedErrorMapper.xml -> 25
2025-09-13 01:00:13,267 - SourceAnalyzer - DEBUG - logger.py:64 - 파일 ID 조회 성공: 25
2025-09-13 01:00:13,267 - SourceAnalyzer - DEBUG - logger.py:64 - 컴포넌트 저장 시도: searchUsers (select) -> SQL_SELECT
2025-09-13 01:00:13,267 - SourceAnalyzer - DEBUG - logger.py:64 - Upsert 실행: components
2025-09-13 01:00:13,267 - SourceAnalyzer - DEBUG - logger.py:64 - 데이터: {'project_id': 1, 'component_type': 'SQL_SELECT', 'component_name': 'searchUsers', 'parent_id': None, 'layer': 'SQL', 'file_id': 25, 'line_start': 63, 'line_end': 83, 'hash_value': '6ec686b97668c4a6b9b46c111b55197a', 'has_error': 'N', 'error_message': None, 'del_yn': 'N'}
2025-09-13 01:00:13,267 - SourceAnalyzer - DEBUG - logger.py:64 - Components upsert 시작: searchUsers (SQL_SELECT)
2025-09-13 01:00:13,267 - SourceAnalyzer - DEBUG - logger.py:64 - 기존 레코드 확인 쿼리: 
                    SELECT component_id FROM components 
                    WHERE project_id = ? AND component_name = ? AND file_id = ?
                    
2025-09-13 01:00:13,267 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 파라미터: (1, 'searchUsers', 25)
2025-09-13 01:00:13,267 - SourceAnalyzer - DEBUG - logger.py:64 - 기존 레코드 조회 결과: None
2025-09-13 01:00:13,267 - SourceAnalyzer - DEBUG - logger.py:64 - INSERT 쿼리: 
                        INSERT INTO components (project_id, component_type, component_name, parent_id, layer, file_id, line_start, line_end, hash_value, has_error, error_message, del_yn)
                        VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
                        
2025-09-13 01:00:13,267 - SourceAnalyzer - DEBUG - logger.py:64 - INSERT 파라미터: (1, 'SQL_SELECT', 'searchUsers', None, 'SQL', 25, 63, 83, '6ec686b97668c4a6b9b46c111b55197a', 'N', None, 'N')
2025-09-13 01:00:13,268 - SourceAnalyzer - DEBUG - logger.py:64 - INSERT 실행 완료: component_id = 3073
2025-09-13 01:00:13,268 - SourceAnalyzer - DEBUG - logger.py:64 - 컴포넌트 저장 완료: searchUsers (ID: 3073)
2025-09-13 01:00:13,268 - SourceAnalyzer - DEBUG - logger.py:64 - 컴포넌트 저장 결과: component_id = 3073
2025-09-13 01:00:13,268 - SourceAnalyzer - DEBUG - logger.py:64 - SQL Content 저장 시작: searchUsers (component_id: 3073)
2025-09-13 01:00:13,268 - SourceAnalyzer - DEBUG - logger.py:64 - SQL Content 상대경로: src/main/resources/mybatis/mapper
2025-09-13 01:00:13,268 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 실행 성공: SELECT project_id FROM projects WHERE project_id =...
2025-09-13 01:00:13,268 - SourceAnalyzer - DEBUG - logger.py:64 - 업데이트 쿼리 실행 성공: 
            INSERT OR REPLACE INTO sql_contents (..., 영향받은 행: 1
2025-09-13 01:00:13,268 - SourceAnalyzer - DEBUG - logger.py:64 - SQL 내용 저장 완료: searchUsers - src/main/resources/mybatis/mapper
2025-09-13 01:00:13,268 - SourceAnalyzer - DEBUG - logger.py:64 - SQL Content 저장 완료: searchUsers - src/main/resources/mybatis/mapper
2025-09-13 01:00:13,268 - SourceAnalyzer - DEBUG - logger.py:64 - SQL 쿼리 처리 완료: searchUsers
2025-09-13 01:00:13,268 - SourceAnalyzer - DEBUG - logger.py:64 - SQL 쿼리 처리 루프 시작: 8/12
2025-09-13 01:00:13,268 - SourceAnalyzer - DEBUG - logger.py:64 - SQL 쿼리 처리 시작: countUsers (select)
2025-09-13 01:00:13,268 - SourceAnalyzer - DEBUG - logger.py:64 - GET XML ID 조회: D:\Analyzer\CreateMetaDb\projects\sampleSrc\src\main\resources\mybatis\mapper\MixedErrorMapper.xml -> src/main/resources/mybatis/mapper/MixedErrorMapper.xml
2025-09-13 01:00:13,268 - SourceAnalyzer - DEBUG - logger.py:64 - 메모리 매핑 테이블 키들: ['src/com/example/dynamicquery/UserMapper.xml', 'src/main/resources/mybatis/mapper/ImplicitJoinMapper.xml', 'src/main/resources/mybatis/mapper/ImplicitJoinTestMapper.xml', 'src/main/resources/mybatis/mapper/MixedErrorMapper.xml', 'src/main/resources/mybatis/mapper/ProductMapper.xml', 'src/main/resources/mybatis/mapper/UserMapper.xml']
2025-09-13 01:00:13,269 - SourceAnalyzer - DEBUG - logger.py:64 - 메모리에서 file_id 조회 성공: src/main/resources/mybatis/mapper/MixedErrorMapper.xml -> 25
2025-09-13 01:00:13,269 - SourceAnalyzer - DEBUG - logger.py:64 - 파일 ID 조회 성공: 25
2025-09-13 01:00:13,269 - SourceAnalyzer - DEBUG - logger.py:64 - 컴포넌트 저장 시도: countUsers (select) -> SQL_SELECT
2025-09-13 01:00:13,269 - SourceAnalyzer - DEBUG - logger.py:64 - Upsert 실행: components
2025-09-13 01:00:13,269 - SourceAnalyzer - DEBUG - logger.py:64 - 데이터: {'project_id': 1, 'component_type': 'SQL_SELECT', 'component_name': 'countUsers', 'parent_id': None, 'layer': 'SQL', 'file_id': 25, 'line_start': 83, 'line_end': 88, 'hash_value': '8aa76f18b7fe6caf73735edc05d899d1', 'has_error': 'N', 'error_message': None, 'del_yn': 'N'}
2025-09-13 01:00:13,269 - SourceAnalyzer - DEBUG - logger.py:64 - Components upsert 시작: countUsers (SQL_SELECT)
2025-09-13 01:00:13,269 - SourceAnalyzer - DEBUG - logger.py:64 - 기존 레코드 확인 쿼리: 
                    SELECT component_id FROM components 
                    WHERE project_id = ? AND component_name = ? AND file_id = ?
                    
2025-09-13 01:00:13,269 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 파라미터: (1, 'countUsers', 25)
2025-09-13 01:00:13,269 - SourceAnalyzer - DEBUG - logger.py:64 - 기존 레코드 조회 결과: None
2025-09-13 01:00:13,269 - SourceAnalyzer - DEBUG - logger.py:64 - INSERT 쿼리: 
                        INSERT INTO components (project_id, component_type, component_name, parent_id, layer, file_id, line_start, line_end, hash_value, has_error, error_message, del_yn)
                        VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
                        
2025-09-13 01:00:13,269 - SourceAnalyzer - DEBUG - logger.py:64 - INSERT 파라미터: (1, 'SQL_SELECT', 'countUsers', None, 'SQL', 25, 83, 88, '8aa76f18b7fe6caf73735edc05d899d1', 'N', None, 'N')
2025-09-13 01:00:13,269 - SourceAnalyzer - DEBUG - logger.py:64 - INSERT 실행 완료: component_id = 3074
2025-09-13 01:00:13,269 - SourceAnalyzer - DEBUG - logger.py:64 - 컴포넌트 저장 완료: countUsers (ID: 3074)
2025-09-13 01:00:13,269 - SourceAnalyzer - DEBUG - logger.py:64 - 컴포넌트 저장 결과: component_id = 3074
2025-09-13 01:00:13,269 - SourceAnalyzer - DEBUG - logger.py:64 - SQL Content 저장 시작: countUsers (component_id: 3074)
2025-09-13 01:00:13,269 - SourceAnalyzer - DEBUG - logger.py:64 - SQL Content 상대경로: src/main/resources/mybatis/mapper
2025-09-13 01:00:13,269 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 실행 성공: SELECT project_id FROM projects WHERE project_id =...
2025-09-13 01:00:13,269 - SourceAnalyzer - DEBUG - logger.py:64 - 업데이트 쿼리 실행 성공: 
            INSERT OR REPLACE INTO sql_contents (..., 영향받은 행: 1
2025-09-13 01:00:13,269 - SourceAnalyzer - DEBUG - logger.py:64 - SQL 내용 저장 완료: countUsers - src/main/resources/mybatis/mapper
2025-09-13 01:00:13,270 - SourceAnalyzer - DEBUG - logger.py:64 - SQL Content 저장 완료: countUsers - src/main/resources/mybatis/mapper
2025-09-13 01:00:13,270 - SourceAnalyzer - DEBUG - logger.py:64 - SQL 쿼리 처리 완료: countUsers
2025-09-13 01:00:13,270 - SourceAnalyzer - DEBUG - logger.py:64 - SQL 쿼리 처리 루프 시작: 9/12
2025-09-13 01:00:13,270 - SourceAnalyzer - DEBUG - logger.py:64 - SQL 쿼리 처리 시작: getUserWithDetails (select)
2025-09-13 01:00:13,270 - SourceAnalyzer - DEBUG - logger.py:64 - GET XML ID 조회: D:\Analyzer\CreateMetaDb\projects\sampleSrc\src\main\resources\mybatis\mapper\MixedErrorMapper.xml -> src/main/resources/mybatis/mapper/MixedErrorMapper.xml
2025-09-13 01:00:13,270 - SourceAnalyzer - DEBUG - logger.py:64 - 메모리 매핑 테이블 키들: ['src/com/example/dynamicquery/UserMapper.xml', 'src/main/resources/mybatis/mapper/ImplicitJoinMapper.xml', 'src/main/resources/mybatis/mapper/ImplicitJoinTestMapper.xml', 'src/main/resources/mybatis/mapper/MixedErrorMapper.xml', 'src/main/resources/mybatis/mapper/ProductMapper.xml', 'src/main/resources/mybatis/mapper/UserMapper.xml']
2025-09-13 01:00:13,270 - SourceAnalyzer - DEBUG - logger.py:64 - 메모리에서 file_id 조회 성공: src/main/resources/mybatis/mapper/MixedErrorMapper.xml -> 25
2025-09-13 01:00:13,270 - SourceAnalyzer - DEBUG - logger.py:64 - 파일 ID 조회 성공: 25
2025-09-13 01:00:13,270 - SourceAnalyzer - DEBUG - logger.py:64 - 컴포넌트 저장 시도: getUserWithDetails (select) -> SQL_SELECT
2025-09-13 01:00:13,270 - SourceAnalyzer - DEBUG - logger.py:64 - Upsert 실행: components
2025-09-13 01:00:13,270 - SourceAnalyzer - DEBUG - logger.py:64 - 데이터: {'project_id': 1, 'component_type': 'SQL_SELECT', 'component_name': 'getUserWithDetails', 'parent_id': None, 'layer': 'SQL', 'file_id': 25, 'line_start': 88, 'line_end': 103, 'hash_value': '53c0ca0a7465d17adc3611dc801d3214', 'has_error': 'N', 'error_message': None, 'del_yn': 'N'}
2025-09-13 01:00:13,270 - SourceAnalyzer - DEBUG - logger.py:64 - Components upsert 시작: getUserWithDetails (SQL_SELECT)
2025-09-13 01:00:13,270 - SourceAnalyzer - DEBUG - logger.py:64 - 기존 레코드 확인 쿼리: 
                    SELECT component_id FROM components 
                    WHERE project_id = ? AND component_name = ? AND file_id = ?
                    
2025-09-13 01:00:13,270 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 파라미터: (1, 'getUserWithDetails', 25)
2025-09-13 01:00:13,270 - SourceAnalyzer - DEBUG - logger.py:64 - 기존 레코드 조회 결과: None
2025-09-13 01:00:13,270 - SourceAnalyzer - DEBUG - logger.py:64 - INSERT 쿼리: 
                        INSERT INTO components (project_id, component_type, component_name, parent_id, layer, file_id, line_start, line_end, hash_value, has_error, error_message, del_yn)
                        VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
                        
2025-09-13 01:00:13,270 - SourceAnalyzer - DEBUG - logger.py:64 - INSERT 파라미터: (1, 'SQL_SELECT', 'getUserWithDetails', None, 'SQL', 25, 88, 103, '53c0ca0a7465d17adc3611dc801d3214', 'N', None, 'N')
2025-09-13 01:00:13,270 - SourceAnalyzer - DEBUG - logger.py:64 - INSERT 실행 완료: component_id = 3075
2025-09-13 01:00:13,270 - SourceAnalyzer - DEBUG - logger.py:64 - 컴포넌트 저장 완료: getUserWithDetails (ID: 3075)
2025-09-13 01:00:13,270 - SourceAnalyzer - DEBUG - logger.py:64 - 컴포넌트 저장 결과: component_id = 3075
2025-09-13 01:00:13,270 - SourceAnalyzer - DEBUG - logger.py:64 - SQL Content 저장 시작: getUserWithDetails (component_id: 3075)
2025-09-13 01:00:13,270 - SourceAnalyzer - DEBUG - logger.py:64 - SQL Content 상대경로: src/main/resources/mybatis/mapper
2025-09-13 01:00:13,270 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 실행 성공: SELECT project_id FROM projects WHERE project_id =...
2025-09-13 01:00:13,271 - SourceAnalyzer - DEBUG - logger.py:64 - 업데이트 쿼리 실행 성공: 
            INSERT OR REPLACE INTO sql_contents (..., 영향받은 행: 1
2025-09-13 01:00:13,271 - SourceAnalyzer - DEBUG - logger.py:64 - SQL 내용 저장 완료: getUserWithDetails - src/main/resources/mybatis/mapper
2025-09-13 01:00:13,271 - SourceAnalyzer - DEBUG - logger.py:64 - SQL Content 저장 완료: getUserWithDetails - src/main/resources/mybatis/mapper
2025-09-13 01:00:13,271 - SourceAnalyzer - DEBUG - logger.py:64 - SQL 쿼리 처리 완료: getUserWithDetails
2025-09-13 01:00:13,271 - SourceAnalyzer - DEBUG - logger.py:64 - SQL 쿼리 처리 루프 시작: 10/12
2025-09-13 01:00:13,271 - SourceAnalyzer - DEBUG - logger.py:64 - SQL 쿼리 처리 시작: selectFromNonExistentTable (select)
2025-09-13 01:00:13,271 - SourceAnalyzer - DEBUG - logger.py:64 - GET XML ID 조회: D:\Analyzer\CreateMetaDb\projects\sampleSrc\src\main\resources\mybatis\mapper\MixedErrorMapper.xml -> src/main/resources/mybatis/mapper/MixedErrorMapper.xml
2025-09-13 01:00:13,271 - SourceAnalyzer - DEBUG - logger.py:64 - 메모리 매핑 테이블 키들: ['src/com/example/dynamicquery/UserMapper.xml', 'src/main/resources/mybatis/mapper/ImplicitJoinMapper.xml', 'src/main/resources/mybatis/mapper/ImplicitJoinTestMapper.xml', 'src/main/resources/mybatis/mapper/MixedErrorMapper.xml', 'src/main/resources/mybatis/mapper/ProductMapper.xml', 'src/main/resources/mybatis/mapper/UserMapper.xml']
2025-09-13 01:00:13,271 - SourceAnalyzer - DEBUG - logger.py:64 - 메모리에서 file_id 조회 성공: src/main/resources/mybatis/mapper/MixedErrorMapper.xml -> 25
2025-09-13 01:00:13,271 - SourceAnalyzer - DEBUG - logger.py:64 - 파일 ID 조회 성공: 25
2025-09-13 01:00:13,271 - SourceAnalyzer - DEBUG - logger.py:64 - 컴포넌트 저장 시도: selectFromNonExistentTable (select) -> SQL_SELECT
2025-09-13 01:00:13,271 - SourceAnalyzer - DEBUG - logger.py:64 - Upsert 실행: components
2025-09-13 01:00:13,271 - SourceAnalyzer - DEBUG - logger.py:64 - 데이터: {'project_id': 1, 'component_type': 'SQL_SELECT', 'component_name': 'selectFromNonExistentTable', 'parent_id': None, 'layer': 'SQL', 'file_id': 25, 'line_start': 103, 'line_end': 110, 'hash_value': 'a2927f14bd8b665d46aaa3003914e702', 'has_error': 'N', 'error_message': None, 'del_yn': 'N'}
2025-09-13 01:00:13,271 - SourceAnalyzer - DEBUG - logger.py:64 - Components upsert 시작: selectFromNonExistentTable (SQL_SELECT)
2025-09-13 01:00:13,271 - SourceAnalyzer - DEBUG - logger.py:64 - 기존 레코드 확인 쿼리: 
                    SELECT component_id FROM components 
                    WHERE project_id = ? AND component_name = ? AND file_id = ?
                    
2025-09-13 01:00:13,271 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 파라미터: (1, 'selectFromNonExistentTable', 25)
2025-09-13 01:00:13,271 - SourceAnalyzer - DEBUG - logger.py:64 - 기존 레코드 조회 결과: None
2025-09-13 01:00:13,271 - SourceAnalyzer - DEBUG - logger.py:64 - INSERT 쿼리: 
                        INSERT INTO components (project_id, component_type, component_name, parent_id, layer, file_id, line_start, line_end, hash_value, has_error, error_message, del_yn)
                        VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
                        
2025-09-13 01:00:13,271 - SourceAnalyzer - DEBUG - logger.py:64 - INSERT 파라미터: (1, 'SQL_SELECT', 'selectFromNonExistentTable', None, 'SQL', 25, 103, 110, 'a2927f14bd8b665d46aaa3003914e702', 'N', None, 'N')
2025-09-13 01:00:13,271 - SourceAnalyzer - DEBUG - logger.py:64 - INSERT 실행 완료: component_id = 3076
2025-09-13 01:00:13,271 - SourceAnalyzer - DEBUG - logger.py:64 - 컴포넌트 저장 완료: selectFromNonExistentTable (ID: 3076)
2025-09-13 01:00:13,271 - SourceAnalyzer - DEBUG - logger.py:64 - 컴포넌트 저장 결과: component_id = 3076
2025-09-13 01:00:13,271 - SourceAnalyzer - DEBUG - logger.py:64 - SQL Content 저장 시작: selectFromNonExistentTable (component_id: 3076)
2025-09-13 01:00:13,271 - SourceAnalyzer - DEBUG - logger.py:64 - SQL Content 상대경로: src/main/resources/mybatis/mapper
2025-09-13 01:00:13,271 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 실행 성공: SELECT project_id FROM projects WHERE project_id =...
2025-09-13 01:00:13,272 - SourceAnalyzer - DEBUG - logger.py:64 - 업데이트 쿼리 실행 성공: 
            INSERT OR REPLACE INTO sql_contents (..., 영향받은 행: 1
2025-09-13 01:00:13,272 - SourceAnalyzer - DEBUG - logger.py:64 - SQL 내용 저장 완료: selectFromNonExistentTable - src/main/resources/mybatis/mapper
2025-09-13 01:00:13,272 - SourceAnalyzer - DEBUG - logger.py:64 - SQL Content 저장 완료: selectFromNonExistentTable - src/main/resources/mybatis/mapper
2025-09-13 01:00:13,272 - SourceAnalyzer - DEBUG - logger.py:64 - SQL 쿼리 처리 완료: selectFromNonExistentTable
2025-09-13 01:00:13,272 - SourceAnalyzer - DEBUG - logger.py:64 - SQL 쿼리 처리 루프 시작: 11/12
2025-09-13 01:00:13,272 - SourceAnalyzer - DEBUG - logger.py:64 - SQL 쿼리 처리 시작: selectWithNonExistentColumn (select)
2025-09-13 01:00:13,272 - SourceAnalyzer - DEBUG - logger.py:64 - GET XML ID 조회: D:\Analyzer\CreateMetaDb\projects\sampleSrc\src\main\resources\mybatis\mapper\MixedErrorMapper.xml -> src/main/resources/mybatis/mapper/MixedErrorMapper.xml
2025-09-13 01:00:13,272 - SourceAnalyzer - DEBUG - logger.py:64 - 메모리 매핑 테이블 키들: ['src/com/example/dynamicquery/UserMapper.xml', 'src/main/resources/mybatis/mapper/ImplicitJoinMapper.xml', 'src/main/resources/mybatis/mapper/ImplicitJoinTestMapper.xml', 'src/main/resources/mybatis/mapper/MixedErrorMapper.xml', 'src/main/resources/mybatis/mapper/ProductMapper.xml', 'src/main/resources/mybatis/mapper/UserMapper.xml']
2025-09-13 01:00:13,272 - SourceAnalyzer - DEBUG - logger.py:64 - 메모리에서 file_id 조회 성공: src/main/resources/mybatis/mapper/MixedErrorMapper.xml -> 25
2025-09-13 01:00:13,272 - SourceAnalyzer - DEBUG - logger.py:64 - 파일 ID 조회 성공: 25
2025-09-13 01:00:13,272 - SourceAnalyzer - DEBUG - logger.py:64 - 컴포넌트 저장 시도: selectWithNonExistentColumn (select) -> SQL_SELECT
2025-09-13 01:00:13,272 - SourceAnalyzer - DEBUG - logger.py:64 - Upsert 실행: components
2025-09-13 01:00:13,272 - SourceAnalyzer - DEBUG - logger.py:64 - 데이터: {'project_id': 1, 'component_type': 'SQL_SELECT', 'component_name': 'selectWithNonExistentColumn', 'parent_id': None, 'layer': 'SQL', 'file_id': 25, 'line_start': 110, 'line_end': 117, 'hash_value': 'a88804bd6fb5c3a04db7f4aa9d6733cb', 'has_error': 'N', 'error_message': None, 'del_yn': 'N'}
2025-09-13 01:00:13,272 - SourceAnalyzer - DEBUG - logger.py:64 - Components upsert 시작: selectWithNonExistentColumn (SQL_SELECT)
2025-09-13 01:00:13,272 - SourceAnalyzer - DEBUG - logger.py:64 - 기존 레코드 확인 쿼리: 
                    SELECT component_id FROM components 
                    WHERE project_id = ? AND component_name = ? AND file_id = ?
                    
2025-09-13 01:00:13,272 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 파라미터: (1, 'selectWithNonExistentColumn', 25)
2025-09-13 01:00:13,272 - SourceAnalyzer - DEBUG - logger.py:64 - 기존 레코드 조회 결과: None
2025-09-13 01:00:13,272 - SourceAnalyzer - DEBUG - logger.py:64 - INSERT 쿼리: 
                        INSERT INTO components (project_id, component_type, component_name, parent_id, layer, file_id, line_start, line_end, hash_value, has_error, error_message, del_yn)
                        VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
                        
2025-09-13 01:00:13,272 - SourceAnalyzer - DEBUG - logger.py:64 - INSERT 파라미터: (1, 'SQL_SELECT', 'selectWithNonExistentColumn', None, 'SQL', 25, 110, 117, 'a88804bd6fb5c3a04db7f4aa9d6733cb', 'N', None, 'N')
2025-09-13 01:00:13,272 - SourceAnalyzer - DEBUG - logger.py:64 - INSERT 실행 완료: component_id = 3077
2025-09-13 01:00:13,272 - SourceAnalyzer - DEBUG - logger.py:64 - 컴포넌트 저장 완료: selectWithNonExistentColumn (ID: 3077)
2025-09-13 01:00:13,272 - SourceAnalyzer - DEBUG - logger.py:64 - 컴포넌트 저장 결과: component_id = 3077
2025-09-13 01:00:13,273 - SourceAnalyzer - DEBUG - logger.py:64 - SQL Content 저장 시작: selectWithNonExistentColumn (component_id: 3077)
2025-09-13 01:00:13,273 - SourceAnalyzer - DEBUG - logger.py:64 - SQL Content 상대경로: src/main/resources/mybatis/mapper
2025-09-13 01:00:13,273 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 실행 성공: SELECT project_id FROM projects WHERE project_id =...
2025-09-13 01:00:13,273 - SourceAnalyzer - DEBUG - logger.py:64 - 업데이트 쿼리 실행 성공: 
            INSERT OR REPLACE INTO sql_contents (..., 영향받은 행: 1
2025-09-13 01:00:13,273 - SourceAnalyzer - DEBUG - logger.py:64 - SQL 내용 저장 완료: selectWithNonExistentColumn - src/main/resources/mybatis/mapper
2025-09-13 01:00:13,273 - SourceAnalyzer - DEBUG - logger.py:64 - SQL Content 저장 완료: selectWithNonExistentColumn - src/main/resources/mybatis/mapper
2025-09-13 01:00:13,273 - SourceAnalyzer - DEBUG - logger.py:64 - SQL 쿼리 처리 완료: selectWithNonExistentColumn
2025-09-13 01:00:13,273 - SourceAnalyzer - DEBUG - logger.py:64 - SQL 쿼리 처리 루프 시작: 12/12
2025-09-13 01:00:13,273 - SourceAnalyzer - DEBUG - logger.py:64 - SQL 쿼리 처리 시작: selectComplexError (select)
2025-09-13 01:00:13,273 - SourceAnalyzer - DEBUG - logger.py:64 - GET XML ID 조회: D:\Analyzer\CreateMetaDb\projects\sampleSrc\src\main\resources\mybatis\mapper\MixedErrorMapper.xml -> src/main/resources/mybatis/mapper/MixedErrorMapper.xml
2025-09-13 01:00:13,273 - SourceAnalyzer - DEBUG - logger.py:64 - 메모리 매핑 테이블 키들: ['src/com/example/dynamicquery/UserMapper.xml', 'src/main/resources/mybatis/mapper/ImplicitJoinMapper.xml', 'src/main/resources/mybatis/mapper/ImplicitJoinTestMapper.xml', 'src/main/resources/mybatis/mapper/MixedErrorMapper.xml', 'src/main/resources/mybatis/mapper/ProductMapper.xml', 'src/main/resources/mybatis/mapper/UserMapper.xml']
2025-09-13 01:00:13,273 - SourceAnalyzer - DEBUG - logger.py:64 - 메모리에서 file_id 조회 성공: src/main/resources/mybatis/mapper/MixedErrorMapper.xml -> 25
2025-09-13 01:00:13,273 - SourceAnalyzer - DEBUG - logger.py:64 - 파일 ID 조회 성공: 25
2025-09-13 01:00:13,273 - SourceAnalyzer - DEBUG - logger.py:64 - 컴포넌트 저장 시도: selectComplexError (select) -> SQL_SELECT
2025-09-13 01:00:13,273 - SourceAnalyzer - DEBUG - logger.py:64 - Upsert 실행: components
2025-09-13 01:00:13,273 - SourceAnalyzer - DEBUG - logger.py:64 - 데이터: {'project_id': 1, 'component_type': 'SQL_SELECT', 'component_name': 'selectComplexError', 'parent_id': None, 'layer': 'SQL', 'file_id': 25, 'line_start': 117, 'line_end': 124, 'hash_value': '49dc2f999e350bcbb6d5a343108e4a73', 'has_error': 'N', 'error_message': None, 'del_yn': 'N'}
2025-09-13 01:00:13,273 - SourceAnalyzer - DEBUG - logger.py:64 - Components upsert 시작: selectComplexError (SQL_SELECT)
2025-09-13 01:00:13,273 - SourceAnalyzer - DEBUG - logger.py:64 - 기존 레코드 확인 쿼리: 
                    SELECT component_id FROM components 
                    WHERE project_id = ? AND component_name = ? AND file_id = ?
                    
2025-09-13 01:00:13,273 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 파라미터: (1, 'selectComplexError', 25)
2025-09-13 01:00:13,273 - SourceAnalyzer - DEBUG - logger.py:64 - 기존 레코드 조회 결과: None
2025-09-13 01:00:13,273 - SourceAnalyzer - DEBUG - logger.py:64 - INSERT 쿼리: 
                        INSERT INTO components (project_id, component_type, component_name, parent_id, layer, file_id, line_start, line_end, hash_value, has_error, error_message, del_yn)
                        VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
                        
2025-09-13 01:00:13,273 - SourceAnalyzer - DEBUG - logger.py:64 - INSERT 파라미터: (1, 'SQL_SELECT', 'selectComplexError', None, 'SQL', 25, 117, 124, '49dc2f999e350bcbb6d5a343108e4a73', 'N', None, 'N')
2025-09-13 01:00:13,273 - SourceAnalyzer - DEBUG - logger.py:64 - INSERT 실행 완료: component_id = 3078
2025-09-13 01:00:13,273 - SourceAnalyzer - DEBUG - logger.py:64 - 컴포넌트 저장 완료: selectComplexError (ID: 3078)
2025-09-13 01:00:13,273 - SourceAnalyzer - DEBUG - logger.py:64 - 컴포넌트 저장 결과: component_id = 3078
2025-09-13 01:00:13,274 - SourceAnalyzer - DEBUG - logger.py:64 - SQL Content 저장 시작: selectComplexError (component_id: 3078)
2025-09-13 01:00:13,274 - SourceAnalyzer - DEBUG - logger.py:64 - SQL Content 상대경로: src/main/resources/mybatis/mapper
2025-09-13 01:00:13,274 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 실행 성공: SELECT project_id FROM projects WHERE project_id =...
2025-09-13 01:00:13,274 - SourceAnalyzer - DEBUG - logger.py:64 - 업데이트 쿼리 실행 성공: 
            INSERT OR REPLACE INTO sql_contents (..., 영향받은 행: 1
2025-09-13 01:00:13,274 - SourceAnalyzer - DEBUG - logger.py:64 - SQL 내용 저장 완료: selectComplexError - src/main/resources/mybatis/mapper
2025-09-13 01:00:13,274 - SourceAnalyzer - DEBUG - logger.py:64 - SQL Content 저장 완료: selectComplexError - src/main/resources/mybatis/mapper
2025-09-13 01:00:13,274 - SourceAnalyzer - DEBUG - logger.py:64 - SQL 쿼리 처리 완료: selectComplexError
2025-09-13 01:00:13,274 - SourceAnalyzer - INFO - logger.py:68 - === SQL 쿼리 처리 완료 ===
2025-09-13 01:00:13,274 - SourceAnalyzer - INFO - logger.py:68 - 처리된 쿼리 수: 12
2025-09-13 01:00:13,274 - SourceAnalyzer - INFO - logger.py:68 - 건너뜀 쿼리 수: 0
2025-09-13 01:00:13,274 - SourceAnalyzer - INFO - logger.py:68 - 컴포넌트 ID 매핑 크기: 12
2025-09-13 01:00:13,274 - SourceAnalyzer - INFO - logger.py:68 - SQL 컴포넌트 저장 완료: 12개 (건너뜀: 0개)
2025-09-13 01:00:13,274 - SourceAnalyzer - INFO - logger.py:68 - process_sql_queries 호출 후: result=True
2025-09-13 01:00:13,274 - SourceAnalyzer - INFO - logger.py:68 - SQL Content Processor 처리 결과: True
2025-09-13 01:00:13,274 - SourceAnalyzer - INFO - logger.py:68 - === XML 로딩 엔진: SQL 컴포넌트 저장 완료 ===
2025-09-13 01:00:13,275 - SourceAnalyzer - DEBUG - logger.py:64 - 파일 읽기 성공: D:\Analyzer\CreateMetaDb\projects\sampleSrc\src\main\resources\mybatis\mapper\ProductMapper.xml
2025-09-13 01:00:13,275 - SourceAnalyzer - DEBUG - logger.py:64 - 파일 읽기 성공: D:\Analyzer\CreateMetaDb\projects\sampleSrc\src\main\resources\mybatis\mapper\ProductMapper.xml
2025-09-13 01:00:13,276 - SourceAnalyzer - DEBUG - logger.py:64 - 파일 읽기 성공: D:\Analyzer\CreateMetaDb\projects\sampleSrc\src\main\resources\mybatis\mapper\ProductMapper.xml
2025-09-13 01:00:13,277 - SourceAnalyzer - DEBUG - logger.py:64 - 파일 읽기 성공: D:\Analyzer\CreateMetaDb\projects\sampleSrc\src\main\resources\mybatis\mapper\ProductMapper.xml
2025-09-13 01:00:13,277 - SourceAnalyzer - DEBUG - logger.py:64 - 파일 읽기 성공: D:\Analyzer\CreateMetaDb\projects\sampleSrc\src\main\resources\mybatis\mapper\ProductMapper.xml
2025-09-13 01:00:13,277 - SourceAnalyzer - DEBUG - logger.py:64 - 파일 읽기 성공: D:\Analyzer\CreateMetaDb\projects\sampleSrc\src\main\resources\mybatis\mapper\ProductMapper.xml
2025-09-13 01:00:13,278 - SourceAnalyzer - DEBUG - logger.py:64 - 파일 읽기 성공: D:\Analyzer\CreateMetaDb\projects\sampleSrc\src\main\resources\mybatis\mapper\ProductMapper.xml
2025-09-13 01:00:13,278 - SourceAnalyzer - DEBUG - logger.py:64 - 파일 읽기 성공: D:\Analyzer\CreateMetaDb\projects\sampleSrc\src\main\resources\mybatis\mapper\ProductMapper.xml
2025-09-13 01:00:13,279 - SourceAnalyzer - DEBUG - logger.py:64 - 파일 읽기 성공: D:\Analyzer\CreateMetaDb\projects\sampleSrc\src\main\resources\mybatis\mapper\ProductMapper.xml
2025-09-13 01:00:13,279 - SourceAnalyzer - INFO - logger.py:68 - === XML 로딩 엔진: SQL 컴포넌트 저장 시작 ===
2025-09-13 01:00:13,279 - SourceAnalyzer - INFO - logger.py:68 - 전달받은 SQL 쿼리 수: 9개
2025-09-13 01:00:13,279 - SourceAnalyzer - INFO - logger.py:68 - XML에서 추출된 SQL 쿼리 타입별 통계: {'select': 5, 'update': 2, 'insert': 1, 'delete': 1}
2025-09-13 01:00:13,279 - SourceAnalyzer - INFO - logger.py:68 - 프로젝트 ID: 1
2025-09-13 01:00:13,279 - SourceAnalyzer - INFO - logger.py:68 - SQL Content Processor를 사용하여 처리 시작
2025-09-13 01:00:13,279 - SourceAnalyzer - INFO - logger.py:68 - process_sql_queries 호출 전: sql_queries=9, project_id=1
2025-09-13 01:00:13,279 - SourceAnalyzer - INFO - logger.py:68 - === SQL 쿼리 처리 시작 ===
2025-09-13 01:00:13,279 - SourceAnalyzer - INFO - logger.py:68 - 전달받은 SQL 쿼리 수: 9
2025-09-13 01:00:13,279 - SourceAnalyzer - INFO - logger.py:68 - 프로젝트 ID: 1
2025-09-13 01:00:13,279 - SourceAnalyzer - INFO - logger.py:68 - SQL 쿼리 타입별 통계: {'select': 5, 'update': 2, 'insert': 1, 'delete': 1}
2025-09-13 01:00:13,279 - SourceAnalyzer - DEBUG - logger.py:64 - SQL 쿼리 리스트 크기: 9
2025-09-13 01:00:13,279 - SourceAnalyzer - DEBUG - logger.py:64 - SQL 쿼리 리스트 타입: <class 'list'>
2025-09-13 01:00:13,279 - SourceAnalyzer - DEBUG - logger.py:64 - 첫 번째 쿼리 정보: {'tag_name': 'select', 'query_id': 'selectProductById', 'sql_content': 'SELECT * FROM products WHERE product_id = param', 'file_path': 'D:\\Analyzer\\CreateMetaDb\\projects\\sampleSrc\\src\\main\\resources\\mybatis\\mapper\\ProductMapper.xml', 'line_start': 8, 'line_end': 13, 'hash_value': '41d747a7d0af70a84d8121ec198b3d28'}
2025-09-13 01:00:13,279 - SourceAnalyzer - DEBUG - logger.py:64 - SQL 쿼리 처리 루프 시작: 1/9
2025-09-13 01:00:13,279 - SourceAnalyzer - DEBUG - logger.py:64 - SQL 쿼리 처리 시작: selectProductById (select)
2025-09-13 01:00:13,280 - SourceAnalyzer - DEBUG - logger.py:64 - GET XML ID 조회: D:\Analyzer\CreateMetaDb\projects\sampleSrc\src\main\resources\mybatis\mapper\ProductMapper.xml -> src/main/resources/mybatis/mapper/ProductMapper.xml
2025-09-13 01:00:13,280 - SourceAnalyzer - DEBUG - logger.py:64 - 메모리 매핑 테이블 키들: ['src/com/example/dynamicquery/UserMapper.xml', 'src/main/resources/mybatis/mapper/ImplicitJoinMapper.xml', 'src/main/resources/mybatis/mapper/ImplicitJoinTestMapper.xml', 'src/main/resources/mybatis/mapper/MixedErrorMapper.xml', 'src/main/resources/mybatis/mapper/ProductMapper.xml', 'src/main/resources/mybatis/mapper/UserMapper.xml']
2025-09-13 01:00:13,280 - SourceAnalyzer - DEBUG - logger.py:64 - 메모리에서 file_id 조회 성공: src/main/resources/mybatis/mapper/ProductMapper.xml -> 26
2025-09-13 01:00:13,280 - SourceAnalyzer - DEBUG - logger.py:64 - 파일 ID 조회 성공: 26
2025-09-13 01:00:13,280 - SourceAnalyzer - DEBUG - logger.py:64 - 컴포넌트 저장 시도: selectProductById (select) -> SQL_SELECT
2025-09-13 01:00:13,280 - SourceAnalyzer - DEBUG - logger.py:64 - Upsert 실행: components
2025-09-13 01:00:13,280 - SourceAnalyzer - DEBUG - logger.py:64 - 데이터: {'project_id': 1, 'component_type': 'SQL_SELECT', 'component_name': 'selectProductById', 'parent_id': None, 'layer': 'SQL', 'file_id': 26, 'line_start': 8, 'line_end': 13, 'hash_value': '41d747a7d0af70a84d8121ec198b3d28', 'has_error': 'N', 'error_message': None, 'del_yn': 'N'}
2025-09-13 01:00:13,280 - SourceAnalyzer - DEBUG - logger.py:64 - Components upsert 시작: selectProductById (SQL_SELECT)
2025-09-13 01:00:13,280 - SourceAnalyzer - DEBUG - logger.py:64 - 기존 레코드 확인 쿼리: 
                    SELECT component_id FROM components 
                    WHERE project_id = ? AND component_name = ? AND file_id = ?
                    
2025-09-13 01:00:13,280 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 파라미터: (1, 'selectProductById', 26)
2025-09-13 01:00:13,280 - SourceAnalyzer - DEBUG - logger.py:64 - 기존 레코드 조회 결과: None
2025-09-13 01:00:13,280 - SourceAnalyzer - DEBUG - logger.py:64 - INSERT 쿼리: 
                        INSERT INTO components (project_id, component_type, component_name, parent_id, layer, file_id, line_start, line_end, hash_value, has_error, error_message, del_yn)
                        VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
                        
2025-09-13 01:00:13,280 - SourceAnalyzer - DEBUG - logger.py:64 - INSERT 파라미터: (1, 'SQL_SELECT', 'selectProductById', None, 'SQL', 26, 8, 13, '41d747a7d0af70a84d8121ec198b3d28', 'N', None, 'N')
2025-09-13 01:00:13,280 - SourceAnalyzer - DEBUG - logger.py:64 - INSERT 실행 완료: component_id = 3079
2025-09-13 01:00:13,280 - SourceAnalyzer - DEBUG - logger.py:64 - 컴포넌트 저장 완료: selectProductById (ID: 3079)
2025-09-13 01:00:13,280 - SourceAnalyzer - DEBUG - logger.py:64 - 컴포넌트 저장 결과: component_id = 3079
2025-09-13 01:00:13,280 - SourceAnalyzer - DEBUG - logger.py:64 - SQL Content 저장 시작: selectProductById (component_id: 3079)
2025-09-13 01:00:13,280 - SourceAnalyzer - DEBUG - logger.py:64 - SQL Content 상대경로: src/main/resources/mybatis/mapper
2025-09-13 01:00:13,280 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 실행 성공: SELECT project_id FROM projects WHERE project_id =...
2025-09-13 01:00:13,280 - SourceAnalyzer - DEBUG - logger.py:64 - 업데이트 쿼리 실행 성공: 
            INSERT OR REPLACE INTO sql_contents (..., 영향받은 행: 1
2025-09-13 01:00:13,280 - SourceAnalyzer - DEBUG - logger.py:64 - SQL 내용 저장 완료: selectProductById - src/main/resources/mybatis/mapper
2025-09-13 01:00:13,281 - SourceAnalyzer - DEBUG - logger.py:64 - SQL Content 저장 완료: selectProductById - src/main/resources/mybatis/mapper
2025-09-13 01:00:13,281 - SourceAnalyzer - DEBUG - logger.py:64 - SQL 쿼리 처리 완료: selectProductById
2025-09-13 01:00:13,281 - SourceAnalyzer - DEBUG - logger.py:64 - SQL 쿼리 처리 루프 시작: 2/9
2025-09-13 01:00:13,281 - SourceAnalyzer - DEBUG - logger.py:64 - SQL 쿼리 처리 시작: selectProductsByCondition (select)
2025-09-13 01:00:13,281 - SourceAnalyzer - DEBUG - logger.py:64 - GET XML ID 조회: D:\Analyzer\CreateMetaDb\projects\sampleSrc\src\main\resources\mybatis\mapper\ProductMapper.xml -> src/main/resources/mybatis/mapper/ProductMapper.xml
2025-09-13 01:00:13,281 - SourceAnalyzer - DEBUG - logger.py:64 - 메모리 매핑 테이블 키들: ['src/com/example/dynamicquery/UserMapper.xml', 'src/main/resources/mybatis/mapper/ImplicitJoinMapper.xml', 'src/main/resources/mybatis/mapper/ImplicitJoinTestMapper.xml', 'src/main/resources/mybatis/mapper/MixedErrorMapper.xml', 'src/main/resources/mybatis/mapper/ProductMapper.xml', 'src/main/resources/mybatis/mapper/UserMapper.xml']
2025-09-13 01:00:13,281 - SourceAnalyzer - DEBUG - logger.py:64 - 메모리에서 file_id 조회 성공: src/main/resources/mybatis/mapper/ProductMapper.xml -> 26
2025-09-13 01:00:13,281 - SourceAnalyzer - DEBUG - logger.py:64 - 파일 ID 조회 성공: 26
2025-09-13 01:00:13,281 - SourceAnalyzer - DEBUG - logger.py:64 - 컴포넌트 저장 시도: selectProductsByCondition (select) -> SQL_SELECT
2025-09-13 01:00:13,281 - SourceAnalyzer - DEBUG - logger.py:64 - Upsert 실행: components
2025-09-13 01:00:13,281 - SourceAnalyzer - DEBUG - logger.py:64 - 데이터: {'project_id': 1, 'component_type': 'SQL_SELECT', 'component_name': 'selectProductsByCondition', 'parent_id': None, 'layer': 'SQL', 'file_id': 26, 'line_start': 13, 'line_end': 33, 'hash_value': 'c7ae17d1f86f9e50c4e81882d2ca69c9', 'has_error': 'N', 'error_message': None, 'del_yn': 'N'}
2025-09-13 01:00:13,281 - SourceAnalyzer - DEBUG - logger.py:64 - Components upsert 시작: selectProductsByCondition (SQL_SELECT)
2025-09-13 01:00:13,281 - SourceAnalyzer - DEBUG - logger.py:64 - 기존 레코드 확인 쿼리: 
                    SELECT component_id FROM components 
                    WHERE project_id = ? AND component_name = ? AND file_id = ?
                    
2025-09-13 01:00:13,281 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 파라미터: (1, 'selectProductsByCondition', 26)
2025-09-13 01:00:13,281 - SourceAnalyzer - DEBUG - logger.py:64 - 기존 레코드 조회 결과: None
2025-09-13 01:00:13,281 - SourceAnalyzer - DEBUG - logger.py:64 - INSERT 쿼리: 
                        INSERT INTO components (project_id, component_type, component_name, parent_id, layer, file_id, line_start, line_end, hash_value, has_error, error_message, del_yn)
                        VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
                        
2025-09-13 01:00:13,281 - SourceAnalyzer - DEBUG - logger.py:64 - INSERT 파라미터: (1, 'SQL_SELECT', 'selectProductsByCondition', None, 'SQL', 26, 13, 33, 'c7ae17d1f86f9e50c4e81882d2ca69c9', 'N', None, 'N')
2025-09-13 01:00:13,281 - SourceAnalyzer - DEBUG - logger.py:64 - INSERT 실행 완료: component_id = 3080
2025-09-13 01:00:13,281 - SourceAnalyzer - DEBUG - logger.py:64 - 컴포넌트 저장 완료: selectProductsByCondition (ID: 3080)
2025-09-13 01:00:13,281 - SourceAnalyzer - DEBUG - logger.py:64 - 컴포넌트 저장 결과: component_id = 3080
2025-09-13 01:00:13,281 - SourceAnalyzer - DEBUG - logger.py:64 - SQL Content 저장 시작: selectProductsByCondition (component_id: 3080)
2025-09-13 01:00:13,281 - SourceAnalyzer - DEBUG - logger.py:64 - SQL Content 상대경로: src/main/resources/mybatis/mapper
2025-09-13 01:00:13,281 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 실행 성공: SELECT project_id FROM projects WHERE project_id =...
2025-09-13 01:00:13,282 - SourceAnalyzer - DEBUG - logger.py:64 - 업데이트 쿼리 실행 성공: 
            INSERT OR REPLACE INTO sql_contents (..., 영향받은 행: 1
2025-09-13 01:00:13,282 - SourceAnalyzer - DEBUG - logger.py:64 - SQL 내용 저장 완료: selectProductsByCondition - src/main/resources/mybatis/mapper
2025-09-13 01:00:13,282 - SourceAnalyzer - DEBUG - logger.py:64 - SQL Content 저장 완료: selectProductsByCondition - src/main/resources/mybatis/mapper
2025-09-13 01:00:13,282 - SourceAnalyzer - DEBUG - logger.py:64 - SQL 쿼리 처리 완료: selectProductsByCondition
2025-09-13 01:00:13,282 - SourceAnalyzer - DEBUG - logger.py:64 - SQL 쿼리 처리 루프 시작: 3/9
2025-09-13 01:00:13,282 - SourceAnalyzer - DEBUG - logger.py:64 - SQL 쿼리 처리 시작: selectProductsByAdvancedCondition (select)
2025-09-13 01:00:13,282 - SourceAnalyzer - DEBUG - logger.py:64 - GET XML ID 조회: D:\Analyzer\CreateMetaDb\projects\sampleSrc\src\main\resources\mybatis\mapper\ProductMapper.xml -> src/main/resources/mybatis/mapper/ProductMapper.xml
2025-09-13 01:00:13,282 - SourceAnalyzer - DEBUG - logger.py:64 - 메모리 매핑 테이블 키들: ['src/com/example/dynamicquery/UserMapper.xml', 'src/main/resources/mybatis/mapper/ImplicitJoinMapper.xml', 'src/main/resources/mybatis/mapper/ImplicitJoinTestMapper.xml', 'src/main/resources/mybatis/mapper/MixedErrorMapper.xml', 'src/main/resources/mybatis/mapper/ProductMapper.xml', 'src/main/resources/mybatis/mapper/UserMapper.xml']
2025-09-13 01:00:13,282 - SourceAnalyzer - DEBUG - logger.py:64 - 메모리에서 file_id 조회 성공: src/main/resources/mybatis/mapper/ProductMapper.xml -> 26
2025-09-13 01:00:13,282 - SourceAnalyzer - DEBUG - logger.py:64 - 파일 ID 조회 성공: 26
2025-09-13 01:00:13,282 - SourceAnalyzer - DEBUG - logger.py:64 - 컴포넌트 저장 시도: selectProductsByAdvancedCondition (select) -> SQL_SELECT
2025-09-13 01:00:13,282 - SourceAnalyzer - DEBUG - logger.py:64 - Upsert 실행: components
2025-09-13 01:00:13,282 - SourceAnalyzer - DEBUG - logger.py:64 - 데이터: {'project_id': 1, 'component_type': 'SQL_SELECT', 'component_name': 'selectProductsByAdvancedCondition', 'parent_id': None, 'layer': 'SQL', 'file_id': 26, 'line_start': 33, 'line_end': 68, 'hash_value': '5a6448d62a67042e9107f180696b195c', 'has_error': 'N', 'error_message': None, 'del_yn': 'N'}
2025-09-13 01:00:13,282 - SourceAnalyzer - DEBUG - logger.py:64 - Components upsert 시작: selectProductsByAdvancedCondition (SQL_SELECT)
2025-09-13 01:00:13,282 - SourceAnalyzer - DEBUG - logger.py:64 - 기존 레코드 확인 쿼리: 
                    SELECT component_id FROM components 
                    WHERE project_id = ? AND component_name = ? AND file_id = ?
                    
2025-09-13 01:00:13,282 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 파라미터: (1, 'selectProductsByAdvancedCondition', 26)
2025-09-13 01:00:13,282 - SourceAnalyzer - DEBUG - logger.py:64 - 기존 레코드 조회 결과: None
2025-09-13 01:00:13,282 - SourceAnalyzer - DEBUG - logger.py:64 - INSERT 쿼리: 
                        INSERT INTO components (project_id, component_type, component_name, parent_id, layer, file_id, line_start, line_end, hash_value, has_error, error_message, del_yn)
                        VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
                        
2025-09-13 01:00:13,282 - SourceAnalyzer - DEBUG - logger.py:64 - INSERT 파라미터: (1, 'SQL_SELECT', 'selectProductsByAdvancedCondition', None, 'SQL', 26, 33, 68, '5a6448d62a67042e9107f180696b195c', 'N', None, 'N')
2025-09-13 01:00:13,282 - SourceAnalyzer - DEBUG - logger.py:64 - INSERT 실행 완료: component_id = 3081
2025-09-13 01:00:13,282 - SourceAnalyzer - DEBUG - logger.py:64 - 컴포넌트 저장 완료: selectProductsByAdvancedCondition (ID: 3081)
2025-09-13 01:00:13,282 - SourceAnalyzer - DEBUG - logger.py:64 - 컴포넌트 저장 결과: component_id = 3081
2025-09-13 01:00:13,282 - SourceAnalyzer - DEBUG - logger.py:64 - SQL Content 저장 시작: selectProductsByAdvancedCondition (component_id: 3081)
2025-09-13 01:00:13,282 - SourceAnalyzer - DEBUG - logger.py:64 - SQL Content 상대경로: src/main/resources/mybatis/mapper
2025-09-13 01:00:13,282 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 실행 성공: SELECT project_id FROM projects WHERE project_id =...
2025-09-13 01:00:13,283 - SourceAnalyzer - DEBUG - logger.py:64 - 업데이트 쿼리 실행 성공: 
            INSERT OR REPLACE INTO sql_contents (..., 영향받은 행: 1
2025-09-13 01:00:13,283 - SourceAnalyzer - DEBUG - logger.py:64 - SQL 내용 저장 완료: selectProductsByAdvancedCondition - src/main/resources/mybatis/mapper
2025-09-13 01:00:13,283 - SourceAnalyzer - DEBUG - logger.py:64 - SQL Content 저장 완료: selectProductsByAdvancedCondition - src/main/resources/mybatis/mapper
2025-09-13 01:00:13,283 - SourceAnalyzer - DEBUG - logger.py:64 - SQL 쿼리 처리 완료: selectProductsByAdvancedCondition
2025-09-13 01:00:13,283 - SourceAnalyzer - DEBUG - logger.py:64 - SQL 쿼리 처리 루프 시작: 4/9
2025-09-13 01:00:13,283 - SourceAnalyzer - DEBUG - logger.py:64 - SQL 쿼리 처리 시작: selectProductsByCategory (select)
2025-09-13 01:00:13,283 - SourceAnalyzer - DEBUG - logger.py:64 - GET XML ID 조회: D:\Analyzer\CreateMetaDb\projects\sampleSrc\src\main\resources\mybatis\mapper\ProductMapper.xml -> src/main/resources/mybatis/mapper/ProductMapper.xml
2025-09-13 01:00:13,283 - SourceAnalyzer - DEBUG - logger.py:64 - 메모리 매핑 테이블 키들: ['src/com/example/dynamicquery/UserMapper.xml', 'src/main/resources/mybatis/mapper/ImplicitJoinMapper.xml', 'src/main/resources/mybatis/mapper/ImplicitJoinTestMapper.xml', 'src/main/resources/mybatis/mapper/MixedErrorMapper.xml', 'src/main/resources/mybatis/mapper/ProductMapper.xml', 'src/main/resources/mybatis/mapper/UserMapper.xml']
2025-09-13 01:00:13,283 - SourceAnalyzer - DEBUG - logger.py:64 - 메모리에서 file_id 조회 성공: src/main/resources/mybatis/mapper/ProductMapper.xml -> 26
2025-09-13 01:00:13,283 - SourceAnalyzer - DEBUG - logger.py:64 - 파일 ID 조회 성공: 26
2025-09-13 01:00:13,283 - SourceAnalyzer - DEBUG - logger.py:64 - 컴포넌트 저장 시도: selectProductsByCategory (select) -> SQL_SELECT
2025-09-13 01:00:13,283 - SourceAnalyzer - DEBUG - logger.py:64 - Upsert 실행: components
2025-09-13 01:00:13,283 - SourceAnalyzer - DEBUG - logger.py:64 - 데이터: {'project_id': 1, 'component_type': 'SQL_SELECT', 'component_name': 'selectProductsByCategory', 'parent_id': None, 'layer': 'SQL', 'file_id': 26, 'line_start': 68, 'line_end': 75, 'hash_value': 'ef7bb96619918044199320c89356be79', 'has_error': 'N', 'error_message': None, 'del_yn': 'N'}
2025-09-13 01:00:13,283 - SourceAnalyzer - DEBUG - logger.py:64 - Components upsert 시작: selectProductsByCategory (SQL_SELECT)
2025-09-13 01:00:13,283 - SourceAnalyzer - DEBUG - logger.py:64 - 기존 레코드 확인 쿼리: 
                    SELECT component_id FROM components 
                    WHERE project_id = ? AND component_name = ? AND file_id = ?
                    
2025-09-13 01:00:13,283 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 파라미터: (1, 'selectProductsByCategory', 26)
2025-09-13 01:00:13,283 - SourceAnalyzer - DEBUG - logger.py:64 - 기존 레코드 조회 결과: None
2025-09-13 01:00:13,283 - SourceAnalyzer - DEBUG - logger.py:64 - INSERT 쿼리: 
                        INSERT INTO components (project_id, component_type, component_name, parent_id, layer, file_id, line_start, line_end, hash_value, has_error, error_message, del_yn)
                        VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
                        
2025-09-13 01:00:13,284 - SourceAnalyzer - DEBUG - logger.py:64 - INSERT 파라미터: (1, 'SQL_SELECT', 'selectProductsByCategory', None, 'SQL', 26, 68, 75, 'ef7bb96619918044199320c89356be79', 'N', None, 'N')
2025-09-13 01:00:13,284 - SourceAnalyzer - DEBUG - logger.py:64 - INSERT 실행 완료: component_id = 3082
2025-09-13 01:00:13,284 - SourceAnalyzer - DEBUG - logger.py:64 - 컴포넌트 저장 완료: selectProductsByCategory (ID: 3082)
2025-09-13 01:00:13,284 - SourceAnalyzer - DEBUG - logger.py:64 - 컴포넌트 저장 결과: component_id = 3082
2025-09-13 01:00:13,284 - SourceAnalyzer - DEBUG - logger.py:64 - SQL Content 저장 시작: selectProductsByCategory (component_id: 3082)
2025-09-13 01:00:13,284 - SourceAnalyzer - DEBUG - logger.py:64 - SQL Content 상대경로: src/main/resources/mybatis/mapper
2025-09-13 01:00:13,284 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 실행 성공: SELECT project_id FROM projects WHERE project_id =...
2025-09-13 01:00:13,284 - SourceAnalyzer - DEBUG - logger.py:64 - 업데이트 쿼리 실행 성공: 
            INSERT OR REPLACE INTO sql_contents (..., 영향받은 행: 1
2025-09-13 01:00:13,284 - SourceAnalyzer - DEBUG - logger.py:64 - SQL 내용 저장 완료: selectProductsByCategory - src/main/resources/mybatis/mapper
2025-09-13 01:00:13,284 - SourceAnalyzer - DEBUG - logger.py:64 - SQL Content 저장 완료: selectProductsByCategory - src/main/resources/mybatis/mapper
2025-09-13 01:00:13,284 - SourceAnalyzer - DEBUG - logger.py:64 - SQL 쿼리 처리 완료: selectProductsByCategory
2025-09-13 01:00:13,284 - SourceAnalyzer - DEBUG - logger.py:64 - SQL 쿼리 처리 루프 시작: 5/9
2025-09-13 01:00:13,284 - SourceAnalyzer - DEBUG - logger.py:64 - SQL 쿼리 처리 시작: updateProductStock (update)
2025-09-13 01:00:13,284 - SourceAnalyzer - DEBUG - logger.py:64 - GET XML ID 조회: D:\Analyzer\CreateMetaDb\projects\sampleSrc\src\main\resources\mybatis\mapper\ProductMapper.xml -> src/main/resources/mybatis/mapper/ProductMapper.xml
2025-09-13 01:00:13,284 - SourceAnalyzer - DEBUG - logger.py:64 - 메모리 매핑 테이블 키들: ['src/com/example/dynamicquery/UserMapper.xml', 'src/main/resources/mybatis/mapper/ImplicitJoinMapper.xml', 'src/main/resources/mybatis/mapper/ImplicitJoinTestMapper.xml', 'src/main/resources/mybatis/mapper/MixedErrorMapper.xml', 'src/main/resources/mybatis/mapper/ProductMapper.xml', 'src/main/resources/mybatis/mapper/UserMapper.xml']
2025-09-13 01:00:13,284 - SourceAnalyzer - DEBUG - logger.py:64 - 메모리에서 file_id 조회 성공: src/main/resources/mybatis/mapper/ProductMapper.xml -> 26
2025-09-13 01:00:13,284 - SourceAnalyzer - DEBUG - logger.py:64 - 파일 ID 조회 성공: 26
2025-09-13 01:00:13,284 - SourceAnalyzer - DEBUG - logger.py:64 - 컴포넌트 저장 시도: updateProductStock (update) -> SQL_UPDATE
2025-09-13 01:00:13,285 - SourceAnalyzer - DEBUG - logger.py:64 - Upsert 실행: components
2025-09-13 01:00:13,285 - SourceAnalyzer - DEBUG - logger.py:64 - 데이터: {'project_id': 1, 'component_type': 'SQL_UPDATE', 'component_name': 'updateProductStock', 'parent_id': None, 'layer': 'SQL', 'file_id': 26, 'line_start': 75, 'line_end': 83, 'hash_value': '78045d38f4cfac9038ca7ab6a6fc6cfd', 'has_error': 'N', 'error_message': None, 'del_yn': 'N'}
2025-09-13 01:00:13,285 - SourceAnalyzer - DEBUG - logger.py:64 - Components upsert 시작: updateProductStock (SQL_UPDATE)
2025-09-13 01:00:13,285 - SourceAnalyzer - DEBUG - logger.py:64 - 기존 레코드 확인 쿼리: 
                    SELECT component_id FROM components 
                    WHERE project_id = ? AND component_name = ? AND file_id = ?
                    
2025-09-13 01:00:13,285 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 파라미터: (1, 'updateProductStock', 26)
2025-09-13 01:00:13,285 - SourceAnalyzer - DEBUG - logger.py:64 - 기존 레코드 조회 결과: None
2025-09-13 01:00:13,285 - SourceAnalyzer - DEBUG - logger.py:64 - INSERT 쿼리: 
                        INSERT INTO components (project_id, component_type, component_name, parent_id, layer, file_id, line_start, line_end, hash_value, has_error, error_message, del_yn)
                        VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
                        
2025-09-13 01:00:13,285 - SourceAnalyzer - DEBUG - logger.py:64 - INSERT 파라미터: (1, 'SQL_UPDATE', 'updateProductStock', None, 'SQL', 26, 75, 83, '78045d38f4cfac9038ca7ab6a6fc6cfd', 'N', None, 'N')
2025-09-13 01:00:13,285 - SourceAnalyzer - DEBUG - logger.py:64 - INSERT 실행 완료: component_id = 3083
2025-09-13 01:00:13,285 - SourceAnalyzer - DEBUG - logger.py:64 - 컴포넌트 저장 완료: updateProductStock (ID: 3083)
2025-09-13 01:00:13,285 - SourceAnalyzer - DEBUG - logger.py:64 - 컴포넌트 저장 결과: component_id = 3083
2025-09-13 01:00:13,285 - SourceAnalyzer - DEBUG - logger.py:64 - SQL Content 저장 시작: updateProductStock (component_id: 3083)
2025-09-13 01:00:13,285 - SourceAnalyzer - DEBUG - logger.py:64 - SQL Content 상대경로: src/main/resources/mybatis/mapper
2025-09-13 01:00:13,285 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 실행 성공: SELECT project_id FROM projects WHERE project_id =...
2025-09-13 01:00:13,285 - SourceAnalyzer - DEBUG - logger.py:64 - 업데이트 쿼리 실행 성공: 
            INSERT OR REPLACE INTO sql_contents (..., 영향받은 행: 1
2025-09-13 01:00:13,285 - SourceAnalyzer - DEBUG - logger.py:64 - SQL 내용 저장 완료: updateProductStock - src/main/resources/mybatis/mapper
2025-09-13 01:00:13,285 - SourceAnalyzer - DEBUG - logger.py:64 - SQL Content 저장 완료: updateProductStock - src/main/resources/mybatis/mapper
2025-09-13 01:00:13,285 - SourceAnalyzer - DEBUG - logger.py:64 - SQL 쿼리 처리 완료: updateProductStock
2025-09-13 01:00:13,285 - SourceAnalyzer - DEBUG - logger.py:64 - SQL 쿼리 처리 루프 시작: 6/9
2025-09-13 01:00:13,286 - SourceAnalyzer - DEBUG - logger.py:64 - SQL 쿼리 처리 시작: updateProductDynamic (update)
2025-09-13 01:00:13,286 - SourceAnalyzer - DEBUG - logger.py:64 - GET XML ID 조회: D:\Analyzer\CreateMetaDb\projects\sampleSrc\src\main\resources\mybatis\mapper\ProductMapper.xml -> src/main/resources/mybatis/mapper/ProductMapper.xml
2025-09-13 01:00:13,286 - SourceAnalyzer - DEBUG - logger.py:64 - 메모리 매핑 테이블 키들: ['src/com/example/dynamicquery/UserMapper.xml', 'src/main/resources/mybatis/mapper/ImplicitJoinMapper.xml', 'src/main/resources/mybatis/mapper/ImplicitJoinTestMapper.xml', 'src/main/resources/mybatis/mapper/MixedErrorMapper.xml', 'src/main/resources/mybatis/mapper/ProductMapper.xml', 'src/main/resources/mybatis/mapper/UserMapper.xml']
2025-09-13 01:00:13,286 - SourceAnalyzer - DEBUG - logger.py:64 - 메모리에서 file_id 조회 성공: src/main/resources/mybatis/mapper/ProductMapper.xml -> 26
2025-09-13 01:00:13,286 - SourceAnalyzer - DEBUG - logger.py:64 - 파일 ID 조회 성공: 26
2025-09-13 01:00:13,286 - SourceAnalyzer - DEBUG - logger.py:64 - 컴포넌트 저장 시도: updateProductDynamic (update) -> SQL_UPDATE
2025-09-13 01:00:13,286 - SourceAnalyzer - DEBUG - logger.py:64 - Upsert 실행: components
2025-09-13 01:00:13,286 - SourceAnalyzer - DEBUG - logger.py:64 - 데이터: {'project_id': 1, 'component_type': 'SQL_UPDATE', 'component_name': 'updateProductDynamic', 'parent_id': None, 'layer': 'SQL', 'file_id': 26, 'line_start': 83, 'line_end': 119, 'hash_value': '3cd6b7d1c9570a8d7279953d6f96429d', 'has_error': 'N', 'error_message': None, 'del_yn': 'N'}
2025-09-13 01:00:13,286 - SourceAnalyzer - DEBUG - logger.py:64 - Components upsert 시작: updateProductDynamic (SQL_UPDATE)
2025-09-13 01:00:13,286 - SourceAnalyzer - DEBUG - logger.py:64 - 기존 레코드 확인 쿼리: 
                    SELECT component_id FROM components 
                    WHERE project_id = ? AND component_name = ? AND file_id = ?
                    
2025-09-13 01:00:13,286 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 파라미터: (1, 'updateProductDynamic', 26)
2025-09-13 01:00:13,286 - SourceAnalyzer - DEBUG - logger.py:64 - 기존 레코드 조회 결과: None
2025-09-13 01:00:13,286 - SourceAnalyzer - DEBUG - logger.py:64 - INSERT 쿼리: 
                        INSERT INTO components (project_id, component_type, component_name, parent_id, layer, file_id, line_start, line_end, hash_value, has_error, error_message, del_yn)
                        VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
                        
2025-09-13 01:00:13,286 - SourceAnalyzer - DEBUG - logger.py:64 - INSERT 파라미터: (1, 'SQL_UPDATE', 'updateProductDynamic', None, 'SQL', 26, 83, 119, '3cd6b7d1c9570a8d7279953d6f96429d', 'N', None, 'N')
2025-09-13 01:00:13,286 - SourceAnalyzer - DEBUG - logger.py:64 - INSERT 실행 완료: component_id = 3084
2025-09-13 01:00:13,286 - SourceAnalyzer - DEBUG - logger.py:64 - 컴포넌트 저장 완료: updateProductDynamic (ID: 3084)
2025-09-13 01:00:13,286 - SourceAnalyzer - DEBUG - logger.py:64 - 컴포넌트 저장 결과: component_id = 3084
2025-09-13 01:00:13,286 - SourceAnalyzer - DEBUG - logger.py:64 - SQL Content 저장 시작: updateProductDynamic (component_id: 3084)
2025-09-13 01:00:13,286 - SourceAnalyzer - DEBUG - logger.py:64 - SQL Content 상대경로: src/main/resources/mybatis/mapper
2025-09-13 01:00:13,286 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 실행 성공: SELECT project_id FROM projects WHERE project_id =...
2025-09-13 01:00:13,287 - SourceAnalyzer - DEBUG - logger.py:64 - 업데이트 쿼리 실행 성공: 
            INSERT OR REPLACE INTO sql_contents (..., 영향받은 행: 1
2025-09-13 01:00:13,287 - SourceAnalyzer - DEBUG - logger.py:64 - SQL 내용 저장 완료: updateProductDynamic - src/main/resources/mybatis/mapper
2025-09-13 01:00:13,287 - SourceAnalyzer - DEBUG - logger.py:64 - SQL Content 저장 완료: updateProductDynamic - src/main/resources/mybatis/mapper
2025-09-13 01:00:13,287 - SourceAnalyzer - DEBUG - logger.py:64 - SQL 쿼리 처리 완료: updateProductDynamic
2025-09-13 01:00:13,287 - SourceAnalyzer - DEBUG - logger.py:64 - SQL 쿼리 처리 루프 시작: 7/9
2025-09-13 01:00:13,287 - SourceAnalyzer - DEBUG - logger.py:64 - SQL 쿼리 처리 시작: insertProductDynamic (insert)
2025-09-13 01:00:13,287 - SourceAnalyzer - DEBUG - logger.py:64 - GET XML ID 조회: D:\Analyzer\CreateMetaDb\projects\sampleSrc\src\main\resources\mybatis\mapper\ProductMapper.xml -> src/main/resources/mybatis/mapper/ProductMapper.xml
2025-09-13 01:00:13,287 - SourceAnalyzer - DEBUG - logger.py:64 - 메모리 매핑 테이블 키들: ['src/com/example/dynamicquery/UserMapper.xml', 'src/main/resources/mybatis/mapper/ImplicitJoinMapper.xml', 'src/main/resources/mybatis/mapper/ImplicitJoinTestMapper.xml', 'src/main/resources/mybatis/mapper/MixedErrorMapper.xml', 'src/main/resources/mybatis/mapper/ProductMapper.xml', 'src/main/resources/mybatis/mapper/UserMapper.xml']
2025-09-13 01:00:13,287 - SourceAnalyzer - DEBUG - logger.py:64 - 메모리에서 file_id 조회 성공: src/main/resources/mybatis/mapper/ProductMapper.xml -> 26
2025-09-13 01:00:13,287 - SourceAnalyzer - DEBUG - logger.py:64 - 파일 ID 조회 성공: 26
2025-09-13 01:00:13,287 - SourceAnalyzer - DEBUG - logger.py:64 - 컴포넌트 저장 시도: insertProductDynamic (insert) -> SQL_INSERT
2025-09-13 01:00:13,287 - SourceAnalyzer - DEBUG - logger.py:64 - Upsert 실행: components
2025-09-13 01:00:13,287 - SourceAnalyzer - DEBUG - logger.py:64 - 데이터: {'project_id': 1, 'component_type': 'SQL_INSERT', 'component_name': 'insertProductDynamic', 'parent_id': None, 'layer': 'SQL', 'file_id': 26, 'line_start': 119, 'line_end': 156, 'hash_value': '82862dd7c5e1e23ecc16ff126f8f70f7', 'has_error': 'N', 'error_message': None, 'del_yn': 'N'}
2025-09-13 01:00:13,287 - SourceAnalyzer - DEBUG - logger.py:64 - Components upsert 시작: insertProductDynamic (SQL_INSERT)
2025-09-13 01:00:13,287 - SourceAnalyzer - DEBUG - logger.py:64 - 기존 레코드 확인 쿼리: 
                    SELECT component_id FROM components 
                    WHERE project_id = ? AND component_name = ? AND file_id = ?
                    
2025-09-13 01:00:13,287 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 파라미터: (1, 'insertProductDynamic', 26)
2025-09-13 01:00:13,287 - SourceAnalyzer - DEBUG - logger.py:64 - 기존 레코드 조회 결과: None
2025-09-13 01:00:13,287 - SourceAnalyzer - DEBUG - logger.py:64 - INSERT 쿼리: 
                        INSERT INTO components (project_id, component_type, component_name, parent_id, layer, file_id, line_start, line_end, hash_value, has_error, error_message, del_yn)
                        VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
                        
2025-09-13 01:00:13,287 - SourceAnalyzer - DEBUG - logger.py:64 - INSERT 파라미터: (1, 'SQL_INSERT', 'insertProductDynamic', None, 'SQL', 26, 119, 156, '82862dd7c5e1e23ecc16ff126f8f70f7', 'N', None, 'N')
2025-09-13 01:00:13,287 - SourceAnalyzer - DEBUG - logger.py:64 - INSERT 실행 완료: component_id = 3085
2025-09-13 01:00:13,287 - SourceAnalyzer - DEBUG - logger.py:64 - 컴포넌트 저장 완료: insertProductDynamic (ID: 3085)
2025-09-13 01:00:13,287 - SourceAnalyzer - DEBUG - logger.py:64 - 컴포넌트 저장 결과: component_id = 3085
2025-09-13 01:00:13,287 - SourceAnalyzer - DEBUG - logger.py:64 - SQL Content 저장 시작: insertProductDynamic (component_id: 3085)
2025-09-13 01:00:13,287 - SourceAnalyzer - DEBUG - logger.py:64 - SQL Content 상대경로: src/main/resources/mybatis/mapper
2025-09-13 01:00:13,287 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 실행 성공: SELECT project_id FROM projects WHERE project_id =...
2025-09-13 01:00:13,288 - SourceAnalyzer - DEBUG - logger.py:64 - 업데이트 쿼리 실행 성공: 
            INSERT OR REPLACE INTO sql_contents (..., 영향받은 행: 1
2025-09-13 01:00:13,288 - SourceAnalyzer - DEBUG - logger.py:64 - SQL 내용 저장 완료: insertProductDynamic - src/main/resources/mybatis/mapper
2025-09-13 01:00:13,288 - SourceAnalyzer - DEBUG - logger.py:64 - SQL Content 저장 완료: insertProductDynamic - src/main/resources/mybatis/mapper
2025-09-13 01:00:13,288 - SourceAnalyzer - DEBUG - logger.py:64 - SQL 쿼리 처리 완료: insertProductDynamic
2025-09-13 01:00:13,288 - SourceAnalyzer - DEBUG - logger.py:64 - SQL 쿼리 처리 루프 시작: 8/9
2025-09-13 01:00:13,288 - SourceAnalyzer - DEBUG - logger.py:64 - SQL 쿼리 처리 시작: deleteProductsByCondition (delete)
2025-09-13 01:00:13,288 - SourceAnalyzer - DEBUG - logger.py:64 - GET XML ID 조회: D:\Analyzer\CreateMetaDb\projects\sampleSrc\src\main\resources\mybatis\mapper\ProductMapper.xml -> src/main/resources/mybatis/mapper/ProductMapper.xml
2025-09-13 01:00:13,288 - SourceAnalyzer - DEBUG - logger.py:64 - 메모리 매핑 테이블 키들: ['src/com/example/dynamicquery/UserMapper.xml', 'src/main/resources/mybatis/mapper/ImplicitJoinMapper.xml', 'src/main/resources/mybatis/mapper/ImplicitJoinTestMapper.xml', 'src/main/resources/mybatis/mapper/MixedErrorMapper.xml', 'src/main/resources/mybatis/mapper/ProductMapper.xml', 'src/main/resources/mybatis/mapper/UserMapper.xml']
2025-09-13 01:00:13,288 - SourceAnalyzer - DEBUG - logger.py:64 - 메모리에서 file_id 조회 성공: src/main/resources/mybatis/mapper/ProductMapper.xml -> 26
2025-09-13 01:00:13,288 - SourceAnalyzer - DEBUG - logger.py:64 - 파일 ID 조회 성공: 26
2025-09-13 01:00:13,288 - SourceAnalyzer - DEBUG - logger.py:64 - 컴포넌트 저장 시도: deleteProductsByCondition (delete) -> SQL_DELETE
2025-09-13 01:00:13,288 - SourceAnalyzer - DEBUG - logger.py:64 - Upsert 실행: components
2025-09-13 01:00:13,288 - SourceAnalyzer - DEBUG - logger.py:64 - 데이터: {'project_id': 1, 'component_type': 'SQL_DELETE', 'component_name': 'deleteProductsByCondition', 'parent_id': None, 'layer': 'SQL', 'file_id': 26, 'line_start': 156, 'line_end': 173, 'hash_value': 'd6e6c096a87b2cc2d3da366161b3c0a3', 'has_error': 'N', 'error_message': None, 'del_yn': 'N'}
2025-09-13 01:00:13,288 - SourceAnalyzer - DEBUG - logger.py:64 - Components upsert 시작: deleteProductsByCondition (SQL_DELETE)
2025-09-13 01:00:13,288 - SourceAnalyzer - DEBUG - logger.py:64 - 기존 레코드 확인 쿼리: 
                    SELECT component_id FROM components 
                    WHERE project_id = ? AND component_name = ? AND file_id = ?
                    
2025-09-13 01:00:13,288 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 파라미터: (1, 'deleteProductsByCondition', 26)
2025-09-13 01:00:13,288 - SourceAnalyzer - DEBUG - logger.py:64 - 기존 레코드 조회 결과: None
2025-09-13 01:00:13,288 - SourceAnalyzer - DEBUG - logger.py:64 - INSERT 쿼리: 
                        INSERT INTO components (project_id, component_type, component_name, parent_id, layer, file_id, line_start, line_end, hash_value, has_error, error_message, del_yn)
                        VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
                        
2025-09-13 01:00:13,288 - SourceAnalyzer - DEBUG - logger.py:64 - INSERT 파라미터: (1, 'SQL_DELETE', 'deleteProductsByCondition', None, 'SQL', 26, 156, 173, 'd6e6c096a87b2cc2d3da366161b3c0a3', 'N', None, 'N')
2025-09-13 01:00:13,288 - SourceAnalyzer - DEBUG - logger.py:64 - INSERT 실행 완료: component_id = 3086
2025-09-13 01:00:13,288 - SourceAnalyzer - DEBUG - logger.py:64 - 컴포넌트 저장 완료: deleteProductsByCondition (ID: 3086)
2025-09-13 01:00:13,288 - SourceAnalyzer - DEBUG - logger.py:64 - 컴포넌트 저장 결과: component_id = 3086
2025-09-13 01:00:13,288 - SourceAnalyzer - DEBUG - logger.py:64 - SQL Content 저장 시작: deleteProductsByCondition (component_id: 3086)
2025-09-13 01:00:13,288 - SourceAnalyzer - DEBUG - logger.py:64 - SQL Content 상대경로: src/main/resources/mybatis/mapper
2025-09-13 01:00:13,288 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 실행 성공: SELECT project_id FROM projects WHERE project_id =...
2025-09-13 01:00:13,289 - SourceAnalyzer - DEBUG - logger.py:64 - 업데이트 쿼리 실행 성공: 
            INSERT OR REPLACE INTO sql_contents (..., 영향받은 행: 1
2025-09-13 01:00:13,289 - SourceAnalyzer - DEBUG - logger.py:64 - SQL 내용 저장 완료: deleteProductsByCondition - src/main/resources/mybatis/mapper
2025-09-13 01:00:13,289 - SourceAnalyzer - DEBUG - logger.py:64 - SQL Content 저장 완료: deleteProductsByCondition - src/main/resources/mybatis/mapper
2025-09-13 01:00:13,289 - SourceAnalyzer - DEBUG - logger.py:64 - SQL 쿼리 처리 완료: deleteProductsByCondition
2025-09-13 01:00:13,289 - SourceAnalyzer - DEBUG - logger.py:64 - SQL 쿼리 처리 루프 시작: 9/9
2025-09-13 01:00:13,289 - SourceAnalyzer - DEBUG - logger.py:64 - SQL 쿼리 처리 시작: countProductsByCondition (select)
2025-09-13 01:00:13,289 - SourceAnalyzer - DEBUG - logger.py:64 - GET XML ID 조회: D:\Analyzer\CreateMetaDb\projects\sampleSrc\src\main\resources\mybatis\mapper\ProductMapper.xml -> src/main/resources/mybatis/mapper/ProductMapper.xml
2025-09-13 01:00:13,289 - SourceAnalyzer - DEBUG - logger.py:64 - 메모리 매핑 테이블 키들: ['src/com/example/dynamicquery/UserMapper.xml', 'src/main/resources/mybatis/mapper/ImplicitJoinMapper.xml', 'src/main/resources/mybatis/mapper/ImplicitJoinTestMapper.xml', 'src/main/resources/mybatis/mapper/MixedErrorMapper.xml', 'src/main/resources/mybatis/mapper/ProductMapper.xml', 'src/main/resources/mybatis/mapper/UserMapper.xml']
2025-09-13 01:00:13,289 - SourceAnalyzer - DEBUG - logger.py:64 - 메모리에서 file_id 조회 성공: src/main/resources/mybatis/mapper/ProductMapper.xml -> 26
2025-09-13 01:00:13,289 - SourceAnalyzer - DEBUG - logger.py:64 - 파일 ID 조회 성공: 26
2025-09-13 01:00:13,289 - SourceAnalyzer - DEBUG - logger.py:64 - 컴포넌트 저장 시도: countProductsByCondition (select) -> SQL_SELECT
2025-09-13 01:00:13,289 - SourceAnalyzer - DEBUG - logger.py:64 - Upsert 실행: components
2025-09-13 01:00:13,289 - SourceAnalyzer - DEBUG - logger.py:64 - 데이터: {'project_id': 1, 'component_type': 'SQL_SELECT', 'component_name': 'countProductsByCondition', 'parent_id': None, 'layer': 'SQL', 'file_id': 26, 'line_start': 173, 'line_end': 195, 'hash_value': '5810aa8bc4b4845287319fd819e8ab0f', 'has_error': 'N', 'error_message': None, 'del_yn': 'N'}
2025-09-13 01:00:13,289 - SourceAnalyzer - DEBUG - logger.py:64 - Components upsert 시작: countProductsByCondition (SQL_SELECT)
2025-09-13 01:00:13,289 - SourceAnalyzer - DEBUG - logger.py:64 - 기존 레코드 확인 쿼리: 
                    SELECT component_id FROM components 
                    WHERE project_id = ? AND component_name = ? AND file_id = ?
                    
2025-09-13 01:00:13,289 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 파라미터: (1, 'countProductsByCondition', 26)
2025-09-13 01:00:13,289 - SourceAnalyzer - DEBUG - logger.py:64 - 기존 레코드 조회 결과: None
2025-09-13 01:00:13,289 - SourceAnalyzer - DEBUG - logger.py:64 - INSERT 쿼리: 
                        INSERT INTO components (project_id, component_type, component_name, parent_id, layer, file_id, line_start, line_end, hash_value, has_error, error_message, del_yn)
                        VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
                        
2025-09-13 01:00:13,289 - SourceAnalyzer - DEBUG - logger.py:64 - INSERT 파라미터: (1, 'SQL_SELECT', 'countProductsByCondition', None, 'SQL', 26, 173, 195, '5810aa8bc4b4845287319fd819e8ab0f', 'N', None, 'N')
2025-09-13 01:00:13,289 - SourceAnalyzer - DEBUG - logger.py:64 - INSERT 실행 완료: component_id = 3087
2025-09-13 01:00:13,289 - SourceAnalyzer - DEBUG - logger.py:64 - 컴포넌트 저장 완료: countProductsByCondition (ID: 3087)
2025-09-13 01:00:13,289 - SourceAnalyzer - DEBUG - logger.py:64 - 컴포넌트 저장 결과: component_id = 3087
2025-09-13 01:00:13,289 - SourceAnalyzer - DEBUG - logger.py:64 - SQL Content 저장 시작: countProductsByCondition (component_id: 3087)
2025-09-13 01:00:13,289 - SourceAnalyzer - DEBUG - logger.py:64 - SQL Content 상대경로: src/main/resources/mybatis/mapper
2025-09-13 01:00:13,290 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 실행 성공: SELECT project_id FROM projects WHERE project_id =...
2025-09-13 01:00:13,290 - SourceAnalyzer - DEBUG - logger.py:64 - 업데이트 쿼리 실행 성공: 
            INSERT OR REPLACE INTO sql_contents (..., 영향받은 행: 1
2025-09-13 01:00:13,290 - SourceAnalyzer - DEBUG - logger.py:64 - SQL 내용 저장 완료: countProductsByCondition - src/main/resources/mybatis/mapper
2025-09-13 01:00:13,290 - SourceAnalyzer - DEBUG - logger.py:64 - SQL Content 저장 완료: countProductsByCondition - src/main/resources/mybatis/mapper
2025-09-13 01:00:13,290 - SourceAnalyzer - DEBUG - logger.py:64 - SQL 쿼리 처리 완료: countProductsByCondition
2025-09-13 01:00:13,290 - SourceAnalyzer - INFO - logger.py:68 - === SQL 쿼리 처리 완료 ===
2025-09-13 01:00:13,290 - SourceAnalyzer - INFO - logger.py:68 - 처리된 쿼리 수: 9
2025-09-13 01:00:13,290 - SourceAnalyzer - INFO - logger.py:68 - 건너뜀 쿼리 수: 0
2025-09-13 01:00:13,290 - SourceAnalyzer - INFO - logger.py:68 - 컴포넌트 ID 매핑 크기: 9
2025-09-13 01:00:13,290 - SourceAnalyzer - INFO - logger.py:68 - SQL 컴포넌트 저장 완료: 9개 (건너뜀: 0개)
2025-09-13 01:00:13,290 - SourceAnalyzer - INFO - logger.py:68 - process_sql_queries 호출 후: result=True
2025-09-13 01:00:13,290 - SourceAnalyzer - INFO - logger.py:68 - SQL Content Processor 처리 결과: True
2025-09-13 01:00:13,290 - SourceAnalyzer - INFO - logger.py:68 - === XML 로딩 엔진: SQL 컴포넌트 저장 완료 ===
2025-09-13 01:00:13,291 - SourceAnalyzer - DEBUG - logger.py:64 - 파일 읽기 성공: D:\Analyzer\CreateMetaDb\projects\sampleSrc\src\main\resources\mybatis\mapper\UserMapper.xml
2025-09-13 01:00:13,291 - SourceAnalyzer - DEBUG - logger.py:64 - 파일 읽기 성공: D:\Analyzer\CreateMetaDb\projects\sampleSrc\src\main\resources\mybatis\mapper\UserMapper.xml
2025-09-13 01:00:13,292 - SourceAnalyzer - DEBUG - logger.py:64 - 파일 읽기 성공: D:\Analyzer\CreateMetaDb\projects\sampleSrc\src\main\resources\mybatis\mapper\UserMapper.xml
2025-09-13 01:00:13,292 - SourceAnalyzer - DEBUG - logger.py:64 - 파일 읽기 성공: D:\Analyzer\CreateMetaDb\projects\sampleSrc\src\main\resources\mybatis\mapper\UserMapper.xml
2025-09-13 01:00:13,293 - SourceAnalyzer - DEBUG - logger.py:64 - 파일 읽기 성공: D:\Analyzer\CreateMetaDb\projects\sampleSrc\src\main\resources\mybatis\mapper\UserMapper.xml
2025-09-13 01:00:13,293 - SourceAnalyzer - DEBUG - logger.py:64 - 파일 읽기 성공: D:\Analyzer\CreateMetaDb\projects\sampleSrc\src\main\resources\mybatis\mapper\UserMapper.xml
2025-09-13 01:00:13,294 - SourceAnalyzer - DEBUG - logger.py:64 - 파일 읽기 성공: D:\Analyzer\CreateMetaDb\projects\sampleSrc\src\main\resources\mybatis\mapper\UserMapper.xml
2025-09-13 01:00:13,294 - SourceAnalyzer - DEBUG - logger.py:64 - 파일 읽기 성공: D:\Analyzer\CreateMetaDb\projects\sampleSrc\src\main\resources\mybatis\mapper\UserMapper.xml
2025-09-13 01:00:13,294 - SourceAnalyzer - DEBUG - logger.py:64 - 파일 읽기 성공: D:\Analyzer\CreateMetaDb\projects\sampleSrc\src\main\resources\mybatis\mapper\UserMapper.xml
2025-09-13 01:00:13,295 - SourceAnalyzer - DEBUG - logger.py:64 - 파일 읽기 성공: D:\Analyzer\CreateMetaDb\projects\sampleSrc\src\main\resources\mybatis\mapper\UserMapper.xml
2025-09-13 01:00:13,296 - SourceAnalyzer - DEBUG - logger.py:64 - 파일 읽기 성공: D:\Analyzer\CreateMetaDb\projects\sampleSrc\src\main\resources\mybatis\mapper\UserMapper.xml
2025-09-13 01:00:13,296 - SourceAnalyzer - DEBUG - logger.py:64 - 파일 읽기 성공: D:\Analyzer\CreateMetaDb\projects\sampleSrc\src\main\resources\mybatis\mapper\UserMapper.xml
2025-09-13 01:00:13,297 - SourceAnalyzer - DEBUG - logger.py:64 - 파일 읽기 성공: D:\Analyzer\CreateMetaDb\projects\sampleSrc\src\main\resources\mybatis\mapper\UserMapper.xml
2025-09-13 01:00:13,298 - SourceAnalyzer - DEBUG - logger.py:64 - 파일 읽기 성공: D:\Analyzer\CreateMetaDb\projects\sampleSrc\src\main\resources\mybatis\mapper\UserMapper.xml
2025-09-13 01:00:13,299 - SourceAnalyzer - DEBUG - logger.py:64 - 파일 읽기 성공: D:\Analyzer\CreateMetaDb\projects\sampleSrc\src\main\resources\mybatis\mapper\UserMapper.xml
2025-09-13 01:00:13,300 - SourceAnalyzer - DEBUG - logger.py:64 - 파일 읽기 성공: D:\Analyzer\CreateMetaDb\projects\sampleSrc\src\main\resources\mybatis\mapper\UserMapper.xml
2025-09-13 01:00:13,300 - SourceAnalyzer - DEBUG - logger.py:64 - 파일 읽기 성공: D:\Analyzer\CreateMetaDb\projects\sampleSrc\src\main\resources\mybatis\mapper\UserMapper.xml
2025-09-13 01:00:13,301 - SourceAnalyzer - DEBUG - logger.py:64 - 파일 읽기 성공: D:\Analyzer\CreateMetaDb\projects\sampleSrc\src\main\resources\mybatis\mapper\UserMapper.xml
2025-09-13 01:00:13,302 - SourceAnalyzer - DEBUG - logger.py:64 - 파일 읽기 성공: D:\Analyzer\CreateMetaDb\projects\sampleSrc\src\main\resources\mybatis\mapper\UserMapper.xml
2025-09-13 01:00:13,302 - SourceAnalyzer - DEBUG - logger.py:64 - 파일 읽기 성공: D:\Analyzer\CreateMetaDb\projects\sampleSrc\src\main\resources\mybatis\mapper\UserMapper.xml
2025-09-13 01:00:13,303 - SourceAnalyzer - INFO - logger.py:68 - === XML 로딩 엔진: SQL 컴포넌트 저장 시작 ===
2025-09-13 01:00:13,303 - SourceAnalyzer - INFO - logger.py:68 - 전달받은 SQL 쿼리 수: 20개
2025-09-13 01:00:13,303 - SourceAnalyzer - INFO - logger.py:68 - XML에서 추출된 SQL 쿼리 타입별 통계: {'select': 15, 'update': 2, 'insert': 2, 'delete': 1}
2025-09-13 01:00:13,303 - SourceAnalyzer - INFO - logger.py:68 - 프로젝트 ID: 1
2025-09-13 01:00:13,303 - SourceAnalyzer - INFO - logger.py:68 - SQL Content Processor를 사용하여 처리 시작
2025-09-13 01:00:13,303 - SourceAnalyzer - INFO - logger.py:68 - process_sql_queries 호출 전: sql_queries=20, project_id=1
2025-09-13 01:00:13,303 - SourceAnalyzer - INFO - logger.py:68 - === SQL 쿼리 처리 시작 ===
2025-09-13 01:00:13,303 - SourceAnalyzer - INFO - logger.py:68 - 전달받은 SQL 쿼리 수: 20
2025-09-13 01:00:13,303 - SourceAnalyzer - INFO - logger.py:68 - 프로젝트 ID: 1
2025-09-13 01:00:13,303 - SourceAnalyzer - INFO - logger.py:68 - SQL 쿼리 타입별 통계: {'select': 15, 'update': 2, 'insert': 2, 'delete': 1}
2025-09-13 01:00:13,303 - SourceAnalyzer - DEBUG - logger.py:64 - SQL 쿼리 리스트 크기: 20
2025-09-13 01:00:13,303 - SourceAnalyzer - DEBUG - logger.py:64 - SQL 쿼리 리스트 타입: <class 'list'>
2025-09-13 01:00:13,303 - SourceAnalyzer - DEBUG - logger.py:64 - 첫 번째 쿼리 정보: {'tag_name': 'select', 'query_id': 'selectUserById', 'sql_content': 'SELECT * FROM users WHERE id = param', 'file_path': 'D:\\Analyzer\\CreateMetaDb\\projects\\sampleSrc\\src\\main\\resources\\mybatis\\mapper\\UserMapper.xml', 'line_start': 8, 'line_end': 13, 'hash_value': 'ffc91b286b433bbedc7fb272911c265a'}
2025-09-13 01:00:13,303 - SourceAnalyzer - DEBUG - logger.py:64 - SQL 쿼리 처리 루프 시작: 1/20
2025-09-13 01:00:13,303 - SourceAnalyzer - DEBUG - logger.py:64 - SQL 쿼리 처리 시작: selectUserById (select)
2025-09-13 01:00:13,303 - SourceAnalyzer - DEBUG - logger.py:64 - GET XML ID 조회: D:\Analyzer\CreateMetaDb\projects\sampleSrc\src\main\resources\mybatis\mapper\UserMapper.xml -> src/main/resources/mybatis/mapper/UserMapper.xml
2025-09-13 01:00:13,303 - SourceAnalyzer - DEBUG - logger.py:64 - 메모리 매핑 테이블 키들: ['src/com/example/dynamicquery/UserMapper.xml', 'src/main/resources/mybatis/mapper/ImplicitJoinMapper.xml', 'src/main/resources/mybatis/mapper/ImplicitJoinTestMapper.xml', 'src/main/resources/mybatis/mapper/MixedErrorMapper.xml', 'src/main/resources/mybatis/mapper/ProductMapper.xml', 'src/main/resources/mybatis/mapper/UserMapper.xml']
2025-09-13 01:00:13,303 - SourceAnalyzer - DEBUG - logger.py:64 - 메모리에서 file_id 조회 성공: src/main/resources/mybatis/mapper/UserMapper.xml -> 27
2025-09-13 01:00:13,303 - SourceAnalyzer - DEBUG - logger.py:64 - 파일 ID 조회 성공: 27
2025-09-13 01:00:13,303 - SourceAnalyzer - DEBUG - logger.py:64 - 컴포넌트 저장 시도: selectUserById (select) -> SQL_SELECT
2025-09-13 01:00:13,303 - SourceAnalyzer - DEBUG - logger.py:64 - Upsert 실행: components
2025-09-13 01:00:13,304 - SourceAnalyzer - DEBUG - logger.py:64 - 데이터: {'project_id': 1, 'component_type': 'SQL_SELECT', 'component_name': 'selectUserById', 'parent_id': None, 'layer': 'SQL', 'file_id': 27, 'line_start': 8, 'line_end': 13, 'hash_value': 'ffc91b286b433bbedc7fb272911c265a', 'has_error': 'N', 'error_message': None, 'del_yn': 'N'}
2025-09-13 01:00:13,304 - SourceAnalyzer - DEBUG - logger.py:64 - Components upsert 시작: selectUserById (SQL_SELECT)
2025-09-13 01:00:13,304 - SourceAnalyzer - DEBUG - logger.py:64 - 기존 레코드 확인 쿼리: 
                    SELECT component_id FROM components 
                    WHERE project_id = ? AND component_name = ? AND file_id = ?
                    
2025-09-13 01:00:13,304 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 파라미터: (1, 'selectUserById', 27)
2025-09-13 01:00:13,304 - SourceAnalyzer - DEBUG - logger.py:64 - 기존 레코드 조회 결과: None
2025-09-13 01:00:13,304 - SourceAnalyzer - DEBUG - logger.py:64 - INSERT 쿼리: 
                        INSERT INTO components (project_id, component_type, component_name, parent_id, layer, file_id, line_start, line_end, hash_value, has_error, error_message, del_yn)
                        VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
                        
2025-09-13 01:00:13,304 - SourceAnalyzer - DEBUG - logger.py:64 - INSERT 파라미터: (1, 'SQL_SELECT', 'selectUserById', None, 'SQL', 27, 8, 13, 'ffc91b286b433bbedc7fb272911c265a', 'N', None, 'N')
2025-09-13 01:00:13,304 - SourceAnalyzer - DEBUG - logger.py:64 - INSERT 실행 완료: component_id = 3088
2025-09-13 01:00:13,304 - SourceAnalyzer - DEBUG - logger.py:64 - 컴포넌트 저장 완료: selectUserById (ID: 3088)
2025-09-13 01:00:13,304 - SourceAnalyzer - DEBUG - logger.py:64 - 컴포넌트 저장 결과: component_id = 3088
2025-09-13 01:00:13,304 - SourceAnalyzer - DEBUG - logger.py:64 - SQL Content 저장 시작: selectUserById (component_id: 3088)
2025-09-13 01:00:13,304 - SourceAnalyzer - DEBUG - logger.py:64 - SQL Content 상대경로: src/main/resources/mybatis/mapper
2025-09-13 01:00:13,304 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 실행 성공: SELECT project_id FROM projects WHERE project_id =...
2025-09-13 01:00:13,304 - SourceAnalyzer - DEBUG - logger.py:64 - 업데이트 쿼리 실행 성공: 
            INSERT OR REPLACE INTO sql_contents (..., 영향받은 행: 1
2025-09-13 01:00:13,304 - SourceAnalyzer - DEBUG - logger.py:64 - SQL 내용 저장 완료: selectUserById - src/main/resources/mybatis/mapper
2025-09-13 01:00:13,304 - SourceAnalyzer - DEBUG - logger.py:64 - SQL Content 저장 완료: selectUserById - src/main/resources/mybatis/mapper
2025-09-13 01:00:13,304 - SourceAnalyzer - DEBUG - logger.py:64 - SQL 쿼리 처리 완료: selectUserById
2025-09-13 01:00:13,304 - SourceAnalyzer - DEBUG - logger.py:64 - SQL 쿼리 처리 루프 시작: 2/20
2025-09-13 01:00:13,304 - SourceAnalyzer - DEBUG - logger.py:64 - SQL 쿼리 처리 시작: selectUsersByCondition (select)
2025-09-13 01:00:13,304 - SourceAnalyzer - DEBUG - logger.py:64 - GET XML ID 조회: D:\Analyzer\CreateMetaDb\projects\sampleSrc\src\main\resources\mybatis\mapper\UserMapper.xml -> src/main/resources/mybatis/mapper/UserMapper.xml
2025-09-13 01:00:13,305 - SourceAnalyzer - DEBUG - logger.py:64 - 메모리 매핑 테이블 키들: ['src/com/example/dynamicquery/UserMapper.xml', 'src/main/resources/mybatis/mapper/ImplicitJoinMapper.xml', 'src/main/resources/mybatis/mapper/ImplicitJoinTestMapper.xml', 'src/main/resources/mybatis/mapper/MixedErrorMapper.xml', 'src/main/resources/mybatis/mapper/ProductMapper.xml', 'src/main/resources/mybatis/mapper/UserMapper.xml']
2025-09-13 01:00:13,305 - SourceAnalyzer - DEBUG - logger.py:64 - 메모리에서 file_id 조회 성공: src/main/resources/mybatis/mapper/UserMapper.xml -> 27
2025-09-13 01:00:13,305 - SourceAnalyzer - DEBUG - logger.py:64 - 파일 ID 조회 성공: 27
2025-09-13 01:00:13,305 - SourceAnalyzer - DEBUG - logger.py:64 - 컴포넌트 저장 시도: selectUsersByCondition (select) -> SQL_SELECT
2025-09-13 01:00:13,305 - SourceAnalyzer - DEBUG - logger.py:64 - Upsert 실행: components
2025-09-13 01:00:13,305 - SourceAnalyzer - DEBUG - logger.py:64 - 데이터: {'project_id': 1, 'component_type': 'SQL_SELECT', 'component_name': 'selectUsersByCondition', 'parent_id': None, 'layer': 'SQL', 'file_id': 27, 'line_start': 13, 'line_end': 30, 'hash_value': '8ad58a94f26b11c55f41617dd7251d73', 'has_error': 'N', 'error_message': None, 'del_yn': 'N'}
2025-09-13 01:00:13,305 - SourceAnalyzer - DEBUG - logger.py:64 - Components upsert 시작: selectUsersByCondition (SQL_SELECT)
2025-09-13 01:00:13,305 - SourceAnalyzer - DEBUG - logger.py:64 - 기존 레코드 확인 쿼리: 
                    SELECT component_id FROM components 
                    WHERE project_id = ? AND component_name = ? AND file_id = ?
                    
2025-09-13 01:00:13,305 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 파라미터: (1, 'selectUsersByCondition', 27)
2025-09-13 01:00:13,305 - SourceAnalyzer - DEBUG - logger.py:64 - 기존 레코드 조회 결과: None
2025-09-13 01:00:13,305 - SourceAnalyzer - DEBUG - logger.py:64 - INSERT 쿼리: 
                        INSERT INTO components (project_id, component_type, component_name, parent_id, layer, file_id, line_start, line_end, hash_value, has_error, error_message, del_yn)
                        VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
                        
2025-09-13 01:00:13,305 - SourceAnalyzer - DEBUG - logger.py:64 - INSERT 파라미터: (1, 'SQL_SELECT', 'selectUsersByCondition', None, 'SQL', 27, 13, 30, '8ad58a94f26b11c55f41617dd7251d73', 'N', None, 'N')
2025-09-13 01:00:13,305 - SourceAnalyzer - DEBUG - logger.py:64 - INSERT 실행 완료: component_id = 3089
2025-09-13 01:00:13,305 - SourceAnalyzer - DEBUG - logger.py:64 - 컴포넌트 저장 완료: selectUsersByCondition (ID: 3089)
2025-09-13 01:00:13,305 - SourceAnalyzer - DEBUG - logger.py:64 - 컴포넌트 저장 결과: component_id = 3089
2025-09-13 01:00:13,305 - SourceAnalyzer - DEBUG - logger.py:64 - SQL Content 저장 시작: selectUsersByCondition (component_id: 3089)
2025-09-13 01:00:13,305 - SourceAnalyzer - DEBUG - logger.py:64 - SQL Content 상대경로: src/main/resources/mybatis/mapper
2025-09-13 01:00:13,305 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 실행 성공: SELECT project_id FROM projects WHERE project_id =...
2025-09-13 01:00:13,305 - SourceAnalyzer - DEBUG - logger.py:64 - 업데이트 쿼리 실행 성공: 
            INSERT OR REPLACE INTO sql_contents (..., 영향받은 행: 1
2025-09-13 01:00:13,305 - SourceAnalyzer - DEBUG - logger.py:64 - SQL 내용 저장 완료: selectUsersByCondition - src/main/resources/mybatis/mapper
2025-09-13 01:00:13,305 - SourceAnalyzer - DEBUG - logger.py:64 - SQL Content 저장 완료: selectUsersByCondition - src/main/resources/mybatis/mapper
2025-09-13 01:00:13,305 - SourceAnalyzer - DEBUG - logger.py:64 - SQL 쿼리 처리 완료: selectUsersByCondition
2025-09-13 01:00:13,305 - SourceAnalyzer - DEBUG - logger.py:64 - SQL 쿼리 처리 루프 시작: 3/20
2025-09-13 01:00:13,306 - SourceAnalyzer - DEBUG - logger.py:64 - SQL 쿼리 처리 시작: selectUsersByAdvancedCondition (select)
2025-09-13 01:00:13,306 - SourceAnalyzer - DEBUG - logger.py:64 - GET XML ID 조회: D:\Analyzer\CreateMetaDb\projects\sampleSrc\src\main\resources\mybatis\mapper\UserMapper.xml -> src/main/resources/mybatis/mapper/UserMapper.xml
2025-09-13 01:00:13,306 - SourceAnalyzer - DEBUG - logger.py:64 - 메모리 매핑 테이블 키들: ['src/com/example/dynamicquery/UserMapper.xml', 'src/main/resources/mybatis/mapper/ImplicitJoinMapper.xml', 'src/main/resources/mybatis/mapper/ImplicitJoinTestMapper.xml', 'src/main/resources/mybatis/mapper/MixedErrorMapper.xml', 'src/main/resources/mybatis/mapper/ProductMapper.xml', 'src/main/resources/mybatis/mapper/UserMapper.xml']
2025-09-13 01:00:13,306 - SourceAnalyzer - DEBUG - logger.py:64 - 메모리에서 file_id 조회 성공: src/main/resources/mybatis/mapper/UserMapper.xml -> 27
2025-09-13 01:00:13,306 - SourceAnalyzer - DEBUG - logger.py:64 - 파일 ID 조회 성공: 27
2025-09-13 01:00:13,306 - SourceAnalyzer - DEBUG - logger.py:64 - 컴포넌트 저장 시도: selectUsersByAdvancedCondition (select) -> SQL_SELECT
2025-09-13 01:00:13,306 - SourceAnalyzer - DEBUG - logger.py:64 - Upsert 실행: components
2025-09-13 01:00:13,306 - SourceAnalyzer - DEBUG - logger.py:64 - 데이터: {'project_id': 1, 'component_type': 'SQL_SELECT', 'component_name': 'selectUsersByAdvancedCondition', 'parent_id': None, 'layer': 'SQL', 'file_id': 27, 'line_start': 30, 'line_end': 61, 'hash_value': '6af2799bad1540b1a14ed96acc05b147', 'has_error': 'N', 'error_message': None, 'del_yn': 'N'}
2025-09-13 01:00:13,306 - SourceAnalyzer - DEBUG - logger.py:64 - Components upsert 시작: selectUsersByAdvancedCondition (SQL_SELECT)
2025-09-13 01:00:13,306 - SourceAnalyzer - DEBUG - logger.py:64 - 기존 레코드 확인 쿼리: 
                    SELECT component_id FROM components 
                    WHERE project_id = ? AND component_name = ? AND file_id = ?
                    
2025-09-13 01:00:13,306 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 파라미터: (1, 'selectUsersByAdvancedCondition', 27)
2025-09-13 01:00:13,306 - SourceAnalyzer - DEBUG - logger.py:64 - 기존 레코드 조회 결과: None
2025-09-13 01:00:13,306 - SourceAnalyzer - DEBUG - logger.py:64 - INSERT 쿼리: 
                        INSERT INTO components (project_id, component_type, component_name, parent_id, layer, file_id, line_start, line_end, hash_value, has_error, error_message, del_yn)
                        VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
                        
2025-09-13 01:00:13,306 - SourceAnalyzer - DEBUG - logger.py:64 - INSERT 파라미터: (1, 'SQL_SELECT', 'selectUsersByAdvancedCondition', None, 'SQL', 27, 30, 61, '6af2799bad1540b1a14ed96acc05b147', 'N', None, 'N')
2025-09-13 01:00:13,306 - SourceAnalyzer - DEBUG - logger.py:64 - INSERT 실행 완료: component_id = 3090
2025-09-13 01:00:13,306 - SourceAnalyzer - DEBUG - logger.py:64 - 컴포넌트 저장 완료: selectUsersByAdvancedCondition (ID: 3090)
2025-09-13 01:00:13,306 - SourceAnalyzer - DEBUG - logger.py:64 - 컴포넌트 저장 결과: component_id = 3090
2025-09-13 01:00:13,306 - SourceAnalyzer - DEBUG - logger.py:64 - SQL Content 저장 시작: selectUsersByAdvancedCondition (component_id: 3090)
2025-09-13 01:00:13,306 - SourceAnalyzer - DEBUG - logger.py:64 - SQL Content 상대경로: src/main/resources/mybatis/mapper
2025-09-13 01:00:13,306 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 실행 성공: SELECT project_id FROM projects WHERE project_id =...
2025-09-13 01:00:13,306 - SourceAnalyzer - DEBUG - logger.py:64 - 업데이트 쿼리 실행 성공: 
            INSERT OR REPLACE INTO sql_contents (..., 영향받은 행: 1
2025-09-13 01:00:13,306 - SourceAnalyzer - DEBUG - logger.py:64 - SQL 내용 저장 완료: selectUsersByAdvancedCondition - src/main/resources/mybatis/mapper
2025-09-13 01:00:13,306 - SourceAnalyzer - DEBUG - logger.py:64 - SQL Content 저장 완료: selectUsersByAdvancedCondition - src/main/resources/mybatis/mapper
2025-09-13 01:00:13,306 - SourceAnalyzer - DEBUG - logger.py:64 - SQL 쿼리 처리 완료: selectUsersByAdvancedCondition
2025-09-13 01:00:13,306 - SourceAnalyzer - DEBUG - logger.py:64 - SQL 쿼리 처리 루프 시작: 4/20
2025-09-13 01:00:13,307 - SourceAnalyzer - DEBUG - logger.py:64 - SQL 쿼리 처리 시작: selectUsersByType (select)
2025-09-13 01:00:13,307 - SourceAnalyzer - DEBUG - logger.py:64 - GET XML ID 조회: D:\Analyzer\CreateMetaDb\projects\sampleSrc\src\main\resources\mybatis\mapper\UserMapper.xml -> src/main/resources/mybatis/mapper/UserMapper.xml
2025-09-13 01:00:13,307 - SourceAnalyzer - DEBUG - logger.py:64 - 메모리 매핑 테이블 키들: ['src/com/example/dynamicquery/UserMapper.xml', 'src/main/resources/mybatis/mapper/ImplicitJoinMapper.xml', 'src/main/resources/mybatis/mapper/ImplicitJoinTestMapper.xml', 'src/main/resources/mybatis/mapper/MixedErrorMapper.xml', 'src/main/resources/mybatis/mapper/ProductMapper.xml', 'src/main/resources/mybatis/mapper/UserMapper.xml']
2025-09-13 01:00:13,307 - SourceAnalyzer - DEBUG - logger.py:64 - 메모리에서 file_id 조회 성공: src/main/resources/mybatis/mapper/UserMapper.xml -> 27
2025-09-13 01:00:13,307 - SourceAnalyzer - DEBUG - logger.py:64 - 파일 ID 조회 성공: 27
2025-09-13 01:00:13,307 - SourceAnalyzer - DEBUG - logger.py:64 - 컴포넌트 저장 시도: selectUsersByType (select) -> SQL_SELECT
2025-09-13 01:00:13,307 - SourceAnalyzer - DEBUG - logger.py:64 - Upsert 실행: components
2025-09-13 01:00:13,307 - SourceAnalyzer - DEBUG - logger.py:64 - 데이터: {'project_id': 1, 'component_type': 'SQL_SELECT', 'component_name': 'selectUsersByType', 'parent_id': None, 'layer': 'SQL', 'file_id': 27, 'line_start': 61, 'line_end': 68, 'hash_value': '49025c0208d5a42a656142f202517b06', 'has_error': 'N', 'error_message': None, 'del_yn': 'N'}
2025-09-13 01:00:13,307 - SourceAnalyzer - DEBUG - logger.py:64 - Components upsert 시작: selectUsersByType (SQL_SELECT)
2025-09-13 01:00:13,307 - SourceAnalyzer - DEBUG - logger.py:64 - 기존 레코드 확인 쿼리: 
                    SELECT component_id FROM components 
                    WHERE project_id = ? AND component_name = ? AND file_id = ?
                    
2025-09-13 01:00:13,307 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 파라미터: (1, 'selectUsersByType', 27)
2025-09-13 01:00:13,307 - SourceAnalyzer - DEBUG - logger.py:64 - 기존 레코드 조회 결과: None
2025-09-13 01:00:13,307 - SourceAnalyzer - DEBUG - logger.py:64 - INSERT 쿼리: 
                        INSERT INTO components (project_id, component_type, component_name, parent_id, layer, file_id, line_start, line_end, hash_value, has_error, error_message, del_yn)
                        VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
                        
2025-09-13 01:00:13,307 - SourceAnalyzer - DEBUG - logger.py:64 - INSERT 파라미터: (1, 'SQL_SELECT', 'selectUsersByType', None, 'SQL', 27, 61, 68, '49025c0208d5a42a656142f202517b06', 'N', None, 'N')
2025-09-13 01:00:13,307 - SourceAnalyzer - DEBUG - logger.py:64 - INSERT 실행 완료: component_id = 3091
2025-09-13 01:00:13,307 - SourceAnalyzer - DEBUG - logger.py:64 - 컴포넌트 저장 완료: selectUsersByType (ID: 3091)
2025-09-13 01:00:13,307 - SourceAnalyzer - DEBUG - logger.py:64 - 컴포넌트 저장 결과: component_id = 3091
2025-09-13 01:00:13,307 - SourceAnalyzer - DEBUG - logger.py:64 - SQL Content 저장 시작: selectUsersByType (component_id: 3091)
2025-09-13 01:00:13,307 - SourceAnalyzer - DEBUG - logger.py:64 - SQL Content 상대경로: src/main/resources/mybatis/mapper
2025-09-13 01:00:13,307 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 실행 성공: SELECT project_id FROM projects WHERE project_id =...
2025-09-13 01:00:13,307 - SourceAnalyzer - DEBUG - logger.py:64 - 업데이트 쿼리 실행 성공: 
            INSERT OR REPLACE INTO sql_contents (..., 영향받은 행: 1
2025-09-13 01:00:13,307 - SourceAnalyzer - DEBUG - logger.py:64 - SQL 내용 저장 완료: selectUsersByType - src/main/resources/mybatis/mapper
2025-09-13 01:00:13,308 - SourceAnalyzer - DEBUG - logger.py:64 - SQL Content 저장 완료: selectUsersByType - src/main/resources/mybatis/mapper
2025-09-13 01:00:13,308 - SourceAnalyzer - DEBUG - logger.py:64 - SQL 쿼리 처리 완료: selectUsersByType
2025-09-13 01:00:13,308 - SourceAnalyzer - DEBUG - logger.py:64 - SQL 쿼리 처리 루프 시작: 5/20
2025-09-13 01:00:13,308 - SourceAnalyzer - DEBUG - logger.py:64 - SQL 쿼리 처리 시작: updateUserDynamic (update)
2025-09-13 01:00:13,308 - SourceAnalyzer - DEBUG - logger.py:64 - GET XML ID 조회: D:\Analyzer\CreateMetaDb\projects\sampleSrc\src\main\resources\mybatis\mapper\UserMapper.xml -> src/main/resources/mybatis/mapper/UserMapper.xml
2025-09-13 01:00:13,308 - SourceAnalyzer - DEBUG - logger.py:64 - 메모리 매핑 테이블 키들: ['src/com/example/dynamicquery/UserMapper.xml', 'src/main/resources/mybatis/mapper/ImplicitJoinMapper.xml', 'src/main/resources/mybatis/mapper/ImplicitJoinTestMapper.xml', 'src/main/resources/mybatis/mapper/MixedErrorMapper.xml', 'src/main/resources/mybatis/mapper/ProductMapper.xml', 'src/main/resources/mybatis/mapper/UserMapper.xml']
2025-09-13 01:00:13,308 - SourceAnalyzer - DEBUG - logger.py:64 - 메모리에서 file_id 조회 성공: src/main/resources/mybatis/mapper/UserMapper.xml -> 27
2025-09-13 01:00:13,308 - SourceAnalyzer - DEBUG - logger.py:64 - 파일 ID 조회 성공: 27
2025-09-13 01:00:13,308 - SourceAnalyzer - DEBUG - logger.py:64 - 컴포넌트 저장 시도: updateUserDynamic (update) -> SQL_UPDATE
2025-09-13 01:00:13,308 - SourceAnalyzer - DEBUG - logger.py:64 - Upsert 실행: components
2025-09-13 01:00:13,308 - SourceAnalyzer - DEBUG - logger.py:64 - 데이터: {'project_id': 1, 'component_type': 'SQL_UPDATE', 'component_name': 'updateUserDynamic', 'parent_id': None, 'layer': 'SQL', 'file_id': 27, 'line_start': 68, 'line_end': 98, 'hash_value': '559f343ca71e93650b21181af3532c24', 'has_error': 'N', 'error_message': None, 'del_yn': 'N'}
2025-09-13 01:00:13,308 - SourceAnalyzer - DEBUG - logger.py:64 - Components upsert 시작: updateUserDynamic (SQL_UPDATE)
2025-09-13 01:00:13,308 - SourceAnalyzer - DEBUG - logger.py:64 - 기존 레코드 확인 쿼리: 
                    SELECT component_id FROM components 
                    WHERE project_id = ? AND component_name = ? AND file_id = ?
                    
2025-09-13 01:00:13,308 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 파라미터: (1, 'updateUserDynamic', 27)
2025-09-13 01:00:13,308 - SourceAnalyzer - DEBUG - logger.py:64 - 기존 레코드 조회 결과: None
2025-09-13 01:00:13,308 - SourceAnalyzer - DEBUG - logger.py:64 - INSERT 쿼리: 
                        INSERT INTO components (project_id, component_type, component_name, parent_id, layer, file_id, line_start, line_end, hash_value, has_error, error_message, del_yn)
                        VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
                        
2025-09-13 01:00:13,308 - SourceAnalyzer - DEBUG - logger.py:64 - INSERT 파라미터: (1, 'SQL_UPDATE', 'updateUserDynamic', None, 'SQL', 27, 68, 98, '559f343ca71e93650b21181af3532c24', 'N', None, 'N')
2025-09-13 01:00:13,308 - SourceAnalyzer - DEBUG - logger.py:64 - INSERT 실행 완료: component_id = 3092
2025-09-13 01:00:13,308 - SourceAnalyzer - DEBUG - logger.py:64 - 컴포넌트 저장 완료: updateUserDynamic (ID: 3092)
2025-09-13 01:00:13,308 - SourceAnalyzer - DEBUG - logger.py:64 - 컴포넌트 저장 결과: component_id = 3092
2025-09-13 01:00:13,308 - SourceAnalyzer - DEBUG - logger.py:64 - SQL Content 저장 시작: updateUserDynamic (component_id: 3092)
2025-09-13 01:00:13,308 - SourceAnalyzer - DEBUG - logger.py:64 - SQL Content 상대경로: src/main/resources/mybatis/mapper
2025-09-13 01:00:13,308 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 실행 성공: SELECT project_id FROM projects WHERE project_id =...
2025-09-13 01:00:13,308 - SourceAnalyzer - DEBUG - logger.py:64 - 업데이트 쿼리 실행 성공: 
            INSERT OR REPLACE INTO sql_contents (..., 영향받은 행: 1
2025-09-13 01:00:13,308 - SourceAnalyzer - DEBUG - logger.py:64 - SQL 내용 저장 완료: updateUserDynamic - src/main/resources/mybatis/mapper
2025-09-13 01:00:13,309 - SourceAnalyzer - DEBUG - logger.py:64 - SQL Content 저장 완료: updateUserDynamic - src/main/resources/mybatis/mapper
2025-09-13 01:00:13,309 - SourceAnalyzer - DEBUG - logger.py:64 - SQL 쿼리 처리 완료: updateUserDynamic
2025-09-13 01:00:13,309 - SourceAnalyzer - DEBUG - logger.py:64 - SQL 쿼리 처리 루프 시작: 6/20
2025-09-13 01:00:13,309 - SourceAnalyzer - DEBUG - logger.py:64 - SQL 쿼리 처리 시작: insertUserDynamic (insert)
2025-09-13 01:00:13,309 - SourceAnalyzer - DEBUG - logger.py:64 - GET XML ID 조회: D:\Analyzer\CreateMetaDb\projects\sampleSrc\src\main\resources\mybatis\mapper\UserMapper.xml -> src/main/resources/mybatis/mapper/UserMapper.xml
2025-09-13 01:00:13,309 - SourceAnalyzer - DEBUG - logger.py:64 - 메모리 매핑 테이블 키들: ['src/com/example/dynamicquery/UserMapper.xml', 'src/main/resources/mybatis/mapper/ImplicitJoinMapper.xml', 'src/main/resources/mybatis/mapper/ImplicitJoinTestMapper.xml', 'src/main/resources/mybatis/mapper/MixedErrorMapper.xml', 'src/main/resources/mybatis/mapper/ProductMapper.xml', 'src/main/resources/mybatis/mapper/UserMapper.xml']
2025-09-13 01:00:13,309 - SourceAnalyzer - DEBUG - logger.py:64 - 메모리에서 file_id 조회 성공: src/main/resources/mybatis/mapper/UserMapper.xml -> 27
2025-09-13 01:00:13,309 - SourceAnalyzer - DEBUG - logger.py:64 - 파일 ID 조회 성공: 27
2025-09-13 01:00:13,309 - SourceAnalyzer - DEBUG - logger.py:64 - 컴포넌트 저장 시도: insertUserDynamic (insert) -> SQL_INSERT
2025-09-13 01:00:13,309 - SourceAnalyzer - DEBUG - logger.py:64 - Upsert 실행: components
2025-09-13 01:00:13,309 - SourceAnalyzer - DEBUG - logger.py:64 - 데이터: {'project_id': 1, 'component_type': 'SQL_INSERT', 'component_name': 'insertUserDynamic', 'parent_id': None, 'layer': 'SQL', 'file_id': 27, 'line_start': 98, 'line_end': 131, 'hash_value': '385256eb2b5dd84929fa3b380ed94d52', 'has_error': 'N', 'error_message': None, 'del_yn': 'N'}
2025-09-13 01:00:13,309 - SourceAnalyzer - DEBUG - logger.py:64 - Components upsert 시작: insertUserDynamic (SQL_INSERT)
2025-09-13 01:00:13,309 - SourceAnalyzer - DEBUG - logger.py:64 - 기존 레코드 확인 쿼리: 
                    SELECT component_id FROM components 
                    WHERE project_id = ? AND component_name = ? AND file_id = ?
                    
2025-09-13 01:00:13,309 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 파라미터: (1, 'insertUserDynamic', 27)
2025-09-13 01:00:13,309 - SourceAnalyzer - DEBUG - logger.py:64 - 기존 레코드 조회 결과: None
2025-09-13 01:00:13,309 - SourceAnalyzer - DEBUG - logger.py:64 - INSERT 쿼리: 
                        INSERT INTO components (project_id, component_type, component_name, parent_id, layer, file_id, line_start, line_end, hash_value, has_error, error_message, del_yn)
                        VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
                        
2025-09-13 01:00:13,309 - SourceAnalyzer - DEBUG - logger.py:64 - INSERT 파라미터: (1, 'SQL_INSERT', 'insertUserDynamic', None, 'SQL', 27, 98, 131, '385256eb2b5dd84929fa3b380ed94d52', 'N', None, 'N')
2025-09-13 01:00:13,309 - SourceAnalyzer - DEBUG - logger.py:64 - INSERT 실행 완료: component_id = 3093
2025-09-13 01:00:13,309 - SourceAnalyzer - DEBUG - logger.py:64 - 컴포넌트 저장 완료: insertUserDynamic (ID: 3093)
2025-09-13 01:00:13,309 - SourceAnalyzer - DEBUG - logger.py:64 - 컴포넌트 저장 결과: component_id = 3093
2025-09-13 01:00:13,309 - SourceAnalyzer - DEBUG - logger.py:64 - SQL Content 저장 시작: insertUserDynamic (component_id: 3093)
2025-09-13 01:00:13,309 - SourceAnalyzer - DEBUG - logger.py:64 - SQL Content 상대경로: src/main/resources/mybatis/mapper
2025-09-13 01:00:13,309 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 실행 성공: SELECT project_id FROM projects WHERE project_id =...
2025-09-13 01:00:13,310 - SourceAnalyzer - DEBUG - logger.py:64 - 업데이트 쿼리 실행 성공: 
            INSERT OR REPLACE INTO sql_contents (..., 영향받은 행: 1
2025-09-13 01:00:13,310 - SourceAnalyzer - DEBUG - logger.py:64 - SQL 내용 저장 완료: insertUserDynamic - src/main/resources/mybatis/mapper
2025-09-13 01:00:13,310 - SourceAnalyzer - DEBUG - logger.py:64 - SQL Content 저장 완료: insertUserDynamic - src/main/resources/mybatis/mapper
2025-09-13 01:00:13,310 - SourceAnalyzer - DEBUG - logger.py:64 - SQL 쿼리 처리 완료: insertUserDynamic
2025-09-13 01:00:13,310 - SourceAnalyzer - DEBUG - logger.py:64 - SQL 쿼리 처리 루프 시작: 7/20
2025-09-13 01:00:13,310 - SourceAnalyzer - DEBUG - logger.py:64 - SQL 쿼리 처리 시작: deleteUsersByCondition (delete)
2025-09-13 01:00:13,310 - SourceAnalyzer - DEBUG - logger.py:64 - GET XML ID 조회: D:\Analyzer\CreateMetaDb\projects\sampleSrc\src\main\resources\mybatis\mapper\UserMapper.xml -> src/main/resources/mybatis/mapper/UserMapper.xml
2025-09-13 01:00:13,310 - SourceAnalyzer - DEBUG - logger.py:64 - 메모리 매핑 테이블 키들: ['src/com/example/dynamicquery/UserMapper.xml', 'src/main/resources/mybatis/mapper/ImplicitJoinMapper.xml', 'src/main/resources/mybatis/mapper/ImplicitJoinTestMapper.xml', 'src/main/resources/mybatis/mapper/MixedErrorMapper.xml', 'src/main/resources/mybatis/mapper/ProductMapper.xml', 'src/main/resources/mybatis/mapper/UserMapper.xml']
2025-09-13 01:00:13,310 - SourceAnalyzer - DEBUG - logger.py:64 - 메모리에서 file_id 조회 성공: src/main/resources/mybatis/mapper/UserMapper.xml -> 27
2025-09-13 01:00:13,310 - SourceAnalyzer - DEBUG - logger.py:64 - 파일 ID 조회 성공: 27
2025-09-13 01:00:13,310 - SourceAnalyzer - DEBUG - logger.py:64 - 컴포넌트 저장 시도: deleteUsersByCondition (delete) -> SQL_DELETE
2025-09-13 01:00:13,310 - SourceAnalyzer - DEBUG - logger.py:64 - Upsert 실행: components
2025-09-13 01:00:13,310 - SourceAnalyzer - DEBUG - logger.py:64 - 데이터: {'project_id': 1, 'component_type': 'SQL_DELETE', 'component_name': 'deleteUsersByCondition', 'parent_id': None, 'layer': 'SQL', 'file_id': 27, 'line_start': 131, 'line_end': 147, 'hash_value': '162f3162cdde1e0de53a9a96fdc4c076', 'has_error': 'N', 'error_message': None, 'del_yn': 'N'}
2025-09-13 01:00:13,310 - SourceAnalyzer - DEBUG - logger.py:64 - Components upsert 시작: deleteUsersByCondition (SQL_DELETE)
2025-09-13 01:00:13,310 - SourceAnalyzer - DEBUG - logger.py:64 - 기존 레코드 확인 쿼리: 
                    SELECT component_id FROM components 
                    WHERE project_id = ? AND component_name = ? AND file_id = ?
                    
2025-09-13 01:00:13,310 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 파라미터: (1, 'deleteUsersByCondition', 27)
2025-09-13 01:00:13,310 - SourceAnalyzer - DEBUG - logger.py:64 - 기존 레코드 조회 결과: None
2025-09-13 01:00:13,310 - SourceAnalyzer - DEBUG - logger.py:64 - INSERT 쿼리: 
                        INSERT INTO components (project_id, component_type, component_name, parent_id, layer, file_id, line_start, line_end, hash_value, has_error, error_message, del_yn)
                        VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
                        
2025-09-13 01:00:13,310 - SourceAnalyzer - DEBUG - logger.py:64 - INSERT 파라미터: (1, 'SQL_DELETE', 'deleteUsersByCondition', None, 'SQL', 27, 131, 147, '162f3162cdde1e0de53a9a96fdc4c076', 'N', None, 'N')
2025-09-13 01:00:13,310 - SourceAnalyzer - DEBUG - logger.py:64 - INSERT 실행 완료: component_id = 3094
2025-09-13 01:00:13,310 - SourceAnalyzer - DEBUG - logger.py:64 - 컴포넌트 저장 완료: deleteUsersByCondition (ID: 3094)
2025-09-13 01:00:13,310 - SourceAnalyzer - DEBUG - logger.py:64 - 컴포넌트 저장 결과: component_id = 3094
2025-09-13 01:00:13,310 - SourceAnalyzer - DEBUG - logger.py:64 - SQL Content 저장 시작: deleteUsersByCondition (component_id: 3094)
2025-09-13 01:00:13,310 - SourceAnalyzer - DEBUG - logger.py:64 - SQL Content 상대경로: src/main/resources/mybatis/mapper
2025-09-13 01:00:13,310 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 실행 성공: SELECT project_id FROM projects WHERE project_id =...
2025-09-13 01:00:13,311 - SourceAnalyzer - DEBUG - logger.py:64 - 업데이트 쿼리 실행 성공: 
            INSERT OR REPLACE INTO sql_contents (..., 영향받은 행: 1
2025-09-13 01:00:13,311 - SourceAnalyzer - DEBUG - logger.py:64 - SQL 내용 저장 완료: deleteUsersByCondition - src/main/resources/mybatis/mapper
2025-09-13 01:00:13,311 - SourceAnalyzer - DEBUG - logger.py:64 - SQL Content 저장 완료: deleteUsersByCondition - src/main/resources/mybatis/mapper
2025-09-13 01:00:13,311 - SourceAnalyzer - DEBUG - logger.py:64 - SQL 쿼리 처리 완료: deleteUsersByCondition
2025-09-13 01:00:13,311 - SourceAnalyzer - DEBUG - logger.py:64 - SQL 쿼리 처리 루프 시작: 8/20
2025-09-13 01:00:13,311 - SourceAnalyzer - DEBUG - logger.py:64 - SQL 쿼리 처리 시작: countUsersByCondition (select)
2025-09-13 01:00:13,311 - SourceAnalyzer - DEBUG - logger.py:64 - GET XML ID 조회: D:\Analyzer\CreateMetaDb\projects\sampleSrc\src\main\resources\mybatis\mapper\UserMapper.xml -> src/main/resources/mybatis/mapper/UserMapper.xml
2025-09-13 01:00:13,311 - SourceAnalyzer - DEBUG - logger.py:64 - 메모리 매핑 테이블 키들: ['src/com/example/dynamicquery/UserMapper.xml', 'src/main/resources/mybatis/mapper/ImplicitJoinMapper.xml', 'src/main/resources/mybatis/mapper/ImplicitJoinTestMapper.xml', 'src/main/resources/mybatis/mapper/MixedErrorMapper.xml', 'src/main/resources/mybatis/mapper/ProductMapper.xml', 'src/main/resources/mybatis/mapper/UserMapper.xml']
2025-09-13 01:00:13,311 - SourceAnalyzer - DEBUG - logger.py:64 - 메모리에서 file_id 조회 성공: src/main/resources/mybatis/mapper/UserMapper.xml -> 27
2025-09-13 01:00:13,311 - SourceAnalyzer - DEBUG - logger.py:64 - 파일 ID 조회 성공: 27
2025-09-13 01:00:13,311 - SourceAnalyzer - DEBUG - logger.py:64 - 컴포넌트 저장 시도: countUsersByCondition (select) -> SQL_SELECT
2025-09-13 01:00:13,311 - SourceAnalyzer - DEBUG - logger.py:64 - Upsert 실행: components
2025-09-13 01:00:13,311 - SourceAnalyzer - DEBUG - logger.py:64 - 데이터: {'project_id': 1, 'component_type': 'SQL_SELECT', 'component_name': 'countUsersByCondition', 'parent_id': None, 'layer': 'SQL', 'file_id': 27, 'line_start': 147, 'line_end': 167, 'hash_value': 'd07155c664af96cf00184477b8836e5e', 'has_error': 'N', 'error_message': None, 'del_yn': 'N'}
2025-09-13 01:00:13,311 - SourceAnalyzer - DEBUG - logger.py:64 - Components upsert 시작: countUsersByCondition (SQL_SELECT)
2025-09-13 01:00:13,311 - SourceAnalyzer - DEBUG - logger.py:64 - 기존 레코드 확인 쿼리: 
                    SELECT component_id FROM components 
                    WHERE project_id = ? AND component_name = ? AND file_id = ?
                    
2025-09-13 01:00:13,311 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 파라미터: (1, 'countUsersByCondition', 27)
2025-09-13 01:00:13,311 - SourceAnalyzer - DEBUG - logger.py:64 - 기존 레코드 조회 결과: None
2025-09-13 01:00:13,311 - SourceAnalyzer - DEBUG - logger.py:64 - INSERT 쿼리: 
                        INSERT INTO components (project_id, component_type, component_name, parent_id, layer, file_id, line_start, line_end, hash_value, has_error, error_message, del_yn)
                        VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
                        
2025-09-13 01:00:13,311 - SourceAnalyzer - DEBUG - logger.py:64 - INSERT 파라미터: (1, 'SQL_SELECT', 'countUsersByCondition', None, 'SQL', 27, 147, 167, 'd07155c664af96cf00184477b8836e5e', 'N', None, 'N')
2025-09-13 01:00:13,311 - SourceAnalyzer - DEBUG - logger.py:64 - INSERT 실행 완료: component_id = 3095
2025-09-13 01:00:13,311 - SourceAnalyzer - DEBUG - logger.py:64 - 컴포넌트 저장 완료: countUsersByCondition (ID: 3095)
2025-09-13 01:00:13,311 - SourceAnalyzer - DEBUG - logger.py:64 - 컴포넌트 저장 결과: component_id = 3095
2025-09-13 01:00:13,311 - SourceAnalyzer - DEBUG - logger.py:64 - SQL Content 저장 시작: countUsersByCondition (component_id: 3095)
2025-09-13 01:00:13,311 - SourceAnalyzer - DEBUG - logger.py:64 - SQL Content 상대경로: src/main/resources/mybatis/mapper
2025-09-13 01:00:13,311 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 실행 성공: SELECT project_id FROM projects WHERE project_id =...
2025-09-13 01:00:13,312 - SourceAnalyzer - DEBUG - logger.py:64 - 업데이트 쿼리 실행 성공: 
            INSERT OR REPLACE INTO sql_contents (..., 영향받은 행: 1
2025-09-13 01:00:13,312 - SourceAnalyzer - DEBUG - logger.py:64 - SQL 내용 저장 완료: countUsersByCondition - src/main/resources/mybatis/mapper
2025-09-13 01:00:13,312 - SourceAnalyzer - DEBUG - logger.py:64 - SQL Content 저장 완료: countUsersByCondition - src/main/resources/mybatis/mapper
2025-09-13 01:00:13,312 - SourceAnalyzer - DEBUG - logger.py:64 - SQL 쿼리 처리 완료: countUsersByCondition
2025-09-13 01:00:13,312 - SourceAnalyzer - DEBUG - logger.py:64 - SQL 쿼리 처리 루프 시작: 9/20
2025-09-13 01:00:13,312 - SourceAnalyzer - DEBUG - logger.py:64 - SQL 쿼리 처리 시작: getUserStatistics (select)
2025-09-13 01:00:13,312 - SourceAnalyzer - DEBUG - logger.py:64 - GET XML ID 조회: D:\Analyzer\CreateMetaDb\projects\sampleSrc\src\main\resources\mybatis\mapper\UserMapper.xml -> src/main/resources/mybatis/mapper/UserMapper.xml
2025-09-13 01:00:13,312 - SourceAnalyzer - DEBUG - logger.py:64 - 메모리 매핑 테이블 키들: ['src/com/example/dynamicquery/UserMapper.xml', 'src/main/resources/mybatis/mapper/ImplicitJoinMapper.xml', 'src/main/resources/mybatis/mapper/ImplicitJoinTestMapper.xml', 'src/main/resources/mybatis/mapper/MixedErrorMapper.xml', 'src/main/resources/mybatis/mapper/ProductMapper.xml', 'src/main/resources/mybatis/mapper/UserMapper.xml']
2025-09-13 01:00:13,312 - SourceAnalyzer - DEBUG - logger.py:64 - 메모리에서 file_id 조회 성공: src/main/resources/mybatis/mapper/UserMapper.xml -> 27
2025-09-13 01:00:13,312 - SourceAnalyzer - DEBUG - logger.py:64 - 파일 ID 조회 성공: 27
2025-09-13 01:00:13,312 - SourceAnalyzer - DEBUG - logger.py:64 - 컴포넌트 저장 시도: getUserStatistics (select) -> SQL_SELECT
2025-09-13 01:00:13,312 - SourceAnalyzer - DEBUG - logger.py:64 - Upsert 실행: components
2025-09-13 01:00:13,312 - SourceAnalyzer - DEBUG - logger.py:64 - 데이터: {'project_id': 1, 'component_type': 'SQL_SELECT', 'component_name': 'getUserStatistics', 'parent_id': None, 'layer': 'SQL', 'file_id': 27, 'line_start': 167, 'line_end': 197, 'hash_value': '1582228490ddce70a43a862c3748ec00', 'has_error': 'N', 'error_message': None, 'del_yn': 'N'}
2025-09-13 01:00:13,312 - SourceAnalyzer - DEBUG - logger.py:64 - Components upsert 시작: getUserStatistics (SQL_SELECT)
2025-09-13 01:00:13,312 - SourceAnalyzer - DEBUG - logger.py:64 - 기존 레코드 확인 쿼리: 
                    SELECT component_id FROM components 
                    WHERE project_id = ? AND component_name = ? AND file_id = ?
                    
2025-09-13 01:00:13,312 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 파라미터: (1, 'getUserStatistics', 27)
2025-09-13 01:00:13,312 - SourceAnalyzer - DEBUG - logger.py:64 - 기존 레코드 조회 결과: None
2025-09-13 01:00:13,312 - SourceAnalyzer - DEBUG - logger.py:64 - INSERT 쿼리: 
                        INSERT INTO components (project_id, component_type, component_name, parent_id, layer, file_id, line_start, line_end, hash_value, has_error, error_message, del_yn)
                        VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
                        
2025-09-13 01:00:13,312 - SourceAnalyzer - DEBUG - logger.py:64 - INSERT 파라미터: (1, 'SQL_SELECT', 'getUserStatistics', None, 'SQL', 27, 167, 197, '1582228490ddce70a43a862c3748ec00', 'N', None, 'N')
2025-09-13 01:00:13,312 - SourceAnalyzer - DEBUG - logger.py:64 - INSERT 실행 완료: component_id = 3096
2025-09-13 01:00:13,312 - SourceAnalyzer - DEBUG - logger.py:64 - 컴포넌트 저장 완료: getUserStatistics (ID: 3096)
2025-09-13 01:00:13,312 - SourceAnalyzer - DEBUG - logger.py:64 - 컴포넌트 저장 결과: component_id = 3096
2025-09-13 01:00:13,312 - SourceAnalyzer - DEBUG - logger.py:64 - SQL Content 저장 시작: getUserStatistics (component_id: 3096)
2025-09-13 01:00:13,312 - SourceAnalyzer - DEBUG - logger.py:64 - SQL Content 상대경로: src/main/resources/mybatis/mapper
2025-09-13 01:00:13,312 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 실행 성공: SELECT project_id FROM projects WHERE project_id =...
2025-09-13 01:00:13,313 - SourceAnalyzer - DEBUG - logger.py:64 - 업데이트 쿼리 실행 성공: 
            INSERT OR REPLACE INTO sql_contents (..., 영향받은 행: 1
2025-09-13 01:00:13,313 - SourceAnalyzer - DEBUG - logger.py:64 - SQL 내용 저장 완료: getUserStatistics - src/main/resources/mybatis/mapper
2025-09-13 01:00:13,313 - SourceAnalyzer - DEBUG - logger.py:64 - SQL Content 저장 완료: getUserStatistics - src/main/resources/mybatis/mapper
2025-09-13 01:00:13,313 - SourceAnalyzer - DEBUG - logger.py:64 - SQL 쿼리 처리 완료: getUserStatistics
2025-09-13 01:00:13,313 - SourceAnalyzer - DEBUG - logger.py:64 - SQL 쿼리 처리 루프 시작: 10/20
2025-09-13 01:00:13,313 - SourceAnalyzer - DEBUG - logger.py:64 - SQL 쿼리 처리 시작: getUserAgeDistribution (select)
2025-09-13 01:00:13,313 - SourceAnalyzer - DEBUG - logger.py:64 - GET XML ID 조회: D:\Analyzer\CreateMetaDb\projects\sampleSrc\src\main\resources\mybatis\mapper\UserMapper.xml -> src/main/resources/mybatis/mapper/UserMapper.xml
2025-09-13 01:00:13,313 - SourceAnalyzer - DEBUG - logger.py:64 - 메모리 매핑 테이블 키들: ['src/com/example/dynamicquery/UserMapper.xml', 'src/main/resources/mybatis/mapper/ImplicitJoinMapper.xml', 'src/main/resources/mybatis/mapper/ImplicitJoinTestMapper.xml', 'src/main/resources/mybatis/mapper/MixedErrorMapper.xml', 'src/main/resources/mybatis/mapper/ProductMapper.xml', 'src/main/resources/mybatis/mapper/UserMapper.xml']
2025-09-13 01:00:13,313 - SourceAnalyzer - DEBUG - logger.py:64 - 메모리에서 file_id 조회 성공: src/main/resources/mybatis/mapper/UserMapper.xml -> 27
2025-09-13 01:00:13,313 - SourceAnalyzer - DEBUG - logger.py:64 - 파일 ID 조회 성공: 27
2025-09-13 01:00:13,313 - SourceAnalyzer - DEBUG - logger.py:64 - 컴포넌트 저장 시도: getUserAgeDistribution (select) -> SQL_SELECT
2025-09-13 01:00:13,313 - SourceAnalyzer - DEBUG - logger.py:64 - Upsert 실행: components
2025-09-13 01:00:13,313 - SourceAnalyzer - DEBUG - logger.py:64 - 데이터: {'project_id': 1, 'component_type': 'SQL_SELECT', 'component_name': 'getUserAgeDistribution', 'parent_id': None, 'layer': 'SQL', 'file_id': 27, 'line_start': 197, 'line_end': 237, 'hash_value': 'c921864706c8e8438e31b90392f97a96', 'has_error': 'N', 'error_message': None, 'del_yn': 'N'}
2025-09-13 01:00:13,313 - SourceAnalyzer - DEBUG - logger.py:64 - Components upsert 시작: getUserAgeDistribution (SQL_SELECT)
2025-09-13 01:00:13,313 - SourceAnalyzer - DEBUG - logger.py:64 - 기존 레코드 확인 쿼리: 
                    SELECT component_id FROM components 
                    WHERE project_id = ? AND component_name = ? AND file_id = ?
                    
2025-09-13 01:00:13,313 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 파라미터: (1, 'getUserAgeDistribution', 27)
2025-09-13 01:00:13,314 - SourceAnalyzer - DEBUG - logger.py:64 - 기존 레코드 조회 결과: None
2025-09-13 01:00:13,314 - SourceAnalyzer - DEBUG - logger.py:64 - INSERT 쿼리: 
                        INSERT INTO components (project_id, component_type, component_name, parent_id, layer, file_id, line_start, line_end, hash_value, has_error, error_message, del_yn)
                        VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
                        
2025-09-13 01:00:13,314 - SourceAnalyzer - DEBUG - logger.py:64 - INSERT 파라미터: (1, 'SQL_SELECT', 'getUserAgeDistribution', None, 'SQL', 27, 197, 237, 'c921864706c8e8438e31b90392f97a96', 'N', None, 'N')
2025-09-13 01:00:13,314 - SourceAnalyzer - DEBUG - logger.py:64 - INSERT 실행 완료: component_id = 3097
2025-09-13 01:00:13,314 - SourceAnalyzer - DEBUG - logger.py:64 - 컴포넌트 저장 완료: getUserAgeDistribution (ID: 3097)
2025-09-13 01:00:13,314 - SourceAnalyzer - DEBUG - logger.py:64 - 컴포넌트 저장 결과: component_id = 3097
2025-09-13 01:00:13,314 - SourceAnalyzer - DEBUG - logger.py:64 - SQL Content 저장 시작: getUserAgeDistribution (component_id: 3097)
2025-09-13 01:00:13,314 - SourceAnalyzer - DEBUG - logger.py:64 - SQL Content 상대경로: src/main/resources/mybatis/mapper
2025-09-13 01:00:13,314 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 실행 성공: SELECT project_id FROM projects WHERE project_id =...
2025-09-13 01:00:13,314 - SourceAnalyzer - DEBUG - logger.py:64 - 업데이트 쿼리 실행 성공: 
            INSERT OR REPLACE INTO sql_contents (..., 영향받은 행: 1
2025-09-13 01:00:13,314 - SourceAnalyzer - DEBUG - logger.py:64 - SQL 내용 저장 완료: getUserAgeDistribution - src/main/resources/mybatis/mapper
2025-09-13 01:00:13,314 - SourceAnalyzer - DEBUG - logger.py:64 - SQL Content 저장 완료: getUserAgeDistribution - src/main/resources/mybatis/mapper
2025-09-13 01:00:13,314 - SourceAnalyzer - DEBUG - logger.py:64 - SQL 쿼리 처리 완료: getUserAgeDistribution
2025-09-13 01:00:13,314 - SourceAnalyzer - DEBUG - logger.py:64 - SQL 쿼리 처리 루프 시작: 11/20
2025-09-13 01:00:13,314 - SourceAnalyzer - DEBUG - logger.py:64 - SQL 쿼리 처리 시작: getUserActivityAnalysis (select)
2025-09-13 01:00:13,314 - SourceAnalyzer - DEBUG - logger.py:64 - GET XML ID 조회: D:\Analyzer\CreateMetaDb\projects\sampleSrc\src\main\resources\mybatis\mapper\UserMapper.xml -> src/main/resources/mybatis/mapper/UserMapper.xml
2025-09-13 01:00:13,314 - SourceAnalyzer - DEBUG - logger.py:64 - 메모리 매핑 테이블 키들: ['src/com/example/dynamicquery/UserMapper.xml', 'src/main/resources/mybatis/mapper/ImplicitJoinMapper.xml', 'src/main/resources/mybatis/mapper/ImplicitJoinTestMapper.xml', 'src/main/resources/mybatis/mapper/MixedErrorMapper.xml', 'src/main/resources/mybatis/mapper/ProductMapper.xml', 'src/main/resources/mybatis/mapper/UserMapper.xml']
2025-09-13 01:00:13,314 - SourceAnalyzer - DEBUG - logger.py:64 - 메모리에서 file_id 조회 성공: src/main/resources/mybatis/mapper/UserMapper.xml -> 27
2025-09-13 01:00:13,315 - SourceAnalyzer - DEBUG - logger.py:64 - 파일 ID 조회 성공: 27
2025-09-13 01:00:13,315 - SourceAnalyzer - DEBUG - logger.py:64 - 컴포넌트 저장 시도: getUserActivityAnalysis (select) -> SQL_SELECT
2025-09-13 01:00:13,315 - SourceAnalyzer - DEBUG - logger.py:64 - Upsert 실행: components
2025-09-13 01:00:13,315 - SourceAnalyzer - DEBUG - logger.py:64 - 데이터: {'project_id': 1, 'component_type': 'SQL_SELECT', 'component_name': 'getUserActivityAnalysis', 'parent_id': None, 'layer': 'SQL', 'file_id': 27, 'line_start': 237, 'line_end': 275, 'hash_value': '4621365459c7b74e4a5b3d8682e3edab', 'has_error': 'N', 'error_message': None, 'del_yn': 'N'}
2025-09-13 01:00:13,315 - SourceAnalyzer - DEBUG - logger.py:64 - Components upsert 시작: getUserActivityAnalysis (SQL_SELECT)
2025-09-13 01:00:13,315 - SourceAnalyzer - DEBUG - logger.py:64 - 기존 레코드 확인 쿼리: 
                    SELECT component_id FROM components 
                    WHERE project_id = ? AND component_name = ? AND file_id = ?
                    
2025-09-13 01:00:13,315 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 파라미터: (1, 'getUserActivityAnalysis', 27)
2025-09-13 01:00:13,315 - SourceAnalyzer - DEBUG - logger.py:64 - 기존 레코드 조회 결과: None
2025-09-13 01:00:13,315 - SourceAnalyzer - DEBUG - logger.py:64 - INSERT 쿼리: 
                        INSERT INTO components (project_id, component_type, component_name, parent_id, layer, file_id, line_start, line_end, hash_value, has_error, error_message, del_yn)
                        VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
                        
2025-09-13 01:00:13,315 - SourceAnalyzer - DEBUG - logger.py:64 - INSERT 파라미터: (1, 'SQL_SELECT', 'getUserActivityAnalysis', None, 'SQL', 27, 237, 275, '4621365459c7b74e4a5b3d8682e3edab', 'N', None, 'N')
2025-09-13 01:00:13,315 - SourceAnalyzer - DEBUG - logger.py:64 - INSERT 실행 완료: component_id = 3098
2025-09-13 01:00:13,315 - SourceAnalyzer - DEBUG - logger.py:64 - 컴포넌트 저장 완료: getUserActivityAnalysis (ID: 3098)
2025-09-13 01:00:13,315 - SourceAnalyzer - DEBUG - logger.py:64 - 컴포넌트 저장 결과: component_id = 3098
2025-09-13 01:00:13,315 - SourceAnalyzer - DEBUG - logger.py:64 - SQL Content 저장 시작: getUserActivityAnalysis (component_id: 3098)
2025-09-13 01:00:13,315 - SourceAnalyzer - DEBUG - logger.py:64 - SQL Content 상대경로: src/main/resources/mybatis/mapper
2025-09-13 01:00:13,315 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 실행 성공: SELECT project_id FROM projects WHERE project_id =...
2025-09-13 01:00:13,315 - SourceAnalyzer - DEBUG - logger.py:64 - 업데이트 쿼리 실행 성공: 
            INSERT OR REPLACE INTO sql_contents (..., 영향받은 행: 1
2025-09-13 01:00:13,315 - SourceAnalyzer - DEBUG - logger.py:64 - SQL 내용 저장 완료: getUserActivityAnalysis - src/main/resources/mybatis/mapper
2025-09-13 01:00:13,315 - SourceAnalyzer - DEBUG - logger.py:64 - SQL Content 저장 완료: getUserActivityAnalysis - src/main/resources/mybatis/mapper
2025-09-13 01:00:13,315 - SourceAnalyzer - DEBUG - logger.py:64 - SQL 쿼리 처리 완료: getUserActivityAnalysis
2025-09-13 01:00:13,315 - SourceAnalyzer - DEBUG - logger.py:64 - SQL 쿼리 처리 루프 시작: 12/20
2025-09-13 01:00:13,315 - SourceAnalyzer - DEBUG - logger.py:64 - SQL 쿼리 처리 시작: searchUsersAdvanced (select)
2025-09-13 01:00:13,315 - SourceAnalyzer - DEBUG - logger.py:64 - GET XML ID 조회: D:\Analyzer\CreateMetaDb\projects\sampleSrc\src\main\resources\mybatis\mapper\UserMapper.xml -> src/main/resources/mybatis/mapper/UserMapper.xml
2025-09-13 01:00:13,315 - SourceAnalyzer - DEBUG - logger.py:64 - 메모리 매핑 테이블 키들: ['src/com/example/dynamicquery/UserMapper.xml', 'src/main/resources/mybatis/mapper/ImplicitJoinMapper.xml', 'src/main/resources/mybatis/mapper/ImplicitJoinTestMapper.xml', 'src/main/resources/mybatis/mapper/MixedErrorMapper.xml', 'src/main/resources/mybatis/mapper/ProductMapper.xml', 'src/main/resources/mybatis/mapper/UserMapper.xml']
2025-09-13 01:00:13,316 - SourceAnalyzer - DEBUG - logger.py:64 - 메모리에서 file_id 조회 성공: src/main/resources/mybatis/mapper/UserMapper.xml -> 27
2025-09-13 01:00:13,316 - SourceAnalyzer - DEBUG - logger.py:64 - 파일 ID 조회 성공: 27
2025-09-13 01:00:13,316 - SourceAnalyzer - DEBUG - logger.py:64 - 컴포넌트 저장 시도: searchUsersAdvanced (select) -> SQL_SELECT
2025-09-13 01:00:13,316 - SourceAnalyzer - DEBUG - logger.py:64 - Upsert 실행: components
2025-09-13 01:00:13,316 - SourceAnalyzer - DEBUG - logger.py:64 - 데이터: {'project_id': 1, 'component_type': 'SQL_SELECT', 'component_name': 'searchUsersAdvanced', 'parent_id': None, 'layer': 'SQL', 'file_id': 27, 'line_start': 275, 'line_end': 376, 'hash_value': 'e765a7fbca2cb77825cc8ebcf48f6379', 'has_error': 'N', 'error_message': None, 'del_yn': 'N'}
2025-09-13 01:00:13,316 - SourceAnalyzer - DEBUG - logger.py:64 - Components upsert 시작: searchUsersAdvanced (SQL_SELECT)
2025-09-13 01:00:13,316 - SourceAnalyzer - DEBUG - logger.py:64 - 기존 레코드 확인 쿼리: 
                    SELECT component_id FROM components 
                    WHERE project_id = ? AND component_name = ? AND file_id = ?
                    
2025-09-13 01:00:13,316 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 파라미터: (1, 'searchUsersAdvanced', 27)
2025-09-13 01:00:13,316 - SourceAnalyzer - DEBUG - logger.py:64 - 기존 레코드 조회 결과: None
2025-09-13 01:00:13,316 - SourceAnalyzer - DEBUG - logger.py:64 - INSERT 쿼리: 
                        INSERT INTO components (project_id, component_type, component_name, parent_id, layer, file_id, line_start, line_end, hash_value, has_error, error_message, del_yn)
                        VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
                        
2025-09-13 01:00:13,316 - SourceAnalyzer - DEBUG - logger.py:64 - INSERT 파라미터: (1, 'SQL_SELECT', 'searchUsersAdvanced', None, 'SQL', 27, 275, 376, 'e765a7fbca2cb77825cc8ebcf48f6379', 'N', None, 'N')
2025-09-13 01:00:13,316 - SourceAnalyzer - DEBUG - logger.py:64 - INSERT 실행 완료: component_id = 3099
2025-09-13 01:00:13,316 - SourceAnalyzer - DEBUG - logger.py:64 - 컴포넌트 저장 완료: searchUsersAdvanced (ID: 3099)
2025-09-13 01:00:13,316 - SourceAnalyzer - DEBUG - logger.py:64 - 컴포넌트 저장 결과: component_id = 3099
2025-09-13 01:00:13,316 - SourceAnalyzer - DEBUG - logger.py:64 - SQL Content 저장 시작: searchUsersAdvanced (component_id: 3099)
2025-09-13 01:00:13,316 - SourceAnalyzer - DEBUG - logger.py:64 - SQL Content 상대경로: src/main/resources/mybatis/mapper
2025-09-13 01:00:13,316 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 실행 성공: SELECT project_id FROM projects WHERE project_id =...
2025-09-13 01:00:13,316 - SourceAnalyzer - DEBUG - logger.py:64 - 업데이트 쿼리 실행 성공: 
            INSERT OR REPLACE INTO sql_contents (..., 영향받은 행: 1
2025-09-13 01:00:13,316 - SourceAnalyzer - DEBUG - logger.py:64 - SQL 내용 저장 완료: searchUsersAdvanced - src/main/resources/mybatis/mapper
2025-09-13 01:00:13,316 - SourceAnalyzer - DEBUG - logger.py:64 - SQL Content 저장 완료: searchUsersAdvanced - src/main/resources/mybatis/mapper
2025-09-13 01:00:13,316 - SourceAnalyzer - DEBUG - logger.py:64 - SQL 쿼리 처리 완료: searchUsersAdvanced
2025-09-13 01:00:13,316 - SourceAnalyzer - DEBUG - logger.py:64 - SQL 쿼리 처리 루프 시작: 13/20
2025-09-13 01:00:13,316 - SourceAnalyzer - DEBUG - logger.py:64 - SQL 쿼리 처리 시작: getUserGroupStatistics (select)
2025-09-13 01:00:13,316 - SourceAnalyzer - DEBUG - logger.py:64 - GET XML ID 조회: D:\Analyzer\CreateMetaDb\projects\sampleSrc\src\main\resources\mybatis\mapper\UserMapper.xml -> src/main/resources/mybatis/mapper/UserMapper.xml
2025-09-13 01:00:13,316 - SourceAnalyzer - DEBUG - logger.py:64 - 메모리 매핑 테이블 키들: ['src/com/example/dynamicquery/UserMapper.xml', 'src/main/resources/mybatis/mapper/ImplicitJoinMapper.xml', 'src/main/resources/mybatis/mapper/ImplicitJoinTestMapper.xml', 'src/main/resources/mybatis/mapper/MixedErrorMapper.xml', 'src/main/resources/mybatis/mapper/ProductMapper.xml', 'src/main/resources/mybatis/mapper/UserMapper.xml']
2025-09-13 01:00:13,317 - SourceAnalyzer - DEBUG - logger.py:64 - 메모리에서 file_id 조회 성공: src/main/resources/mybatis/mapper/UserMapper.xml -> 27
2025-09-13 01:00:13,317 - SourceAnalyzer - DEBUG - logger.py:64 - 파일 ID 조회 성공: 27
2025-09-13 01:00:13,317 - SourceAnalyzer - DEBUG - logger.py:64 - 컴포넌트 저장 시도: getUserGroupStatistics (select) -> SQL_SELECT
2025-09-13 01:00:13,317 - SourceAnalyzer - DEBUG - logger.py:64 - Upsert 실행: components
2025-09-13 01:00:13,317 - SourceAnalyzer - DEBUG - logger.py:64 - 데이터: {'project_id': 1, 'component_type': 'SQL_SELECT', 'component_name': 'getUserGroupStatistics', 'parent_id': None, 'layer': 'SQL', 'file_id': 27, 'line_start': 376, 'line_end': 399, 'hash_value': '3d6b8855d027a682efe9551f93fe7b19', 'has_error': 'N', 'error_message': None, 'del_yn': 'N'}
2025-09-13 01:00:13,317 - SourceAnalyzer - DEBUG - logger.py:64 - Components upsert 시작: getUserGroupStatistics (SQL_SELECT)
2025-09-13 01:00:13,317 - SourceAnalyzer - DEBUG - logger.py:64 - 기존 레코드 확인 쿼리: 
                    SELECT component_id FROM components 
                    WHERE project_id = ? AND component_name = ? AND file_id = ?
                    
2025-09-13 01:00:13,317 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 파라미터: (1, 'getUserGroupStatistics', 27)
2025-09-13 01:00:13,317 - SourceAnalyzer - DEBUG - logger.py:64 - 기존 레코드 조회 결과: None
2025-09-13 01:00:13,317 - SourceAnalyzer - DEBUG - logger.py:64 - INSERT 쿼리: 
                        INSERT INTO components (project_id, component_type, component_name, parent_id, layer, file_id, line_start, line_end, hash_value, has_error, error_message, del_yn)
                        VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
                        
2025-09-13 01:00:13,317 - SourceAnalyzer - DEBUG - logger.py:64 - INSERT 파라미터: (1, 'SQL_SELECT', 'getUserGroupStatistics', None, 'SQL', 27, 376, 399, '3d6b8855d027a682efe9551f93fe7b19', 'N', None, 'N')
2025-09-13 01:00:13,317 - SourceAnalyzer - DEBUG - logger.py:64 - INSERT 실행 완료: component_id = 3100
2025-09-13 01:00:13,317 - SourceAnalyzer - DEBUG - logger.py:64 - 컴포넌트 저장 완료: getUserGroupStatistics (ID: 3100)
2025-09-13 01:00:13,317 - SourceAnalyzer - DEBUG - logger.py:64 - 컴포넌트 저장 결과: component_id = 3100
2025-09-13 01:00:13,317 - SourceAnalyzer - DEBUG - logger.py:64 - SQL Content 저장 시작: getUserGroupStatistics (component_id: 3100)
2025-09-13 01:00:13,317 - SourceAnalyzer - DEBUG - logger.py:64 - SQL Content 상대경로: src/main/resources/mybatis/mapper
2025-09-13 01:00:13,317 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 실행 성공: SELECT project_id FROM projects WHERE project_id =...
2025-09-13 01:00:13,317 - SourceAnalyzer - DEBUG - logger.py:64 - 업데이트 쿼리 실행 성공: 
            INSERT OR REPLACE INTO sql_contents (..., 영향받은 행: 1
2025-09-13 01:00:13,317 - SourceAnalyzer - DEBUG - logger.py:64 - SQL 내용 저장 완료: getUserGroupStatistics - src/main/resources/mybatis/mapper
2025-09-13 01:00:13,317 - SourceAnalyzer - DEBUG - logger.py:64 - SQL Content 저장 완료: getUserGroupStatistics - src/main/resources/mybatis/mapper
2025-09-13 01:00:13,317 - SourceAnalyzer - DEBUG - logger.py:64 - SQL 쿼리 처리 완료: getUserGroupStatistics
2025-09-13 01:00:13,318 - SourceAnalyzer - DEBUG - logger.py:64 - SQL 쿼리 처리 루프 시작: 14/20
2025-09-13 01:00:13,318 - SourceAnalyzer - DEBUG - logger.py:64 - SQL 쿼리 처리 시작: getUserWithPreferences (select)
2025-09-13 01:00:13,318 - SourceAnalyzer - DEBUG - logger.py:64 - GET XML ID 조회: D:\Analyzer\CreateMetaDb\projects\sampleSrc\src\main\resources\mybatis\mapper\UserMapper.xml -> src/main/resources/mybatis/mapper/UserMapper.xml
2025-09-13 01:00:13,318 - SourceAnalyzer - DEBUG - logger.py:64 - 메모리 매핑 테이블 키들: ['src/com/example/dynamicquery/UserMapper.xml', 'src/main/resources/mybatis/mapper/ImplicitJoinMapper.xml', 'src/main/resources/mybatis/mapper/ImplicitJoinTestMapper.xml', 'src/main/resources/mybatis/mapper/MixedErrorMapper.xml', 'src/main/resources/mybatis/mapper/ProductMapper.xml', 'src/main/resources/mybatis/mapper/UserMapper.xml']
2025-09-13 01:00:13,318 - SourceAnalyzer - DEBUG - logger.py:64 - 메모리에서 file_id 조회 성공: src/main/resources/mybatis/mapper/UserMapper.xml -> 27
2025-09-13 01:00:13,318 - SourceAnalyzer - DEBUG - logger.py:64 - 파일 ID 조회 성공: 27
2025-09-13 01:00:13,318 - SourceAnalyzer - DEBUG - logger.py:64 - 컴포넌트 저장 시도: getUserWithPreferences (select) -> SQL_SELECT
2025-09-13 01:00:13,318 - SourceAnalyzer - DEBUG - logger.py:64 - Upsert 실행: components
2025-09-13 01:00:13,318 - SourceAnalyzer - DEBUG - logger.py:64 - 데이터: {'project_id': 1, 'component_type': 'SQL_SELECT', 'component_name': 'getUserWithPreferences', 'parent_id': None, 'layer': 'SQL', 'file_id': 27, 'line_start': 399, 'line_end': 419, 'hash_value': '264d2f0b8d121c9139b0c36b6a9f9ba1', 'has_error': 'N', 'error_message': None, 'del_yn': 'N'}
2025-09-13 01:00:13,318 - SourceAnalyzer - DEBUG - logger.py:64 - Components upsert 시작: getUserWithPreferences (SQL_SELECT)
2025-09-13 01:00:13,318 - SourceAnalyzer - DEBUG - logger.py:64 - 기존 레코드 확인 쿼리: 
                    SELECT component_id FROM components 
                    WHERE project_id = ? AND component_name = ? AND file_id = ?
                    
2025-09-13 01:00:13,318 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 파라미터: (1, 'getUserWithPreferences', 27)
2025-09-13 01:00:13,318 - SourceAnalyzer - DEBUG - logger.py:64 - 기존 레코드 조회 결과: None
2025-09-13 01:00:13,318 - SourceAnalyzer - DEBUG - logger.py:64 - INSERT 쿼리: 
                        INSERT INTO components (project_id, component_type, component_name, parent_id, layer, file_id, line_start, line_end, hash_value, has_error, error_message, del_yn)
                        VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
                        
2025-09-13 01:00:13,318 - SourceAnalyzer - DEBUG - logger.py:64 - INSERT 파라미터: (1, 'SQL_SELECT', 'getUserWithPreferences', None, 'SQL', 27, 399, 419, '264d2f0b8d121c9139b0c36b6a9f9ba1', 'N', None, 'N')
2025-09-13 01:00:13,318 - SourceAnalyzer - DEBUG - logger.py:64 - INSERT 실행 완료: component_id = 3101
2025-09-13 01:00:13,318 - SourceAnalyzer - DEBUG - logger.py:64 - 컴포넌트 저장 완료: getUserWithPreferences (ID: 3101)
2025-09-13 01:00:13,318 - SourceAnalyzer - DEBUG - logger.py:64 - 컴포넌트 저장 결과: component_id = 3101
2025-09-13 01:00:13,318 - SourceAnalyzer - DEBUG - logger.py:64 - SQL Content 저장 시작: getUserWithPreferences (component_id: 3101)
2025-09-13 01:00:13,318 - SourceAnalyzer - DEBUG - logger.py:64 - SQL Content 상대경로: src/main/resources/mybatis/mapper
2025-09-13 01:00:13,318 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 실행 성공: SELECT project_id FROM projects WHERE project_id =...
2025-09-13 01:00:13,318 - SourceAnalyzer - DEBUG - logger.py:64 - 업데이트 쿼리 실행 성공: 
            INSERT OR REPLACE INTO sql_contents (..., 영향받은 행: 1
2025-09-13 01:00:13,318 - SourceAnalyzer - DEBUG - logger.py:64 - SQL 내용 저장 완료: getUserWithPreferences - src/main/resources/mybatis/mapper
2025-09-13 01:00:13,319 - SourceAnalyzer - DEBUG - logger.py:64 - SQL Content 저장 완료: getUserWithPreferences - src/main/resources/mybatis/mapper
2025-09-13 01:00:13,319 - SourceAnalyzer - DEBUG - logger.py:64 - SQL 쿼리 처리 완료: getUserWithPreferences
2025-09-13 01:00:13,319 - SourceAnalyzer - DEBUG - logger.py:64 - SQL 쿼리 처리 루프 시작: 15/20
2025-09-13 01:00:13,319 - SourceAnalyzer - DEBUG - logger.py:64 - SQL 쿼리 처리 시작: getUserWithPreferencesAndType (select)
2025-09-13 01:00:13,319 - SourceAnalyzer - DEBUG - logger.py:64 - GET XML ID 조회: D:\Analyzer\CreateMetaDb\projects\sampleSrc\src\main\resources\mybatis\mapper\UserMapper.xml -> src/main/resources/mybatis/mapper/UserMapper.xml
2025-09-13 01:00:13,319 - SourceAnalyzer - DEBUG - logger.py:64 - 메모리 매핑 테이블 키들: ['src/com/example/dynamicquery/UserMapper.xml', 'src/main/resources/mybatis/mapper/ImplicitJoinMapper.xml', 'src/main/resources/mybatis/mapper/ImplicitJoinTestMapper.xml', 'src/main/resources/mybatis/mapper/MixedErrorMapper.xml', 'src/main/resources/mybatis/mapper/ProductMapper.xml', 'src/main/resources/mybatis/mapper/UserMapper.xml']
2025-09-13 01:00:13,319 - SourceAnalyzer - DEBUG - logger.py:64 - 메모리에서 file_id 조회 성공: src/main/resources/mybatis/mapper/UserMapper.xml -> 27
2025-09-13 01:00:13,319 - SourceAnalyzer - DEBUG - logger.py:64 - 파일 ID 조회 성공: 27
2025-09-13 01:00:13,319 - SourceAnalyzer - DEBUG - logger.py:64 - 컴포넌트 저장 시도: getUserWithPreferencesAndType (select) -> SQL_SELECT
2025-09-13 01:00:13,319 - SourceAnalyzer - DEBUG - logger.py:64 - Upsert 실행: components
2025-09-13 01:00:13,319 - SourceAnalyzer - DEBUG - logger.py:64 - 데이터: {'project_id': 1, 'component_type': 'SQL_SELECT', 'component_name': 'getUserWithPreferencesAndType', 'parent_id': None, 'layer': 'SQL', 'file_id': 27, 'line_start': 419, 'line_end': 440, 'hash_value': '5683247286ecfefbf3d361f101f802d8', 'has_error': 'N', 'error_message': None, 'del_yn': 'N'}
2025-09-13 01:00:13,319 - SourceAnalyzer - DEBUG - logger.py:64 - Components upsert 시작: getUserWithPreferencesAndType (SQL_SELECT)
2025-09-13 01:00:13,319 - SourceAnalyzer - DEBUG - logger.py:64 - 기존 레코드 확인 쿼리: 
                    SELECT component_id FROM components 
                    WHERE project_id = ? AND component_name = ? AND file_id = ?
                    
2025-09-13 01:00:13,319 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 파라미터: (1, 'getUserWithPreferencesAndType', 27)
2025-09-13 01:00:13,319 - SourceAnalyzer - DEBUG - logger.py:64 - 기존 레코드 조회 결과: None
2025-09-13 01:00:13,319 - SourceAnalyzer - DEBUG - logger.py:64 - INSERT 쿼리: 
                        INSERT INTO components (project_id, component_type, component_name, parent_id, layer, file_id, line_start, line_end, hash_value, has_error, error_message, del_yn)
                        VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
                        
2025-09-13 01:00:13,319 - SourceAnalyzer - DEBUG - logger.py:64 - INSERT 파라미터: (1, 'SQL_SELECT', 'getUserWithPreferencesAndType', None, 'SQL', 27, 419, 440, '5683247286ecfefbf3d361f101f802d8', 'N', None, 'N')
2025-09-13 01:00:13,319 - SourceAnalyzer - DEBUG - logger.py:64 - INSERT 실행 완료: component_id = 3102
2025-09-13 01:00:13,319 - SourceAnalyzer - DEBUG - logger.py:64 - 컴포넌트 저장 완료: getUserWithPreferencesAndType (ID: 3102)
2025-09-13 01:00:13,319 - SourceAnalyzer - DEBUG - logger.py:64 - 컴포넌트 저장 결과: component_id = 3102
2025-09-13 01:00:13,319 - SourceAnalyzer - DEBUG - logger.py:64 - SQL Content 저장 시작: getUserWithPreferencesAndType (component_id: 3102)
2025-09-13 01:00:13,319 - SourceAnalyzer - DEBUG - logger.py:64 - SQL Content 상대경로: src/main/resources/mybatis/mapper
2025-09-13 01:00:13,319 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 실행 성공: SELECT project_id FROM projects WHERE project_id =...
2025-09-13 01:00:13,319 - SourceAnalyzer - DEBUG - logger.py:64 - 업데이트 쿼리 실행 성공: 
            INSERT OR REPLACE INTO sql_contents (..., 영향받은 행: 1
2025-09-13 01:00:13,320 - SourceAnalyzer - DEBUG - logger.py:64 - SQL 내용 저장 완료: getUserWithPreferencesAndType - src/main/resources/mybatis/mapper
2025-09-13 01:00:13,320 - SourceAnalyzer - DEBUG - logger.py:64 - SQL Content 저장 완료: getUserWithPreferencesAndType - src/main/resources/mybatis/mapper
2025-09-13 01:00:13,320 - SourceAnalyzer - DEBUG - logger.py:64 - SQL 쿼리 처리 완료: getUserWithPreferencesAndType
2025-09-13 01:00:13,320 - SourceAnalyzer - DEBUG - logger.py:64 - SQL 쿼리 처리 루프 시작: 16/20
2025-09-13 01:00:13,320 - SourceAnalyzer - DEBUG - logger.py:64 - SQL 쿼리 처리 시작: getUserActivityLog (select)
2025-09-13 01:00:13,320 - SourceAnalyzer - DEBUG - logger.py:64 - GET XML ID 조회: D:\Analyzer\CreateMetaDb\projects\sampleSrc\src\main\resources\mybatis\mapper\UserMapper.xml -> src/main/resources/mybatis/mapper/UserMapper.xml
2025-09-13 01:00:13,320 - SourceAnalyzer - DEBUG - logger.py:64 - 메모리 매핑 테이블 키들: ['src/com/example/dynamicquery/UserMapper.xml', 'src/main/resources/mybatis/mapper/ImplicitJoinMapper.xml', 'src/main/resources/mybatis/mapper/ImplicitJoinTestMapper.xml', 'src/main/resources/mybatis/mapper/MixedErrorMapper.xml', 'src/main/resources/mybatis/mapper/ProductMapper.xml', 'src/main/resources/mybatis/mapper/UserMapper.xml']
2025-09-13 01:00:13,320 - SourceAnalyzer - DEBUG - logger.py:64 - 메모리에서 file_id 조회 성공: src/main/resources/mybatis/mapper/UserMapper.xml -> 27
2025-09-13 01:00:13,320 - SourceAnalyzer - DEBUG - logger.py:64 - 파일 ID 조회 성공: 27
2025-09-13 01:00:13,320 - SourceAnalyzer - DEBUG - logger.py:64 - 컴포넌트 저장 시도: getUserActivityLog (select) -> SQL_SELECT
2025-09-13 01:00:13,320 - SourceAnalyzer - DEBUG - logger.py:64 - Upsert 실행: components
2025-09-13 01:00:13,320 - SourceAnalyzer - DEBUG - logger.py:64 - 데이터: {'project_id': 1, 'component_type': 'SQL_SELECT', 'component_name': 'getUserActivityLog', 'parent_id': None, 'layer': 'SQL', 'file_id': 27, 'line_start': 440, 'line_end': 455, 'hash_value': '423c7b0c1ca8b176d98809f3e760d9f8', 'has_error': 'N', 'error_message': None, 'del_yn': 'N'}
2025-09-13 01:00:13,320 - SourceAnalyzer - DEBUG - logger.py:64 - Components upsert 시작: getUserActivityLog (SQL_SELECT)
2025-09-13 01:00:13,320 - SourceAnalyzer - DEBUG - logger.py:64 - 기존 레코드 확인 쿼리: 
                    SELECT component_id FROM components 
                    WHERE project_id = ? AND component_name = ? AND file_id = ?
                    
2025-09-13 01:00:13,320 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 파라미터: (1, 'getUserActivityLog', 27)
2025-09-13 01:00:13,320 - SourceAnalyzer - DEBUG - logger.py:64 - 기존 레코드 조회 결과: None
2025-09-13 01:00:13,320 - SourceAnalyzer - DEBUG - logger.py:64 - INSERT 쿼리: 
                        INSERT INTO components (project_id, component_type, component_name, parent_id, layer, file_id, line_start, line_end, hash_value, has_error, error_message, del_yn)
                        VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
                        
2025-09-13 01:00:13,320 - SourceAnalyzer - DEBUG - logger.py:64 - INSERT 파라미터: (1, 'SQL_SELECT', 'getUserActivityLog', None, 'SQL', 27, 440, 455, '423c7b0c1ca8b176d98809f3e760d9f8', 'N', None, 'N')
2025-09-13 01:00:13,320 - SourceAnalyzer - DEBUG - logger.py:64 - INSERT 실행 완료: component_id = 3103
2025-09-13 01:00:13,320 - SourceAnalyzer - DEBUG - logger.py:64 - 컴포넌트 저장 완료: getUserActivityLog (ID: 3103)
2025-09-13 01:00:13,320 - SourceAnalyzer - DEBUG - logger.py:64 - 컴포넌트 저장 결과: component_id = 3103
2025-09-13 01:00:13,320 - SourceAnalyzer - DEBUG - logger.py:64 - SQL Content 저장 시작: getUserActivityLog (component_id: 3103)
2025-09-13 01:00:13,320 - SourceAnalyzer - DEBUG - logger.py:64 - SQL Content 상대경로: src/main/resources/mybatis/mapper
2025-09-13 01:00:13,320 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 실행 성공: SELECT project_id FROM projects WHERE project_id =...
2025-09-13 01:00:13,321 - SourceAnalyzer - DEBUG - logger.py:64 - 업데이트 쿼리 실행 성공: 
            INSERT OR REPLACE INTO sql_contents (..., 영향받은 행: 1
2025-09-13 01:00:13,321 - SourceAnalyzer - DEBUG - logger.py:64 - SQL 내용 저장 완료: getUserActivityLog - src/main/resources/mybatis/mapper
2025-09-13 01:00:13,321 - SourceAnalyzer - DEBUG - logger.py:64 - SQL Content 저장 완료: getUserActivityLog - src/main/resources/mybatis/mapper
2025-09-13 01:00:13,321 - SourceAnalyzer - DEBUG - logger.py:64 - SQL 쿼리 처리 완료: getUserActivityLog
2025-09-13 01:00:13,321 - SourceAnalyzer - DEBUG - logger.py:64 - SQL 쿼리 처리 루프 시작: 17/20
2025-09-13 01:00:13,321 - SourceAnalyzer - DEBUG - logger.py:64 - SQL 쿼리 처리 시작: getUserSettings (select)
2025-09-13 01:00:13,321 - SourceAnalyzer - DEBUG - logger.py:64 - GET XML ID 조회: D:\Analyzer\CreateMetaDb\projects\sampleSrc\src\main\resources\mybatis\mapper\UserMapper.xml -> src/main/resources/mybatis/mapper/UserMapper.xml
2025-09-13 01:00:13,321 - SourceAnalyzer - DEBUG - logger.py:64 - 메모리 매핑 테이블 키들: ['src/com/example/dynamicquery/UserMapper.xml', 'src/main/resources/mybatis/mapper/ImplicitJoinMapper.xml', 'src/main/resources/mybatis/mapper/ImplicitJoinTestMapper.xml', 'src/main/resources/mybatis/mapper/MixedErrorMapper.xml', 'src/main/resources/mybatis/mapper/ProductMapper.xml', 'src/main/resources/mybatis/mapper/UserMapper.xml']
2025-09-13 01:00:13,321 - SourceAnalyzer - DEBUG - logger.py:64 - 메모리에서 file_id 조회 성공: src/main/resources/mybatis/mapper/UserMapper.xml -> 27
2025-09-13 01:00:13,321 - SourceAnalyzer - DEBUG - logger.py:64 - 파일 ID 조회 성공: 27
2025-09-13 01:00:13,321 - SourceAnalyzer - DEBUG - logger.py:64 - 컴포넌트 저장 시도: getUserSettings (select) -> SQL_SELECT
2025-09-13 01:00:13,321 - SourceAnalyzer - DEBUG - logger.py:64 - Upsert 실행: components
2025-09-13 01:00:13,321 - SourceAnalyzer - DEBUG - logger.py:64 - 데이터: {'project_id': 1, 'component_type': 'SQL_SELECT', 'component_name': 'getUserSettings', 'parent_id': None, 'layer': 'SQL', 'file_id': 27, 'line_start': 455, 'line_end': 468, 'hash_value': 'ca3bc2eed6cc8adcca722bfb8663881a', 'has_error': 'N', 'error_message': None, 'del_yn': 'N'}
2025-09-13 01:00:13,321 - SourceAnalyzer - DEBUG - logger.py:64 - Components upsert 시작: getUserSettings (SQL_SELECT)
2025-09-13 01:00:13,321 - SourceAnalyzer - DEBUG - logger.py:64 - 기존 레코드 확인 쿼리: 
                    SELECT component_id FROM components 
                    WHERE project_id = ? AND component_name = ? AND file_id = ?
                    
2025-09-13 01:00:13,321 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 파라미터: (1, 'getUserSettings', 27)
2025-09-13 01:00:13,321 - SourceAnalyzer - DEBUG - logger.py:64 - 기존 레코드 조회 결과: None
2025-09-13 01:00:13,321 - SourceAnalyzer - DEBUG - logger.py:64 - INSERT 쿼리: 
                        INSERT INTO components (project_id, component_type, component_name, parent_id, layer, file_id, line_start, line_end, hash_value, has_error, error_message, del_yn)
                        VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
                        
2025-09-13 01:00:13,321 - SourceAnalyzer - DEBUG - logger.py:64 - INSERT 파라미터: (1, 'SQL_SELECT', 'getUserSettings', None, 'SQL', 27, 455, 468, 'ca3bc2eed6cc8adcca722bfb8663881a', 'N', None, 'N')
2025-09-13 01:00:13,321 - SourceAnalyzer - DEBUG - logger.py:64 - INSERT 실행 완료: component_id = 3104
2025-09-13 01:00:13,321 - SourceAnalyzer - DEBUG - logger.py:64 - 컴포넌트 저장 완료: getUserSettings (ID: 3104)
2025-09-13 01:00:13,321 - SourceAnalyzer - DEBUG - logger.py:64 - 컴포넌트 저장 결과: component_id = 3104
2025-09-13 01:00:13,321 - SourceAnalyzer - DEBUG - logger.py:64 - SQL Content 저장 시작: getUserSettings (component_id: 3104)
2025-09-13 01:00:13,321 - SourceAnalyzer - DEBUG - logger.py:64 - SQL Content 상대경로: src/main/resources/mybatis/mapper
2025-09-13 01:00:13,321 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 실행 성공: SELECT project_id FROM projects WHERE project_id =...
2025-09-13 01:00:13,322 - SourceAnalyzer - DEBUG - logger.py:64 - 업데이트 쿼리 실행 성공: 
            INSERT OR REPLACE INTO sql_contents (..., 영향받은 행: 1
2025-09-13 01:00:13,322 - SourceAnalyzer - DEBUG - logger.py:64 - SQL 내용 저장 완료: getUserSettings - src/main/resources/mybatis/mapper
2025-09-13 01:00:13,322 - SourceAnalyzer - DEBUG - logger.py:64 - SQL Content 저장 완료: getUserSettings - src/main/resources/mybatis/mapper
2025-09-13 01:00:13,322 - SourceAnalyzer - DEBUG - logger.py:64 - SQL 쿼리 처리 완료: getUserSettings
2025-09-13 01:00:13,322 - SourceAnalyzer - DEBUG - logger.py:64 - SQL 쿼리 처리 루프 시작: 18/20
2025-09-13 01:00:13,322 - SourceAnalyzer - DEBUG - logger.py:64 - SQL 쿼리 처리 시작: updateUserPreferences (update)
2025-09-13 01:00:13,322 - SourceAnalyzer - DEBUG - logger.py:64 - GET XML ID 조회: D:\Analyzer\CreateMetaDb\projects\sampleSrc\src\main\resources\mybatis\mapper\UserMapper.xml -> src/main/resources/mybatis/mapper/UserMapper.xml
2025-09-13 01:00:13,322 - SourceAnalyzer - DEBUG - logger.py:64 - 메모리 매핑 테이블 키들: ['src/com/example/dynamicquery/UserMapper.xml', 'src/main/resources/mybatis/mapper/ImplicitJoinMapper.xml', 'src/main/resources/mybatis/mapper/ImplicitJoinTestMapper.xml', 'src/main/resources/mybatis/mapper/MixedErrorMapper.xml', 'src/main/resources/mybatis/mapper/ProductMapper.xml', 'src/main/resources/mybatis/mapper/UserMapper.xml']
2025-09-13 01:00:13,322 - SourceAnalyzer - DEBUG - logger.py:64 - 메모리에서 file_id 조회 성공: src/main/resources/mybatis/mapper/UserMapper.xml -> 27
2025-09-13 01:00:13,322 - SourceAnalyzer - DEBUG - logger.py:64 - 파일 ID 조회 성공: 27
2025-09-13 01:00:13,322 - SourceAnalyzer - DEBUG - logger.py:64 - 컴포넌트 저장 시도: updateUserPreferences (update) -> SQL_UPDATE
2025-09-13 01:00:13,322 - SourceAnalyzer - DEBUG - logger.py:64 - Upsert 실행: components
2025-09-13 01:00:13,322 - SourceAnalyzer - DEBUG - logger.py:64 - 데이터: {'project_id': 1, 'component_type': 'SQL_UPDATE', 'component_name': 'updateUserPreferences', 'parent_id': None, 'layer': 'SQL', 'file_id': 27, 'line_start': 468, 'line_end': 481, 'hash_value': 'b5f8694a7c2d99f891e32723cf6bec40', 'has_error': 'N', 'error_message': None, 'del_yn': 'N'}
2025-09-13 01:00:13,322 - SourceAnalyzer - DEBUG - logger.py:64 - Components upsert 시작: updateUserPreferences (SQL_UPDATE)
2025-09-13 01:00:13,322 - SourceAnalyzer - DEBUG - logger.py:64 - 기존 레코드 확인 쿼리: 
                    SELECT component_id FROM components 
                    WHERE project_id = ? AND component_name = ? AND file_id = ?
                    
2025-09-13 01:00:13,322 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 파라미터: (1, 'updateUserPreferences', 27)
2025-09-13 01:00:13,322 - SourceAnalyzer - DEBUG - logger.py:64 - 기존 레코드 조회 결과: None
2025-09-13 01:00:13,322 - SourceAnalyzer - DEBUG - logger.py:64 - INSERT 쿼리: 
                        INSERT INTO components (project_id, component_type, component_name, parent_id, layer, file_id, line_start, line_end, hash_value, has_error, error_message, del_yn)
                        VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
                        
2025-09-13 01:00:13,322 - SourceAnalyzer - DEBUG - logger.py:64 - INSERT 파라미터: (1, 'SQL_UPDATE', 'updateUserPreferences', None, 'SQL', 27, 468, 481, 'b5f8694a7c2d99f891e32723cf6bec40', 'N', None, 'N')
2025-09-13 01:00:13,322 - SourceAnalyzer - DEBUG - logger.py:64 - INSERT 실행 완료: component_id = 3105
2025-09-13 01:00:13,322 - SourceAnalyzer - DEBUG - logger.py:64 - 컴포넌트 저장 완료: updateUserPreferences (ID: 3105)
2025-09-13 01:00:13,322 - SourceAnalyzer - DEBUG - logger.py:64 - 컴포넌트 저장 결과: component_id = 3105
2025-09-13 01:00:13,322 - SourceAnalyzer - DEBUG - logger.py:64 - SQL Content 저장 시작: updateUserPreferences (component_id: 3105)
2025-09-13 01:00:13,322 - SourceAnalyzer - DEBUG - logger.py:64 - SQL Content 상대경로: src/main/resources/mybatis/mapper
2025-09-13 01:00:13,322 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 실행 성공: SELECT project_id FROM projects WHERE project_id =...
2025-09-13 01:00:13,323 - SourceAnalyzer - DEBUG - logger.py:64 - 업데이트 쿼리 실행 성공: 
            INSERT OR REPLACE INTO sql_contents (..., 영향받은 행: 1
2025-09-13 01:00:13,323 - SourceAnalyzer - DEBUG - logger.py:64 - SQL 내용 저장 완료: updateUserPreferences - src/main/resources/mybatis/mapper
2025-09-13 01:00:13,323 - SourceAnalyzer - DEBUG - logger.py:64 - SQL Content 저장 완료: updateUserPreferences - src/main/resources/mybatis/mapper
2025-09-13 01:00:13,323 - SourceAnalyzer - DEBUG - logger.py:64 - SQL 쿼리 처리 완료: updateUserPreferences
2025-09-13 01:00:13,323 - SourceAnalyzer - DEBUG - logger.py:64 - SQL 쿼리 처리 루프 시작: 19/20
2025-09-13 01:00:13,323 - SourceAnalyzer - DEBUG - logger.py:64 - SQL 쿼리 처리 시작: insertUserPreferences (insert)
2025-09-13 01:00:13,323 - SourceAnalyzer - DEBUG - logger.py:64 - GET XML ID 조회: D:\Analyzer\CreateMetaDb\projects\sampleSrc\src\main\resources\mybatis\mapper\UserMapper.xml -> src/main/resources/mybatis/mapper/UserMapper.xml
2025-09-13 01:00:13,323 - SourceAnalyzer - DEBUG - logger.py:64 - 메모리 매핑 테이블 키들: ['src/com/example/dynamicquery/UserMapper.xml', 'src/main/resources/mybatis/mapper/ImplicitJoinMapper.xml', 'src/main/resources/mybatis/mapper/ImplicitJoinTestMapper.xml', 'src/main/resources/mybatis/mapper/MixedErrorMapper.xml', 'src/main/resources/mybatis/mapper/ProductMapper.xml', 'src/main/resources/mybatis/mapper/UserMapper.xml']
2025-09-13 01:00:13,323 - SourceAnalyzer - DEBUG - logger.py:64 - 메모리에서 file_id 조회 성공: src/main/resources/mybatis/mapper/UserMapper.xml -> 27
2025-09-13 01:00:13,323 - SourceAnalyzer - DEBUG - logger.py:64 - 파일 ID 조회 성공: 27
2025-09-13 01:00:13,323 - SourceAnalyzer - DEBUG - logger.py:64 - 컴포넌트 저장 시도: insertUserPreferences (insert) -> SQL_INSERT
2025-09-13 01:00:13,323 - SourceAnalyzer - DEBUG - logger.py:64 - Upsert 실행: components
2025-09-13 01:00:13,323 - SourceAnalyzer - DEBUG - logger.py:64 - 데이터: {'project_id': 1, 'component_type': 'SQL_INSERT', 'component_name': 'insertUserPreferences', 'parent_id': None, 'layer': 'SQL', 'file_id': 27, 'line_start': 481, 'line_end': 504, 'hash_value': '27dddbb9bd262c76bbc7acd2c8ac292e', 'has_error': 'N', 'error_message': None, 'del_yn': 'N'}
2025-09-13 01:00:13,323 - SourceAnalyzer - DEBUG - logger.py:64 - Components upsert 시작: insertUserPreferences (SQL_INSERT)
2025-09-13 01:00:13,323 - SourceAnalyzer - DEBUG - logger.py:64 - 기존 레코드 확인 쿼리: 
                    SELECT component_id FROM components 
                    WHERE project_id = ? AND component_name = ? AND file_id = ?
                    
2025-09-13 01:00:13,323 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 파라미터: (1, 'insertUserPreferences', 27)
2025-09-13 01:00:13,323 - SourceAnalyzer - DEBUG - logger.py:64 - 기존 레코드 조회 결과: None
2025-09-13 01:00:13,323 - SourceAnalyzer - DEBUG - logger.py:64 - INSERT 쿼리: 
                        INSERT INTO components (project_id, component_type, component_name, parent_id, layer, file_id, line_start, line_end, hash_value, has_error, error_message, del_yn)
                        VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
                        
2025-09-13 01:00:13,323 - SourceAnalyzer - DEBUG - logger.py:64 - INSERT 파라미터: (1, 'SQL_INSERT', 'insertUserPreferences', None, 'SQL', 27, 481, 504, '27dddbb9bd262c76bbc7acd2c8ac292e', 'N', None, 'N')
2025-09-13 01:00:13,323 - SourceAnalyzer - DEBUG - logger.py:64 - INSERT 실행 완료: component_id = 3106
2025-09-13 01:00:13,323 - SourceAnalyzer - DEBUG - logger.py:64 - 컴포넌트 저장 완료: insertUserPreferences (ID: 3106)
2025-09-13 01:00:13,323 - SourceAnalyzer - DEBUG - logger.py:64 - 컴포넌트 저장 결과: component_id = 3106
2025-09-13 01:00:13,323 - SourceAnalyzer - DEBUG - logger.py:64 - SQL Content 저장 시작: insertUserPreferences (component_id: 3106)
2025-09-13 01:00:13,323 - SourceAnalyzer - DEBUG - logger.py:64 - SQL Content 상대경로: src/main/resources/mybatis/mapper
2025-09-13 01:00:13,323 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 실행 성공: SELECT project_id FROM projects WHERE project_id =...
2025-09-13 01:00:13,324 - SourceAnalyzer - DEBUG - logger.py:64 - 업데이트 쿼리 실행 성공: 
            INSERT OR REPLACE INTO sql_contents (..., 영향받은 행: 1
2025-09-13 01:00:13,324 - SourceAnalyzer - DEBUG - logger.py:64 - SQL 내용 저장 완료: insertUserPreferences - src/main/resources/mybatis/mapper
2025-09-13 01:00:13,324 - SourceAnalyzer - DEBUG - logger.py:64 - SQL Content 저장 완료: insertUserPreferences - src/main/resources/mybatis/mapper
2025-09-13 01:00:13,324 - SourceAnalyzer - DEBUG - logger.py:64 - SQL 쿼리 처리 완료: insertUserPreferences
2025-09-13 01:00:13,324 - SourceAnalyzer - DEBUG - logger.py:64 - SQL 쿼리 처리 루프 시작: 20/20
2025-09-13 01:00:13,324 - SourceAnalyzer - DEBUG - logger.py:64 - SQL 쿼리 처리 시작: getUserWithNewTable (select)
2025-09-13 01:00:13,324 - SourceAnalyzer - DEBUG - logger.py:64 - GET XML ID 조회: D:\Analyzer\CreateMetaDb\projects\sampleSrc\src\main\resources\mybatis\mapper\UserMapper.xml -> src/main/resources/mybatis/mapper/UserMapper.xml
2025-09-13 01:00:13,324 - SourceAnalyzer - DEBUG - logger.py:64 - 메모리 매핑 테이블 키들: ['src/com/example/dynamicquery/UserMapper.xml', 'src/main/resources/mybatis/mapper/ImplicitJoinMapper.xml', 'src/main/resources/mybatis/mapper/ImplicitJoinTestMapper.xml', 'src/main/resources/mybatis/mapper/MixedErrorMapper.xml', 'src/main/resources/mybatis/mapper/ProductMapper.xml', 'src/main/resources/mybatis/mapper/UserMapper.xml']
2025-09-13 01:00:13,324 - SourceAnalyzer - DEBUG - logger.py:64 - 메모리에서 file_id 조회 성공: src/main/resources/mybatis/mapper/UserMapper.xml -> 27
2025-09-13 01:00:13,324 - SourceAnalyzer - DEBUG - logger.py:64 - 파일 ID 조회 성공: 27
2025-09-13 01:00:13,324 - SourceAnalyzer - DEBUG - logger.py:64 - 컴포넌트 저장 시도: getUserWithNewTable (select) -> SQL_SELECT
2025-09-13 01:00:13,324 - SourceAnalyzer - DEBUG - logger.py:64 - Upsert 실행: components
2025-09-13 01:00:13,324 - SourceAnalyzer - DEBUG - logger.py:64 - 데이터: {'project_id': 1, 'component_type': 'SQL_SELECT', 'component_name': 'getUserWithNewTable', 'parent_id': None, 'layer': 'SQL', 'file_id': 27, 'line_start': 504, 'line_end': 517, 'hash_value': 'd6b0917b99b9fa710c95004c2e572f54', 'has_error': 'N', 'error_message': None, 'del_yn': 'N'}
2025-09-13 01:00:13,324 - SourceAnalyzer - DEBUG - logger.py:64 - Components upsert 시작: getUserWithNewTable (SQL_SELECT)
2025-09-13 01:00:13,324 - SourceAnalyzer - DEBUG - logger.py:64 - 기존 레코드 확인 쿼리: 
                    SELECT component_id FROM components 
                    WHERE project_id = ? AND component_name = ? AND file_id = ?
                    
2025-09-13 01:00:13,324 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 파라미터: (1, 'getUserWithNewTable', 27)
2025-09-13 01:00:13,324 - SourceAnalyzer - DEBUG - logger.py:64 - 기존 레코드 조회 결과: None
2025-09-13 01:00:13,324 - SourceAnalyzer - DEBUG - logger.py:64 - INSERT 쿼리: 
                        INSERT INTO components (project_id, component_type, component_name, parent_id, layer, file_id, line_start, line_end, hash_value, has_error, error_message, del_yn)
                        VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
                        
2025-09-13 01:00:13,324 - SourceAnalyzer - DEBUG - logger.py:64 - INSERT 파라미터: (1, 'SQL_SELECT', 'getUserWithNewTable', None, 'SQL', 27, 504, 517, 'd6b0917b99b9fa710c95004c2e572f54', 'N', None, 'N')
2025-09-13 01:00:13,324 - SourceAnalyzer - DEBUG - logger.py:64 - INSERT 실행 완료: component_id = 3107
2025-09-13 01:00:13,324 - SourceAnalyzer - DEBUG - logger.py:64 - 컴포넌트 저장 완료: getUserWithNewTable (ID: 3107)
2025-09-13 01:00:13,324 - SourceAnalyzer - DEBUG - logger.py:64 - 컴포넌트 저장 결과: component_id = 3107
2025-09-13 01:00:13,324 - SourceAnalyzer - DEBUG - logger.py:64 - SQL Content 저장 시작: getUserWithNewTable (component_id: 3107)
2025-09-13 01:00:13,324 - SourceAnalyzer - DEBUG - logger.py:64 - SQL Content 상대경로: src/main/resources/mybatis/mapper
2025-09-13 01:00:13,324 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 실행 성공: SELECT project_id FROM projects WHERE project_id =...
2025-09-13 01:00:13,325 - SourceAnalyzer - DEBUG - logger.py:64 - 업데이트 쿼리 실행 성공: 
            INSERT OR REPLACE INTO sql_contents (..., 영향받은 행: 1
2025-09-13 01:00:13,325 - SourceAnalyzer - DEBUG - logger.py:64 - SQL 내용 저장 완료: getUserWithNewTable - src/main/resources/mybatis/mapper
2025-09-13 01:00:13,325 - SourceAnalyzer - DEBUG - logger.py:64 - SQL Content 저장 완료: getUserWithNewTable - src/main/resources/mybatis/mapper
2025-09-13 01:00:13,325 - SourceAnalyzer - DEBUG - logger.py:64 - SQL 쿼리 처리 완료: getUserWithNewTable
2025-09-13 01:00:13,325 - SourceAnalyzer - INFO - logger.py:68 - === SQL 쿼리 처리 완료 ===
2025-09-13 01:00:13,325 - SourceAnalyzer - INFO - logger.py:68 - 처리된 쿼리 수: 20
2025-09-13 01:00:13,325 - SourceAnalyzer - INFO - logger.py:68 - 건너뜀 쿼리 수: 0
2025-09-13 01:00:13,325 - SourceAnalyzer - INFO - logger.py:68 - 컴포넌트 ID 매핑 크기: 20
2025-09-13 01:00:13,325 - SourceAnalyzer - INFO - logger.py:68 - SQL 컴포넌트 저장 완료: 20개 (건너뜀: 0개)
2025-09-13 01:00:13,325 - SourceAnalyzer - INFO - logger.py:68 - process_sql_queries 호출 후: result=True
2025-09-13 01:00:13,325 - SourceAnalyzer - INFO - logger.py:68 - SQL Content Processor 처리 결과: True
2025-09-13 01:00:13,325 - SourceAnalyzer - INFO - logger.py:68 - === XML 로딩 엔진: SQL 컴포넌트 저장 완료 ===
2025-09-13 01:00:13,325 - SourceAnalyzer - INFO - logger.py:68 - === XML 로딩 통계 ===
2025-09-13 01:00:13,325 - SourceAnalyzer - INFO - logger.py:68 - 처리된 XML 파일: 5개
2025-09-13 01:00:13,325 - SourceAnalyzer - INFO - logger.py:68 - 추출된 SQL 쿼리: 54개
2025-09-13 01:00:13,325 - SourceAnalyzer - INFO - logger.py:68 - 생성된 SQL 컴포넌트: 54개
2025-09-13 01:00:13,325 - SourceAnalyzer - INFO - logger.py:68 - 생성된 JOIN 관계: 22개
2025-09-13 01:00:13,325 - SourceAnalyzer - INFO - logger.py:68 - 생성된 inferred 테이블: 0개
2025-09-13 01:00:13,325 - SourceAnalyzer - INFO - logger.py:68 - 생성된 inferred 컬럼: 0개
2025-09-13 01:00:13,325 - SourceAnalyzer - INFO - logger.py:68 - 오류 발생: 1개
2025-09-13 01:00:13,326 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 실행 성공: 
            SELECT 
                COUNT(*) as t...
2025-09-13 01:00:13,328 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 실행 성공: 
            SELECT 
                file_path, fi...
2025-09-13 01:00:13,328 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 실행 성공: 
            SELECT 
                query_type,
 ...
2025-09-13 01:00:13,328 - SourceAnalyzer - INFO - logger.py:68 - === SQL Content 통계 ===
2025-09-13 01:00:13,328 - SourceAnalyzer - INFO - logger.py:68 - 저장된 SQL 내용: 1240개
2025-09-13 01:00:13,328 - SourceAnalyzer - INFO - logger.py:68 - 총 압축 크기: 166275 bytes
2025-09-13 01:00:13,329 - SourceAnalyzer - INFO - logger.py:68 - 평균 압축 크기: 134.09 bytes
2025-09-13 01:00:13,329 - SourceAnalyzer - INFO - logger.py:68 - 최대 압축 크기: 393 bytes
2025-09-13 01:00:13,329 - SourceAnalyzer - INFO - logger.py:68 - 최소 압축 크기: 43 bytes
2025-09-13 01:00:13,329 - SourceAnalyzer - INFO - logger.py:68 - === XML 로딩 완료 ===
2025-09-13 01:00:13,329 - SourceAnalyzer - DEBUG - logger.py:64 - 데이터베이스 연결 해제: D:\Analyzer\CreateMetaDb\projects\sampleSrc\metadata.db
2025-09-13 01:00:13,330 - SourceAnalyzer - DEBUG - logger.py:64 - 데이터베이스 연결 해제: D:\Analyzer\CreateMetaDb\projects\sampleSrc\SqlContent.db
2025-09-13 01:00:13,330 - SourceAnalyzer - INFO - logger.py:68 - SQL Content 데이터베이스 연결 해제
2025-09-13 01:00:13,330 - SourceAnalyzer - DEBUG - logger.py:64 - 데이터베이스 연결 해제: D:\Analyzer\CreateMetaDb\projects\sampleSrc\SqlContent.db
2025-09-13 01:00:13,330 - SourceAnalyzer - INFO - logger.py:68 - SQL Content 데이터베이스 연결 해제
2025-09-13 01:00:13,330 - SourceAnalyzer - INFO - logger.py:68 - 3단계 완료: XML 파일 분석 및 SQL 컴포넌트 등록 + JOIN 관계 분석
2025-09-13 01:00:13,330 - SourceAnalyzer - INFO - logger.py:68 - 1-3단계 테스트 완료
