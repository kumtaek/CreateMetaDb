2025-09-13 22:43:55,978 - SourceAnalyzer - INFO - logger.py:68 - SourceAnalyzer 시작
2025-09-13 22:43:55,984 - SourceAnalyzer - DEBUG - logger.py:64 - 명령행 인자 파싱 완료: {'project_name': 'sampleSrc', 'clear_metadb': False, 'verbose': False, 'output_format': 'html', 'config_file': None, 'log_level': 'INFO', 'dry_run': False, 'force': False}
2025-09-13 22:43:55,984 - SourceAnalyzer - DEBUG - logger.py:64 - 인자 검증 성공
2025-09-13 22:43:55,984 - SourceAnalyzer - INFO - logger.py:68 - 분석 대상 프로젝트: sampleSrc
2025-09-13 22:43:55,986 - SourceAnalyzer - DEBUG - logger.py:64 - 데이터베이스 연결 성공: D:\Analyzer\CreateMetaDb\projects\sampleSrc\metadata.db
2025-09-13 22:43:55,987 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 실행 성공: SELECT project_id FROM projects WHERE project_name...
2025-09-13 22:43:55,987 - SourceAnalyzer - INFO - logger.py:68 - 전역 프로젝트 정보 설정: sampleSrc (ID: 1)
2025-09-13 22:43:55,987 - SourceAnalyzer - INFO - logger.py:68 - 분석 옵션:
2025-09-13 22:43:55,987 - SourceAnalyzer - INFO - logger.py:68 -   - 메타데이터베이스 초기화: False
2025-09-13 22:43:55,987 - SourceAnalyzer - INFO - logger.py:68 -   - 상세 로그: False
2025-09-13 22:43:55,987 - SourceAnalyzer - INFO - logger.py:68 -   - 출력 형식: html
2025-09-13 22:43:55,987 - SourceAnalyzer - INFO - logger.py:68 -   - 드라이런 모드: False
2025-09-13 22:43:55,987 - SourceAnalyzer - INFO - logger.py:68 -   - 강제 실행: False
2025-09-13 22:43:55,987 - SourceAnalyzer - INFO - logger.py:68 - 1단계 실행: 파일 정보 저장 (프로젝트 전체 스캔)
2025-09-13 22:43:55,988 - SourceAnalyzer - INFO - logger.py:68 - === 파일 스캔 시작: 파일 정보 저장 ===
2025-09-13 22:43:55,988 - SourceAnalyzer - DEBUG - logger.py:64 - 데이터베이스 연결 성공: D:\Analyzer\CreateMetaDb\projects\sampleSrc\metadata.db
2025-09-13 22:43:55,989 - SourceAnalyzer - DEBUG - logger.py:64 - 인덱스가 이미 존재함 (무시): CREATE UNIQUE INDEX ix_projects_01 ON projects (pr...
2025-09-13 22:43:55,989 - SourceAnalyzer - DEBUG - logger.py:64 - 인덱스가 이미 존재함 (무시): CREATE UNIQUE INDEX ix_tables_01 ON tables (table_...
2025-09-13 22:43:55,989 - SourceAnalyzer - DEBUG - logger.py:64 - 인덱스가 이미 존재함 (무시): CREATE UNIQUE INDEX ix_columns_01 ON columns (tabl...
2025-09-13 22:43:55,989 - SourceAnalyzer - DEBUG - logger.py:64 - 인덱스가 이미 존재함 (무시): CREATE UNIQUE INDEX ix_files_01 ON files (file_nam...
2025-09-13 22:43:55,989 - SourceAnalyzer - DEBUG - logger.py:64 - 인덱스가 이미 존재함 (무시): CREATE UNIQUE INDEX ix_classes_01 ON classes (clas...
2025-09-13 22:43:55,989 - SourceAnalyzer - DEBUG - logger.py:64 - 인덱스가 이미 존재함 (무시): CREATE INDEX ix_classes_02 ON classes (parent_clas...
2025-09-13 22:43:55,989 - SourceAnalyzer - DEBUG - logger.py:64 - 인덱스가 이미 존재함 (무시): CREATE UNIQUE INDEX ix_components_01 ON components...
2025-09-13 22:43:55,989 - SourceAnalyzer - DEBUG - logger.py:64 - 인덱스가 이미 존재함 (무시): CREATE INDEX ix_components_parent_id ON components...
2025-09-13 22:43:55,989 - SourceAnalyzer - DEBUG - logger.py:64 - 인덱스가 이미 존재함 (무시): CREATE UNIQUE INDEX ix_relationships_01 ON relatio...
2025-09-13 22:43:55,989 - SourceAnalyzer - DEBUG - logger.py:64 - SQL 스크립트 실행 성공: D:\Analyzer\CreateMetaDb\database\create_table_script.sql
2025-09-13 22:43:55,989 - SourceAnalyzer - INFO - logger.py:68 - 메타데이터베이스 초기화 완료: D:\Analyzer\CreateMetaDb\projects\sampleSrc\metadata.db
2025-09-13 22:43:55,989 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 실행 성공: 
                SELECT COUNT(*) as count FROM pro...
2025-09-13 22:43:55,991 - SourceAnalyzer - DEBUG - logger.py:64 - 업데이트 쿼리 실행 성공: 
            UPDATE projects
            SET hash_..., 영향받은 행: 1
2025-09-13 22:43:55,991 - SourceAnalyzer - DEBUG - logger.py:64 - 프로젝트 정보 저장/업데이트 완료: sampleSrc
2025-09-13 22:43:55,991 - SourceAnalyzer - INFO - logger.py:68 - 프로젝트 파일 스캔 시작: D:\Analyzer\CreateMetaDb\projects\sampleSrc
2025-09-13 22:43:56,009 - SourceAnalyzer - DEBUG - logger.py:64 - 디렉토리 스캔 완료: D:\Analyzer\CreateMetaDb\projects\sampleSrc, 파일 수: 42
2025-09-13 22:43:56,011 - SourceAnalyzer - DEBUG - logger.py:64 - 파일 읽기 성공: D:\Analyzer\CreateMetaDb\projects\sampleSrc\config\target_source_config.yaml
2025-09-13 22:43:56,015 - SourceAnalyzer - DEBUG - logger.py:64 - YAML 설정 파일 로드 성공: D:\Analyzer\CreateMetaDb\projects\sampleSrc\config\target_source_config.yaml
2025-09-13 22:43:56,018 - SourceAnalyzer - DEBUG - logger.py:64 - 파일 읽기 성공: D:\Analyzer\CreateMetaDb\projects\sampleSrc\config\target_source_config.yaml
2025-09-13 22:43:56,022 - SourceAnalyzer - DEBUG - logger.py:64 - YAML 설정 파일 로드 성공: D:\Analyzer\CreateMetaDb\projects\sampleSrc\config\target_source_config.yaml
2025-09-13 22:43:56,023 - SourceAnalyzer - DEBUG - logger.py:64 - 파일 읽기 성공: D:\Analyzer\CreateMetaDb\projects\sampleSrc\config\target_source_config.yaml
2025-09-13 22:43:56,026 - SourceAnalyzer - DEBUG - logger.py:64 - YAML 설정 파일 로드 성공: D:\Analyzer\CreateMetaDb\projects\sampleSrc\config\target_source_config.yaml
2025-09-13 22:43:56,028 - SourceAnalyzer - DEBUG - logger.py:64 - 파일 읽기 성공: D:\Analyzer\CreateMetaDb\projects\sampleSrc\config\target_source_config.yaml
2025-09-13 22:43:56,031 - SourceAnalyzer - DEBUG - logger.py:64 - YAML 설정 파일 로드 성공: D:\Analyzer\CreateMetaDb\projects\sampleSrc\config\target_source_config.yaml
2025-09-13 22:43:56,032 - SourceAnalyzer - DEBUG - logger.py:64 - 파일 읽기 성공: D:\Analyzer\CreateMetaDb\projects\sampleSrc\config\target_source_config.yaml
2025-09-13 22:43:56,036 - SourceAnalyzer - DEBUG - logger.py:64 - YAML 설정 파일 로드 성공: D:\Analyzer\CreateMetaDb\projects\sampleSrc\config\target_source_config.yaml
2025-09-13 22:43:56,037 - SourceAnalyzer - DEBUG - logger.py:64 - 파일 읽기 성공: D:\Analyzer\CreateMetaDb\projects\sampleSrc\config\target_source_config.yaml
2025-09-13 22:43:56,041 - SourceAnalyzer - DEBUG - logger.py:64 - YAML 설정 파일 로드 성공: D:\Analyzer\CreateMetaDb\projects\sampleSrc\config\target_source_config.yaml
2025-09-13 22:43:56,042 - SourceAnalyzer - DEBUG - logger.py:64 - 파일 읽기 성공: D:\Analyzer\CreateMetaDb\projects\sampleSrc\config\target_source_config.yaml
2025-09-13 22:43:56,046 - SourceAnalyzer - DEBUG - logger.py:64 - YAML 설정 파일 로드 성공: D:\Analyzer\CreateMetaDb\projects\sampleSrc\config\target_source_config.yaml
2025-09-13 22:43:56,046 - SourceAnalyzer - DEBUG - logger.py:64 - 파일 읽기 성공: D:\Analyzer\CreateMetaDb\projects\sampleSrc\config\target_source_config.yaml
2025-09-13 22:43:56,050 - SourceAnalyzer - DEBUG - logger.py:64 - YAML 설정 파일 로드 성공: D:\Analyzer\CreateMetaDb\projects\sampleSrc\config\target_source_config.yaml
2025-09-13 22:43:56,051 - SourceAnalyzer - DEBUG - logger.py:64 - 파일 읽기 성공: D:\Analyzer\CreateMetaDb\projects\sampleSrc\config\target_source_config.yaml
2025-09-13 22:43:56,055 - SourceAnalyzer - DEBUG - logger.py:64 - YAML 설정 파일 로드 성공: D:\Analyzer\CreateMetaDb\projects\sampleSrc\config\target_source_config.yaml
2025-09-13 22:43:56,056 - SourceAnalyzer - DEBUG - logger.py:64 - 파일 읽기 성공: D:\Analyzer\CreateMetaDb\projects\sampleSrc\config\target_source_config.yaml
2025-09-13 22:43:56,060 - SourceAnalyzer - DEBUG - logger.py:64 - YAML 설정 파일 로드 성공: D:\Analyzer\CreateMetaDb\projects\sampleSrc\config\target_source_config.yaml
2025-09-13 22:43:56,061 - SourceAnalyzer - DEBUG - logger.py:64 - 파일 읽기 성공: D:\Analyzer\CreateMetaDb\projects\sampleSrc\config\target_source_config.yaml
2025-09-13 22:43:56,064 - SourceAnalyzer - DEBUG - logger.py:64 - YAML 설정 파일 로드 성공: D:\Analyzer\CreateMetaDb\projects\sampleSrc\config\target_source_config.yaml
2025-09-13 22:43:56,065 - SourceAnalyzer - DEBUG - logger.py:64 - 파일 읽기 성공: D:\Analyzer\CreateMetaDb\projects\sampleSrc\config\target_source_config.yaml
2025-09-13 22:43:56,069 - SourceAnalyzer - DEBUG - logger.py:64 - YAML 설정 파일 로드 성공: D:\Analyzer\CreateMetaDb\projects\sampleSrc\config\target_source_config.yaml
2025-09-13 22:43:56,070 - SourceAnalyzer - DEBUG - logger.py:64 - 파일 읽기 성공: D:\Analyzer\CreateMetaDb\projects\sampleSrc\config\target_source_config.yaml
2025-09-13 22:43:56,074 - SourceAnalyzer - DEBUG - logger.py:64 - YAML 설정 파일 로드 성공: D:\Analyzer\CreateMetaDb\projects\sampleSrc\config\target_source_config.yaml
2025-09-13 22:43:56,074 - SourceAnalyzer - DEBUG - logger.py:64 - 파일 읽기 성공: D:\Analyzer\CreateMetaDb\projects\sampleSrc\config\target_source_config.yaml
2025-09-13 22:43:56,078 - SourceAnalyzer - DEBUG - logger.py:64 - YAML 설정 파일 로드 성공: D:\Analyzer\CreateMetaDb\projects\sampleSrc\config\target_source_config.yaml
2025-09-13 22:43:56,079 - SourceAnalyzer - DEBUG - logger.py:64 - 파일 읽기 성공: D:\Analyzer\CreateMetaDb\projects\sampleSrc\config\target_source_config.yaml
2025-09-13 22:43:56,083 - SourceAnalyzer - DEBUG - logger.py:64 - YAML 설정 파일 로드 성공: D:\Analyzer\CreateMetaDb\projects\sampleSrc\config\target_source_config.yaml
2025-09-13 22:43:56,083 - SourceAnalyzer - DEBUG - logger.py:64 - 파일 읽기 성공: D:\Analyzer\CreateMetaDb\projects\sampleSrc\config\target_source_config.yaml
2025-09-13 22:43:56,087 - SourceAnalyzer - DEBUG - logger.py:64 - YAML 설정 파일 로드 성공: D:\Analyzer\CreateMetaDb\projects\sampleSrc\config\target_source_config.yaml
2025-09-13 22:43:56,088 - SourceAnalyzer - DEBUG - logger.py:64 - 파일 읽기 성공: D:\Analyzer\CreateMetaDb\projects\sampleSrc\config\target_source_config.yaml
2025-09-13 22:43:56,092 - SourceAnalyzer - DEBUG - logger.py:64 - YAML 설정 파일 로드 성공: D:\Analyzer\CreateMetaDb\projects\sampleSrc\config\target_source_config.yaml
2025-09-13 22:43:56,093 - SourceAnalyzer - DEBUG - logger.py:64 - 파일 읽기 성공: D:\Analyzer\CreateMetaDb\projects\sampleSrc\config\target_source_config.yaml
2025-09-13 22:43:56,097 - SourceAnalyzer - DEBUG - logger.py:64 - YAML 설정 파일 로드 성공: D:\Analyzer\CreateMetaDb\projects\sampleSrc\config\target_source_config.yaml
2025-09-13 22:43:56,098 - SourceAnalyzer - DEBUG - logger.py:64 - 파일 읽기 성공: D:\Analyzer\CreateMetaDb\projects\sampleSrc\config\target_source_config.yaml
2025-09-13 22:43:56,101 - SourceAnalyzer - DEBUG - logger.py:64 - YAML 설정 파일 로드 성공: D:\Analyzer\CreateMetaDb\projects\sampleSrc\config\target_source_config.yaml
2025-09-13 22:43:56,102 - SourceAnalyzer - DEBUG - logger.py:64 - 파일 읽기 성공: D:\Analyzer\CreateMetaDb\projects\sampleSrc\config\target_source_config.yaml
2025-09-13 22:43:56,106 - SourceAnalyzer - DEBUG - logger.py:64 - YAML 설정 파일 로드 성공: D:\Analyzer\CreateMetaDb\projects\sampleSrc\config\target_source_config.yaml
2025-09-13 22:43:56,107 - SourceAnalyzer - DEBUG - logger.py:64 - 파일 읽기 성공: D:\Analyzer\CreateMetaDb\projects\sampleSrc\config\target_source_config.yaml
2025-09-13 22:43:56,111 - SourceAnalyzer - DEBUG - logger.py:64 - YAML 설정 파일 로드 성공: D:\Analyzer\CreateMetaDb\projects\sampleSrc\config\target_source_config.yaml
2025-09-13 22:43:56,111 - SourceAnalyzer - DEBUG - logger.py:64 - 파일 읽기 성공: D:\Analyzer\CreateMetaDb\projects\sampleSrc\config\target_source_config.yaml
2025-09-13 22:43:56,115 - SourceAnalyzer - DEBUG - logger.py:64 - YAML 설정 파일 로드 성공: D:\Analyzer\CreateMetaDb\projects\sampleSrc\config\target_source_config.yaml
2025-09-13 22:43:56,116 - SourceAnalyzer - DEBUG - logger.py:64 - 파일 읽기 성공: D:\Analyzer\CreateMetaDb\projects\sampleSrc\config\target_source_config.yaml
2025-09-13 22:43:56,120 - SourceAnalyzer - DEBUG - logger.py:64 - YAML 설정 파일 로드 성공: D:\Analyzer\CreateMetaDb\projects\sampleSrc\config\target_source_config.yaml
2025-09-13 22:43:56,121 - SourceAnalyzer - DEBUG - logger.py:64 - 파일 읽기 성공: D:\Analyzer\CreateMetaDb\projects\sampleSrc\config\target_source_config.yaml
2025-09-13 22:43:56,125 - SourceAnalyzer - DEBUG - logger.py:64 - YAML 설정 파일 로드 성공: D:\Analyzer\CreateMetaDb\projects\sampleSrc\config\target_source_config.yaml
2025-09-13 22:43:56,126 - SourceAnalyzer - DEBUG - logger.py:64 - 파일 읽기 성공: D:\Analyzer\CreateMetaDb\projects\sampleSrc\config\target_source_config.yaml
2025-09-13 22:43:56,130 - SourceAnalyzer - DEBUG - logger.py:64 - YAML 설정 파일 로드 성공: D:\Analyzer\CreateMetaDb\projects\sampleSrc\config\target_source_config.yaml
2025-09-13 22:43:56,131 - SourceAnalyzer - DEBUG - logger.py:64 - 파일 읽기 성공: D:\Analyzer\CreateMetaDb\projects\sampleSrc\config\target_source_config.yaml
2025-09-13 22:43:56,135 - SourceAnalyzer - DEBUG - logger.py:64 - YAML 설정 파일 로드 성공: D:\Analyzer\CreateMetaDb\projects\sampleSrc\config\target_source_config.yaml
2025-09-13 22:43:56,135 - SourceAnalyzer - DEBUG - logger.py:64 - 파일 읽기 성공: D:\Analyzer\CreateMetaDb\projects\sampleSrc\config\target_source_config.yaml
2025-09-13 22:43:56,139 - SourceAnalyzer - DEBUG - logger.py:64 - YAML 설정 파일 로드 성공: D:\Analyzer\CreateMetaDb\projects\sampleSrc\config\target_source_config.yaml
2025-09-13 22:43:56,140 - SourceAnalyzer - DEBUG - logger.py:64 - 파일 읽기 성공: D:\Analyzer\CreateMetaDb\projects\sampleSrc\config\target_source_config.yaml
2025-09-13 22:43:56,144 - SourceAnalyzer - DEBUG - logger.py:64 - YAML 설정 파일 로드 성공: D:\Analyzer\CreateMetaDb\projects\sampleSrc\config\target_source_config.yaml
2025-09-13 22:43:56,145 - SourceAnalyzer - DEBUG - logger.py:64 - 파일 읽기 성공: D:\Analyzer\CreateMetaDb\projects\sampleSrc\config\target_source_config.yaml
2025-09-13 22:43:56,149 - SourceAnalyzer - DEBUG - logger.py:64 - YAML 설정 파일 로드 성공: D:\Analyzer\CreateMetaDb\projects\sampleSrc\config\target_source_config.yaml
2025-09-13 22:43:56,149 - SourceAnalyzer - DEBUG - logger.py:64 - 파일 읽기 성공: D:\Analyzer\CreateMetaDb\projects\sampleSrc\config\target_source_config.yaml
2025-09-13 22:43:56,153 - SourceAnalyzer - DEBUG - logger.py:64 - YAML 설정 파일 로드 성공: D:\Analyzer\CreateMetaDb\projects\sampleSrc\config\target_source_config.yaml
2025-09-13 22:43:56,154 - SourceAnalyzer - DEBUG - logger.py:64 - 파일 읽기 성공: D:\Analyzer\CreateMetaDb\projects\sampleSrc\config\target_source_config.yaml
2025-09-13 22:43:56,158 - SourceAnalyzer - DEBUG - logger.py:64 - YAML 설정 파일 로드 성공: D:\Analyzer\CreateMetaDb\projects\sampleSrc\config\target_source_config.yaml
2025-09-13 22:43:56,159 - SourceAnalyzer - DEBUG - logger.py:64 - 파일 읽기 성공: D:\Analyzer\CreateMetaDb\projects\sampleSrc\config\target_source_config.yaml
2025-09-13 22:43:56,163 - SourceAnalyzer - DEBUG - logger.py:64 - YAML 설정 파일 로드 성공: D:\Analyzer\CreateMetaDb\projects\sampleSrc\config\target_source_config.yaml
2025-09-13 22:43:56,164 - SourceAnalyzer - DEBUG - logger.py:64 - 파일 읽기 성공: D:\Analyzer\CreateMetaDb\projects\sampleSrc\config\target_source_config.yaml
2025-09-13 22:43:56,168 - SourceAnalyzer - DEBUG - logger.py:64 - YAML 설정 파일 로드 성공: D:\Analyzer\CreateMetaDb\projects\sampleSrc\config\target_source_config.yaml
2025-09-13 22:43:56,169 - SourceAnalyzer - DEBUG - logger.py:64 - 파일 읽기 성공: D:\Analyzer\CreateMetaDb\projects\sampleSrc\config\target_source_config.yaml
2025-09-13 22:43:56,172 - SourceAnalyzer - DEBUG - logger.py:64 - YAML 설정 파일 로드 성공: D:\Analyzer\CreateMetaDb\projects\sampleSrc\config\target_source_config.yaml
2025-09-13 22:43:56,173 - SourceAnalyzer - INFO - logger.py:68 - 파일 스캔 완료: 총 35개 파일
2025-09-13 22:43:56,173 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 실행 성공: 
                SELECT COUNT(*) as count FROM fil...
2025-09-13 22:43:56,173 - SourceAnalyzer - DEBUG - logger.py:64 - 업데이트 쿼리 실행 성공: 
            UPDATE files
            SET file_typ..., 영향받은 행: 1
2025-09-13 22:43:56,173 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 실행 성공: 
                SELECT COUNT(*) as count FROM fil...
2025-09-13 22:43:56,173 - SourceAnalyzer - DEBUG - logger.py:64 - 업데이트 쿼리 실행 성공: 
            UPDATE files
            SET file_typ..., 영향받은 행: 1
2025-09-13 22:43:56,173 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 실행 성공: 
                SELECT COUNT(*) as count FROM fil...
2025-09-13 22:43:56,173 - SourceAnalyzer - DEBUG - logger.py:64 - 업데이트 쿼리 실행 성공: 
            UPDATE files
            SET file_typ..., 영향받은 행: 1
2025-09-13 22:43:56,174 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 실행 성공: 
                SELECT COUNT(*) as count FROM fil...
2025-09-13 22:43:56,174 - SourceAnalyzer - DEBUG - logger.py:64 - 업데이트 쿼리 실행 성공: 
            UPDATE files
            SET file_typ..., 영향받은 행: 1
2025-09-13 22:43:56,174 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 실행 성공: 
                SELECT COUNT(*) as count FROM fil...
2025-09-13 22:43:56,174 - SourceAnalyzer - DEBUG - logger.py:64 - 업데이트 쿼리 실행 성공: 
            UPDATE files
            SET file_typ..., 영향받은 행: 1
2025-09-13 22:43:56,174 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 실행 성공: 
                SELECT COUNT(*) as count FROM fil...
2025-09-13 22:43:56,174 - SourceAnalyzer - DEBUG - logger.py:64 - 업데이트 쿼리 실행 성공: 
            UPDATE files
            SET file_typ..., 영향받은 행: 1
2025-09-13 22:43:56,174 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 실행 성공: 
                SELECT COUNT(*) as count FROM fil...
2025-09-13 22:43:56,174 - SourceAnalyzer - DEBUG - logger.py:64 - 업데이트 쿼리 실행 성공: 
            UPDATE files
            SET file_typ..., 영향받은 행: 1
2025-09-13 22:43:56,174 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 실행 성공: 
                SELECT COUNT(*) as count FROM fil...
2025-09-13 22:43:56,174 - SourceAnalyzer - DEBUG - logger.py:64 - 업데이트 쿼리 실행 성공: 
            UPDATE files
            SET file_typ..., 영향받은 행: 1
2025-09-13 22:43:56,174 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 실행 성공: 
                SELECT COUNT(*) as count FROM fil...
2025-09-13 22:43:56,174 - SourceAnalyzer - DEBUG - logger.py:64 - 업데이트 쿼리 실행 성공: 
            UPDATE files
            SET file_typ..., 영향받은 행: 1
2025-09-13 22:43:56,174 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 실행 성공: 
                SELECT COUNT(*) as count FROM fil...
2025-09-13 22:43:56,174 - SourceAnalyzer - DEBUG - logger.py:64 - 업데이트 쿼리 실행 성공: 
            UPDATE files
            SET file_typ..., 영향받은 행: 1
2025-09-13 22:43:56,174 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 실행 성공: 
                SELECT COUNT(*) as count FROM fil...
2025-09-13 22:43:56,174 - SourceAnalyzer - DEBUG - logger.py:64 - 업데이트 쿼리 실행 성공: 
            UPDATE files
            SET file_typ..., 영향받은 행: 1
2025-09-13 22:43:56,175 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 실행 성공: 
                SELECT COUNT(*) as count FROM fil...
2025-09-13 22:43:56,175 - SourceAnalyzer - DEBUG - logger.py:64 - 업데이트 쿼리 실행 성공: 
            UPDATE files
            SET file_typ..., 영향받은 행: 1
2025-09-13 22:43:56,175 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 실행 성공: 
                SELECT COUNT(*) as count FROM fil...
2025-09-13 22:43:56,175 - SourceAnalyzer - DEBUG - logger.py:64 - 업데이트 쿼리 실행 성공: 
            UPDATE files
            SET file_typ..., 영향받은 행: 1
2025-09-13 22:43:56,175 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 실행 성공: 
                SELECT COUNT(*) as count FROM fil...
2025-09-13 22:43:56,175 - SourceAnalyzer - DEBUG - logger.py:64 - 업데이트 쿼리 실행 성공: 
            UPDATE files
            SET file_typ..., 영향받은 행: 1
2025-09-13 22:43:56,175 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 실행 성공: 
                SELECT COUNT(*) as count FROM fil...
2025-09-13 22:43:56,175 - SourceAnalyzer - DEBUG - logger.py:64 - 업데이트 쿼리 실행 성공: 
            UPDATE files
            SET file_typ..., 영향받은 행: 1
2025-09-13 22:43:56,175 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 실행 성공: 
                SELECT COUNT(*) as count FROM fil...
2025-09-13 22:43:56,175 - SourceAnalyzer - DEBUG - logger.py:64 - 업데이트 쿼리 실행 성공: 
            UPDATE files
            SET file_typ..., 영향받은 행: 1
2025-09-13 22:43:56,175 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 실행 성공: 
                SELECT COUNT(*) as count FROM fil...
2025-09-13 22:43:56,175 - SourceAnalyzer - DEBUG - logger.py:64 - 업데이트 쿼리 실행 성공: 
            UPDATE files
            SET file_typ..., 영향받은 행: 1
2025-09-13 22:43:56,175 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 실행 성공: 
                SELECT COUNT(*) as count FROM fil...
2025-09-13 22:43:56,175 - SourceAnalyzer - DEBUG - logger.py:64 - 업데이트 쿼리 실행 성공: 
            UPDATE files
            SET file_typ..., 영향받은 행: 1
2025-09-13 22:43:56,175 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 실행 성공: 
                SELECT COUNT(*) as count FROM fil...
2025-09-13 22:43:56,175 - SourceAnalyzer - DEBUG - logger.py:64 - 업데이트 쿼리 실행 성공: 
            UPDATE files
            SET file_typ..., 영향받은 행: 1
2025-09-13 22:43:56,175 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 실행 성공: 
                SELECT COUNT(*) as count FROM fil...
2025-09-13 22:43:56,175 - SourceAnalyzer - DEBUG - logger.py:64 - 업데이트 쿼리 실행 성공: 
            UPDATE files
            SET file_typ..., 영향받은 행: 1
2025-09-13 22:43:56,176 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 실행 성공: 
                SELECT COUNT(*) as count FROM fil...
2025-09-13 22:43:56,176 - SourceAnalyzer - DEBUG - logger.py:64 - 업데이트 쿼리 실행 성공: 
            UPDATE files
            SET file_typ..., 영향받은 행: 1
2025-09-13 22:43:56,176 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 실행 성공: 
                SELECT COUNT(*) as count FROM fil...
2025-09-13 22:43:56,176 - SourceAnalyzer - DEBUG - logger.py:64 - 업데이트 쿼리 실행 성공: 
            UPDATE files
            SET file_typ..., 영향받은 행: 1
2025-09-13 22:43:56,176 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 실행 성공: 
                SELECT COUNT(*) as count FROM fil...
2025-09-13 22:43:56,176 - SourceAnalyzer - DEBUG - logger.py:64 - 업데이트 쿼리 실행 성공: 
            UPDATE files
            SET file_typ..., 영향받은 행: 1
2025-09-13 22:43:56,176 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 실행 성공: 
                SELECT COUNT(*) as count FROM fil...
2025-09-13 22:43:56,176 - SourceAnalyzer - DEBUG - logger.py:64 - 업데이트 쿼리 실행 성공: 
            UPDATE files
            SET file_typ..., 영향받은 행: 1
2025-09-13 22:43:56,176 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 실행 성공: 
                SELECT COUNT(*) as count FROM fil...
2025-09-13 22:43:56,176 - SourceAnalyzer - DEBUG - logger.py:64 - 업데이트 쿼리 실행 성공: 
            UPDATE files
            SET file_typ..., 영향받은 행: 1
2025-09-13 22:43:56,176 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 실행 성공: 
                SELECT COUNT(*) as count FROM fil...
2025-09-13 22:43:56,176 - SourceAnalyzer - DEBUG - logger.py:64 - 업데이트 쿼리 실행 성공: 
            UPDATE files
            SET file_typ..., 영향받은 행: 1
2025-09-13 22:43:56,176 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 실행 성공: 
                SELECT COUNT(*) as count FROM fil...
2025-09-13 22:43:56,176 - SourceAnalyzer - DEBUG - logger.py:64 - 업데이트 쿼리 실행 성공: 
            UPDATE files
            SET file_typ..., 영향받은 행: 1
2025-09-13 22:43:56,176 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 실행 성공: 
                SELECT COUNT(*) as count FROM fil...
2025-09-13 22:43:56,176 - SourceAnalyzer - DEBUG - logger.py:64 - 업데이트 쿼리 실행 성공: 
            UPDATE files
            SET file_typ..., 영향받은 행: 1
2025-09-13 22:43:56,176 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 실행 성공: 
                SELECT COUNT(*) as count FROM fil...
2025-09-13 22:43:56,177 - SourceAnalyzer - DEBUG - logger.py:64 - 업데이트 쿼리 실행 성공: 
            UPDATE files
            SET file_typ..., 영향받은 행: 1
2025-09-13 22:43:56,177 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 실행 성공: 
                SELECT COUNT(*) as count FROM fil...
2025-09-13 22:43:56,177 - SourceAnalyzer - DEBUG - logger.py:64 - 업데이트 쿼리 실행 성공: 
            UPDATE files
            SET file_typ..., 영향받은 행: 1
2025-09-13 22:43:56,177 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 실행 성공: 
                SELECT COUNT(*) as count FROM fil...
2025-09-13 22:43:56,177 - SourceAnalyzer - DEBUG - logger.py:64 - 업데이트 쿼리 실행 성공: 
            UPDATE files
            SET file_typ..., 영향받은 행: 1
2025-09-13 22:43:56,177 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 실행 성공: 
                SELECT COUNT(*) as count FROM fil...
2025-09-13 22:43:56,177 - SourceAnalyzer - DEBUG - logger.py:64 - 업데이트 쿼리 실행 성공: 
            UPDATE files
            SET file_typ..., 영향받은 행: 1
2025-09-13 22:43:56,177 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 실행 성공: 
                SELECT COUNT(*) as count FROM fil...
2025-09-13 22:43:56,177 - SourceAnalyzer - DEBUG - logger.py:64 - 업데이트 쿼리 실행 성공: 
            UPDATE files
            SET file_typ..., 영향받은 행: 1
2025-09-13 22:43:56,177 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 실행 성공: 
                SELECT COUNT(*) as count FROM fil...
2025-09-13 22:43:56,177 - SourceAnalyzer - DEBUG - logger.py:64 - 업데이트 쿼리 실행 성공: 
            UPDATE files
            SET file_typ..., 영향받은 행: 1
2025-09-13 22:43:56,177 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 실행 성공: 
                SELECT COUNT(*) as count FROM fil...
2025-09-13 22:43:56,177 - SourceAnalyzer - DEBUG - logger.py:64 - 업데이트 쿼리 실행 성공: 
            UPDATE files
            SET file_typ..., 영향받은 행: 1
2025-09-13 22:43:56,177 - SourceAnalyzer - INFO - logger.py:68 - 파일 정보 저장 완료: 35개 파일
2025-09-13 22:43:56,177 - SourceAnalyzer - DEBUG - logger.py:64 - 업데이트 쿼리 실행 성공: UPDATE projects SET total_files = ? WHERE project_..., 영향받은 행: 1
2025-09-13 22:43:56,177 - SourceAnalyzer - DEBUG - logger.py:64 - 프로젝트 총 파일 수 업데이트: 35
2025-09-13 22:43:56,177 - SourceAnalyzer - INFO - logger.py:68 - === 파일 스캔 통계 ===
2025-09-13 22:43:56,177 - SourceAnalyzer - INFO - logger.py:68 - 총 파일 수: 35
2025-09-13 22:43:56,178 - SourceAnalyzer - INFO - logger.py:68 - 성공 스캔: 35
2025-09-13 22:43:56,178 - SourceAnalyzer - INFO - logger.py:68 - 오류 파일: 0
2025-09-13 22:43:56,178 - SourceAnalyzer - INFO - logger.py:68 - Java 파일: 19
2025-09-13 22:43:56,178 - SourceAnalyzer - INFO - logger.py:68 - XML 파일: 6
2025-09-13 22:43:56,178 - SourceAnalyzer - INFO - logger.py:68 - JSP 파일: 8
2025-09-13 22:43:56,178 - SourceAnalyzer - INFO - logger.py:68 - SQL 파일: 0
2025-09-13 22:43:56,178 - SourceAnalyzer - INFO - logger.py:68 - CSV 파일: 2
2025-09-13 22:43:56,178 - SourceAnalyzer - INFO - logger.py:68 - 기타 파일: 0
2025-09-13 22:43:56,178 - SourceAnalyzer - INFO - logger.py:68 - === 파일 스캔 완료 ===
2025-09-13 22:43:56,178 - SourceAnalyzer - DEBUG - logger.py:64 - 데이터베이스 연결 해제: D:\Analyzer\CreateMetaDb\projects\sampleSrc\metadata.db
2025-09-13 22:43:56,178 - SourceAnalyzer - INFO - logger.py:68 - 1단계 완료: 파일 정보 저장
2025-09-13 22:43:56,178 - SourceAnalyzer - INFO - logger.py:68 - 2단계 실행: 데이터베이스 구조 저장 및 컴포넌트 생성
2025-09-13 22:43:56,178 - SourceAnalyzer - INFO - logger.py:68 - === 데이터베이스 로딩 시작: 데이터베이스 구조 저장 ===
2025-09-13 22:43:56,180 - SourceAnalyzer - DEBUG - logger.py:64 - 데이터베이스 연결 성공: D:\Analyzer\CreateMetaDb\projects\sampleSrc\metadata.db
2025-09-13 22:43:56,180 - SourceAnalyzer - INFO - logger.py:68 - 인코딩 문제 감지, 다른 인코딩으로 재시도: ALL_TABLES.csv
2025-09-13 22:43:56,181 - SourceAnalyzer - DEBUG - logger.py:64 - 파일 읽기 성공 (cp949): D:\Analyzer\CreateMetaDb\projects\sampleSrc\db_schema\ALL_TABLES.csv
2025-09-13 22:43:56,181 - SourceAnalyzer - INFO - logger.py:68 - CSV 파일 로드 완료: D:\Analyzer\CreateMetaDb\projects\sampleSrc\db_schema\ALL_TABLES.csv, 16개 행
2025-09-13 22:43:56,181 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 실행 성공: 
                SELECT f.file_id 
               ...
2025-09-13 22:43:56,181 - SourceAnalyzer - DEBUG - logger.py:64 - 배치 쿼리 실행 성공: 
            INSERT OR IGNORE INTO tables (project..., 처리된 행: 16
2025-09-13 22:43:56,181 - SourceAnalyzer - INFO - logger.py:68 - 테이블 정보 저장 완료: 16개 테이블 (오류: 0개)
2025-09-13 22:43:56,181 - SourceAnalyzer - INFO - logger.py:68 - 인코딩 문제 감지, 다른 인코딩으로 재시도: ALL_TAB_COLUMNS.csv
2025-09-13 22:43:56,182 - SourceAnalyzer - DEBUG - logger.py:64 - 파일 읽기 성공 (cp949): D:\Analyzer\CreateMetaDb\projects\sampleSrc\db_schema\ALL_TAB_COLUMNS.csv
2025-09-13 22:43:56,182 - SourceAnalyzer - INFO - logger.py:68 - CSV 파일 로드 완료: D:\Analyzer\CreateMetaDb\projects\sampleSrc\db_schema\ALL_TAB_COLUMNS.csv, 91개 행
2025-09-13 22:43:56,182 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 실행 성공: 
                SELECT t.table_id 
              ...
2025-09-13 22:43:56,182 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 실행 성공: 
                SELECT t.table_id 
              ...
2025-09-13 22:43:56,182 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 실행 성공: 
                SELECT t.table_id 
              ...
2025-09-13 22:43:56,182 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 실행 성공: 
                SELECT t.table_id 
              ...
2025-09-13 22:43:56,182 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 실행 성공: 
                SELECT t.table_id 
              ...
2025-09-13 22:43:56,182 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 실행 성공: 
                SELECT t.table_id 
              ...
2025-09-13 22:43:56,182 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 실행 성공: 
                SELECT t.table_id 
              ...
2025-09-13 22:43:56,182 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 실행 성공: 
                SELECT t.table_id 
              ...
2025-09-13 22:43:56,182 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 실행 성공: 
                SELECT t.table_id 
              ...
2025-09-13 22:43:56,183 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 실행 성공: 
                SELECT t.table_id 
              ...
2025-09-13 22:43:56,183 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 실행 성공: 
                SELECT t.table_id 
              ...
2025-09-13 22:43:56,183 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 실행 성공: 
                SELECT t.table_id 
              ...
2025-09-13 22:43:56,183 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 실행 성공: 
                SELECT t.table_id 
              ...
2025-09-13 22:43:56,183 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 실행 성공: 
                SELECT t.table_id 
              ...
2025-09-13 22:43:56,183 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 실행 성공: 
                SELECT t.table_id 
              ...
2025-09-13 22:43:56,183 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 실행 성공: 
                SELECT t.table_id 
              ...
2025-09-13 22:43:56,183 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 실행 성공: 
                SELECT t.table_id 
              ...
2025-09-13 22:43:56,183 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 실행 성공: 
                SELECT t.table_id 
              ...
2025-09-13 22:43:56,183 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 실행 성공: 
                SELECT t.table_id 
              ...
2025-09-13 22:43:56,183 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 실행 성공: 
                SELECT t.table_id 
              ...
2025-09-13 22:43:56,183 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 실행 성공: 
                SELECT t.table_id 
              ...
2025-09-13 22:43:56,183 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 실행 성공: 
                SELECT t.table_id 
              ...
2025-09-13 22:43:56,183 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 실행 성공: 
                SELECT t.table_id 
              ...
2025-09-13 22:43:56,183 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 실행 성공: 
                SELECT t.table_id 
              ...
2025-09-13 22:43:56,183 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 실행 성공: 
                SELECT t.table_id 
              ...
2025-09-13 22:43:56,183 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 실행 성공: 
                SELECT t.table_id 
              ...
2025-09-13 22:43:56,183 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 실행 성공: 
                SELECT t.table_id 
              ...
2025-09-13 22:43:56,183 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 실행 성공: 
                SELECT t.table_id 
              ...
2025-09-13 22:43:56,184 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 실행 성공: 
                SELECT t.table_id 
              ...
2025-09-13 22:43:56,184 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 실행 성공: 
                SELECT t.table_id 
              ...
2025-09-13 22:43:56,184 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 실행 성공: 
                SELECT t.table_id 
              ...
2025-09-13 22:43:56,184 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 실행 성공: 
                SELECT t.table_id 
              ...
2025-09-13 22:43:56,184 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 실행 성공: 
                SELECT t.table_id 
              ...
2025-09-13 22:43:56,184 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 실행 성공: 
                SELECT t.table_id 
              ...
2025-09-13 22:43:56,184 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 실행 성공: 
                SELECT t.table_id 
              ...
2025-09-13 22:43:56,184 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 실행 성공: 
                SELECT t.table_id 
              ...
2025-09-13 22:43:56,184 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 실행 성공: 
                SELECT t.table_id 
              ...
2025-09-13 22:43:56,184 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 실행 성공: 
                SELECT t.table_id 
              ...
2025-09-13 22:43:56,184 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 실행 성공: 
                SELECT t.table_id 
              ...
2025-09-13 22:43:56,184 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 실행 성공: 
                SELECT t.table_id 
              ...
2025-09-13 22:43:56,184 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 실행 성공: 
                SELECT t.table_id 
              ...
2025-09-13 22:43:56,184 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 실행 성공: 
                SELECT t.table_id 
              ...
2025-09-13 22:43:56,184 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 실행 성공: 
                SELECT t.table_id 
              ...
2025-09-13 22:43:56,184 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 실행 성공: 
                SELECT t.table_id 
              ...
2025-09-13 22:43:56,184 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 실행 성공: 
                SELECT t.table_id 
              ...
2025-09-13 22:43:56,184 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 실행 성공: 
                SELECT t.table_id 
              ...
2025-09-13 22:43:56,184 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 실행 성공: 
                SELECT t.table_id 
              ...
2025-09-13 22:43:56,185 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 실행 성공: 
                SELECT t.table_id 
              ...
2025-09-13 22:43:56,185 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 실행 성공: 
                SELECT t.table_id 
              ...
2025-09-13 22:43:56,185 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 실행 성공: 
                SELECT t.table_id 
              ...
2025-09-13 22:43:56,185 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 실행 성공: 
                SELECT t.table_id 
              ...
2025-09-13 22:43:56,185 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 실행 성공: 
                SELECT t.table_id 
              ...
2025-09-13 22:43:56,185 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 실행 성공: 
                SELECT t.table_id 
              ...
2025-09-13 22:43:56,185 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 실행 성공: 
                SELECT t.table_id 
              ...
2025-09-13 22:43:56,185 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 실행 성공: 
                SELECT t.table_id 
              ...
2025-09-13 22:43:56,185 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 실행 성공: 
                SELECT t.table_id 
              ...
2025-09-13 22:43:56,185 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 실행 성공: 
                SELECT t.table_id 
              ...
2025-09-13 22:43:56,185 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 실행 성공: 
                SELECT t.table_id 
              ...
2025-09-13 22:43:56,185 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 실행 성공: 
                SELECT t.table_id 
              ...
2025-09-13 22:43:56,185 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 실행 성공: 
                SELECT t.table_id 
              ...
2025-09-13 22:43:56,185 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 실행 성공: 
                SELECT t.table_id 
              ...
2025-09-13 22:43:56,185 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 실행 성공: 
                SELECT t.table_id 
              ...
2025-09-13 22:43:56,185 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 실행 성공: 
                SELECT t.table_id 
              ...
2025-09-13 22:43:56,185 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 실행 성공: 
                SELECT t.table_id 
              ...
2025-09-13 22:43:56,185 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 실행 성공: 
                SELECT t.table_id 
              ...
2025-09-13 22:43:56,185 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 실행 성공: 
                SELECT t.table_id 
              ...
2025-09-13 22:43:56,186 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 실행 성공: 
                SELECT t.table_id 
              ...
2025-09-13 22:43:56,186 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 실행 성공: 
                SELECT t.table_id 
              ...
2025-09-13 22:43:56,186 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 실행 성공: 
                SELECT t.table_id 
              ...
2025-09-13 22:43:56,186 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 실행 성공: 
                SELECT t.table_id 
              ...
2025-09-13 22:43:56,186 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 실행 성공: 
                SELECT t.table_id 
              ...
2025-09-13 22:43:56,186 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 실행 성공: 
                SELECT t.table_id 
              ...
2025-09-13 22:43:56,186 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 실행 성공: 
                SELECT t.table_id 
              ...
2025-09-13 22:43:56,186 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 실행 성공: 
                SELECT t.table_id 
              ...
2025-09-13 22:43:56,186 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 실행 성공: 
                SELECT t.table_id 
              ...
2025-09-13 22:43:56,186 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 실행 성공: 
                SELECT t.table_id 
              ...
2025-09-13 22:43:56,186 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 실행 성공: 
                SELECT t.table_id 
              ...
2025-09-13 22:43:56,186 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 실행 성공: 
                SELECT t.table_id 
              ...
2025-09-13 22:43:56,186 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 실행 성공: 
                SELECT t.table_id 
              ...
2025-09-13 22:43:56,186 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 실행 성공: 
                SELECT t.table_id 
              ...
2025-09-13 22:43:56,186 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 실행 성공: 
                SELECT t.table_id 
              ...
2025-09-13 22:43:56,186 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 실행 성공: 
                SELECT t.table_id 
              ...
2025-09-13 22:43:56,186 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 실행 성공: 
                SELECT t.table_id 
              ...
2025-09-13 22:43:56,186 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 실행 성공: 
                SELECT t.table_id 
              ...
2025-09-13 22:43:56,186 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 실행 성공: 
                SELECT t.table_id 
              ...
2025-09-13 22:43:56,187 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 실행 성공: 
                SELECT t.table_id 
              ...
2025-09-13 22:43:56,187 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 실행 성공: 
                SELECT t.table_id 
              ...
2025-09-13 22:43:56,187 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 실행 성공: 
                SELECT t.table_id 
              ...
2025-09-13 22:43:56,187 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 실행 성공: 
                SELECT t.table_id 
              ...
2025-09-13 22:43:56,187 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 실행 성공: 
                SELECT t.table_id 
              ...
2025-09-13 22:43:56,187 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 실행 성공: 
                SELECT t.table_id 
              ...
2025-09-13 22:43:56,187 - SourceAnalyzer - DEBUG - logger.py:64 - 배치 쿼리 실행 성공: 
            INSERT OR IGNORE INTO columns (table_..., 처리된 행: 91
2025-09-13 22:43:56,187 - SourceAnalyzer - INFO - logger.py:68 - 컬럼 정보 저장 완료: 91개 컬럼 (오류: 0개)
2025-09-13 22:43:56,187 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 실행 성공: 
                SELECT f.file_id 
               ...
2025-09-13 22:43:56,187 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 실행 성공: 
                SELECT table_id, table_name, tabl...
2025-09-13 22:43:56,188 - SourceAnalyzer - DEBUG - logger.py:64 - 배치 쿼리 실행 성공: 
            INSERT OR IGNORE INTO components (pro..., 처리된 행: 28
2025-09-13 22:43:56,188 - SourceAnalyzer - INFO - logger.py:68 - 테이블 컴포넌트 생성 완료: 28개
2025-09-13 22:43:56,188 - SourceAnalyzer - DEBUG - logger.py:64 - 업데이트 쿼리 실행 성공: 
                UPDATE tables 
                SE..., 영향받은 행: 28
2025-09-13 22:43:56,188 - SourceAnalyzer - DEBUG - logger.py:64 - 테이블 component_id 업데이트 완료
2025-09-13 22:43:56,188 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 실행 성공: 
                SELECT f.file_id 
               ...
2025-09-13 22:43:56,188 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 실행 성공: 
                SELECT c.column_id, c.column_name...
2025-09-13 22:43:56,189 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 실행 성공: 
                    SELECT t.component_id 
      ...
2025-09-13 22:43:56,189 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 실행 성공: 
                    SELECT t.component_id 
      ...
2025-09-13 22:43:56,189 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 실행 성공: 
                    SELECT t.component_id 
      ...
2025-09-13 22:43:56,189 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 실행 성공: 
                    SELECT t.component_id 
      ...
2025-09-13 22:43:56,189 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 실행 성공: 
                    SELECT t.component_id 
      ...
2025-09-13 22:43:56,189 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 실행 성공: 
                    SELECT t.component_id 
      ...
2025-09-13 22:43:56,189 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 실행 성공: 
                    SELECT t.component_id 
      ...
2025-09-13 22:43:56,189 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 실행 성공: 
                    SELECT t.component_id 
      ...
2025-09-13 22:43:56,189 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 실행 성공: 
                    SELECT t.component_id 
      ...
2025-09-13 22:43:56,189 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 실행 성공: 
                    SELECT t.component_id 
      ...
2025-09-13 22:43:56,189 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 실행 성공: 
                    SELECT t.component_id 
      ...
2025-09-13 22:43:56,189 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 실행 성공: 
                    SELECT t.component_id 
      ...
2025-09-13 22:43:56,189 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 실행 성공: 
                    SELECT t.component_id 
      ...
2025-09-13 22:43:56,189 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 실행 성공: 
                    SELECT t.component_id 
      ...
2025-09-13 22:43:56,189 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 실행 성공: 
                    SELECT t.component_id 
      ...
2025-09-13 22:43:56,189 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 실행 성공: 
                    SELECT t.component_id 
      ...
2025-09-13 22:43:56,189 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 실행 성공: 
                    SELECT t.component_id 
      ...
2025-09-13 22:43:56,189 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 실행 성공: 
                    SELECT t.component_id 
      ...
2025-09-13 22:43:56,189 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 실행 성공: 
                    SELECT t.component_id 
      ...
2025-09-13 22:43:56,189 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 실행 성공: 
                    SELECT t.component_id 
      ...
2025-09-13 22:43:56,190 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 실행 성공: 
                    SELECT t.component_id 
      ...
2025-09-13 22:43:56,190 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 실행 성공: 
                    SELECT t.component_id 
      ...
2025-09-13 22:43:56,190 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 실행 성공: 
                    SELECT t.component_id 
      ...
2025-09-13 22:43:56,190 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 실행 성공: 
                    SELECT t.component_id 
      ...
2025-09-13 22:43:56,190 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 실행 성공: 
                    SELECT t.component_id 
      ...
2025-09-13 22:43:56,190 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 실행 성공: 
                    SELECT t.component_id 
      ...
2025-09-13 22:43:56,190 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 실행 성공: 
                    SELECT t.component_id 
      ...
2025-09-13 22:43:56,190 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 실행 성공: 
                    SELECT t.component_id 
      ...
2025-09-13 22:43:56,190 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 실행 성공: 
                    SELECT t.component_id 
      ...
2025-09-13 22:43:56,190 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 실행 성공: 
                    SELECT t.component_id 
      ...
2025-09-13 22:43:56,190 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 실행 성공: 
                    SELECT t.component_id 
      ...
2025-09-13 22:43:56,190 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 실행 성공: 
                    SELECT t.component_id 
      ...
2025-09-13 22:43:56,190 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 실행 성공: 
                    SELECT t.component_id 
      ...
2025-09-13 22:43:56,190 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 실행 성공: 
                    SELECT t.component_id 
      ...
2025-09-13 22:43:56,190 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 실행 성공: 
                    SELECT t.component_id 
      ...
2025-09-13 22:43:56,190 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 실행 성공: 
                    SELECT t.component_id 
      ...
2025-09-13 22:43:56,190 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 실행 성공: 
                    SELECT t.component_id 
      ...
2025-09-13 22:43:56,190 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 실행 성공: 
                    SELECT t.component_id 
      ...
2025-09-13 22:43:56,190 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 실행 성공: 
                    SELECT t.component_id 
      ...
2025-09-13 22:43:56,191 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 실행 성공: 
                    SELECT t.component_id 
      ...
2025-09-13 22:43:56,191 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 실행 성공: 
                    SELECT t.component_id 
      ...
2025-09-13 22:43:56,191 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 실행 성공: 
                    SELECT t.component_id 
      ...
2025-09-13 22:43:56,191 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 실행 성공: 
                    SELECT t.component_id 
      ...
2025-09-13 22:43:56,191 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 실행 성공: 
                    SELECT t.component_id 
      ...
2025-09-13 22:43:56,191 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 실행 성공: 
                    SELECT t.component_id 
      ...
2025-09-13 22:43:56,191 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 실행 성공: 
                    SELECT t.component_id 
      ...
2025-09-13 22:43:56,191 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 실행 성공: 
                    SELECT t.component_id 
      ...
2025-09-13 22:43:56,191 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 실행 성공: 
                    SELECT t.component_id 
      ...
2025-09-13 22:43:56,191 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 실행 성공: 
                    SELECT t.component_id 
      ...
2025-09-13 22:43:56,191 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 실행 성공: 
                    SELECT t.component_id 
      ...
2025-09-13 22:43:56,191 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 실행 성공: 
                    SELECT t.component_id 
      ...
2025-09-13 22:43:56,191 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 실행 성공: 
                    SELECT t.component_id 
      ...
2025-09-13 22:43:56,191 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 실행 성공: 
                    SELECT t.component_id 
      ...
2025-09-13 22:43:56,191 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 실행 성공: 
                    SELECT t.component_id 
      ...
2025-09-13 22:43:56,192 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 실행 성공: 
                    SELECT t.component_id 
      ...
2025-09-13 22:43:56,192 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 실행 성공: 
                    SELECT t.component_id 
      ...
2025-09-13 22:43:56,192 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 실행 성공: 
                    SELECT t.component_id 
      ...
2025-09-13 22:43:56,192 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 실행 성공: 
                    SELECT t.component_id 
      ...
2025-09-13 22:43:56,192 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 실행 성공: 
                    SELECT t.component_id 
      ...
2025-09-13 22:43:56,192 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 실행 성공: 
                    SELECT t.component_id 
      ...
2025-09-13 22:43:56,192 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 실행 성공: 
                    SELECT t.component_id 
      ...
2025-09-13 22:43:56,192 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 실행 성공: 
                    SELECT t.component_id 
      ...
2025-09-13 22:43:56,192 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 실행 성공: 
                    SELECT t.component_id 
      ...
2025-09-13 22:43:56,192 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 실행 성공: 
                    SELECT t.component_id 
      ...
2025-09-13 22:43:56,192 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 실행 성공: 
                    SELECT t.component_id 
      ...
2025-09-13 22:43:56,192 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 실행 성공: 
                    SELECT t.component_id 
      ...
2025-09-13 22:43:56,192 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 실행 성공: 
                    SELECT t.component_id 
      ...
2025-09-13 22:43:56,192 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 실행 성공: 
                    SELECT t.component_id 
      ...
2025-09-13 22:43:56,192 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 실행 성공: 
                    SELECT t.component_id 
      ...
2025-09-13 22:43:56,192 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 실행 성공: 
                    SELECT t.component_id 
      ...
2025-09-13 22:43:56,192 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 실행 성공: 
                    SELECT t.component_id 
      ...
2025-09-13 22:43:56,193 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 실행 성공: 
                    SELECT t.component_id 
      ...
2025-09-13 22:43:56,193 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 실행 성공: 
                    SELECT t.component_id 
      ...
2025-09-13 22:43:56,193 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 실행 성공: 
                    SELECT t.component_id 
      ...
2025-09-13 22:43:56,193 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 실행 성공: 
                    SELECT t.component_id 
      ...
2025-09-13 22:43:56,193 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 실행 성공: 
                    SELECT t.component_id 
      ...
2025-09-13 22:43:56,193 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 실행 성공: 
                    SELECT t.component_id 
      ...
2025-09-13 22:43:56,193 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 실행 성공: 
                    SELECT t.component_id 
      ...
2025-09-13 22:43:56,193 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 실행 성공: 
                    SELECT t.component_id 
      ...
2025-09-13 22:43:56,193 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 실행 성공: 
                    SELECT t.component_id 
      ...
2025-09-13 22:43:56,193 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 실행 성공: 
                    SELECT t.component_id 
      ...
2025-09-13 22:43:56,193 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 실행 성공: 
                    SELECT t.component_id 
      ...
2025-09-13 22:43:56,193 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 실행 성공: 
                    SELECT t.component_id 
      ...
2025-09-13 22:43:56,193 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 실행 성공: 
                    SELECT t.component_id 
      ...
2025-09-13 22:43:56,193 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 실행 성공: 
                    SELECT t.component_id 
      ...
2025-09-13 22:43:56,193 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 실행 성공: 
                    SELECT t.component_id 
      ...
2025-09-13 22:43:56,193 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 실행 성공: 
                    SELECT t.component_id 
      ...
2025-09-13 22:43:56,193 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 실행 성공: 
                    SELECT t.component_id 
      ...
2025-09-13 22:43:56,194 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 실행 성공: 
                    SELECT t.component_id 
      ...
2025-09-13 22:43:56,194 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 실행 성공: 
                    SELECT t.component_id 
      ...
2025-09-13 22:43:56,194 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 실행 성공: 
                    SELECT t.component_id 
      ...
2025-09-13 22:43:56,194 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 실행 성공: 
                    SELECT t.component_id 
      ...
2025-09-13 22:43:56,194 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 실행 성공: 
                    SELECT t.component_id 
      ...
2025-09-13 22:43:56,194 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 실행 성공: 
                    SELECT t.component_id 
      ...
2025-09-13 22:43:56,196 - SourceAnalyzer - DEBUG - logger.py:64 - 배치 쿼리 실행 성공: 
            INSERT OR IGNORE INTO components (pro..., 처리된 행: 94
2025-09-13 22:43:56,196 - SourceAnalyzer - INFO - logger.py:68 - 컬럼 컴포넌트 생성 완료: 94개
2025-09-13 22:43:56,197 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 실행 성공: 
                SELECT component_id FROM componen...
2025-09-13 22:43:56,197 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 실행 성공: 
                SELECT component_id FROM componen...
2025-09-13 22:43:56,197 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 실행 성공: 
                SELECT component_id FROM componen...
2025-09-13 22:43:56,197 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 실행 성공: 
                SELECT component_id FROM componen...
2025-09-13 22:43:56,197 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 실행 성공: 
                SELECT component_id FROM componen...
2025-09-13 22:43:56,197 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 실행 성공: 
                SELECT component_id FROM componen...
2025-09-13 22:43:56,197 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 실행 성공: 
                SELECT component_id FROM componen...
2025-09-13 22:43:56,197 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 실행 성공: 
                SELECT component_id FROM componen...
2025-09-13 22:43:56,197 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 실행 성공: 
                SELECT component_id FROM componen...
2025-09-13 22:43:56,197 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 실행 성공: 
                SELECT component_id FROM componen...
2025-09-13 22:43:56,197 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 실행 성공: 
                SELECT component_id FROM componen...
2025-09-13 22:43:56,197 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 실행 성공: 
                SELECT component_id FROM componen...
2025-09-13 22:43:56,197 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 실행 성공: 
                SELECT component_id FROM componen...
2025-09-13 22:43:56,197 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 실행 성공: 
                SELECT component_id FROM componen...
2025-09-13 22:43:56,197 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 실행 성공: 
                SELECT component_id FROM componen...
2025-09-13 22:43:56,197 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 실행 성공: 
                SELECT component_id FROM componen...
2025-09-13 22:43:56,197 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 실행 성공: 
                SELECT component_id FROM componen...
2025-09-13 22:43:56,198 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 실행 성공: 
                SELECT component_id FROM componen...
2025-09-13 22:43:56,198 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 실행 성공: 
                SELECT component_id FROM componen...
2025-09-13 22:43:56,198 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 실행 성공: 
                SELECT component_id FROM componen...
2025-09-13 22:43:56,198 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 실행 성공: 
                SELECT component_id FROM componen...
2025-09-13 22:43:56,198 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 실행 성공: 
                SELECT component_id FROM componen...
2025-09-13 22:43:56,198 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 실행 성공: 
                SELECT component_id FROM componen...
2025-09-13 22:43:56,198 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 실행 성공: 
                SELECT component_id FROM componen...
2025-09-13 22:43:56,198 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 실행 성공: 
                SELECT component_id FROM componen...
2025-09-13 22:43:56,198 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 실행 성공: 
                SELECT component_id FROM componen...
2025-09-13 22:43:56,198 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 실행 성공: 
                SELECT component_id FROM componen...
2025-09-13 22:43:56,198 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 실행 성공: 
                SELECT component_id FROM componen...
2025-09-13 22:43:56,198 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 실행 성공: 
                SELECT component_id FROM componen...
2025-09-13 22:43:56,198 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 실행 성공: 
                SELECT component_id FROM componen...
2025-09-13 22:43:56,198 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 실행 성공: 
                SELECT component_id FROM componen...
2025-09-13 22:43:56,198 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 실행 성공: 
                SELECT component_id FROM componen...
2025-09-13 22:43:56,198 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 실행 성공: 
                SELECT component_id FROM componen...
2025-09-13 22:43:56,198 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 실행 성공: 
                SELECT component_id FROM componen...
2025-09-13 22:43:56,198 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 실행 성공: 
                SELECT component_id FROM componen...
2025-09-13 22:43:56,198 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 실행 성공: 
                SELECT component_id FROM componen...
2025-09-13 22:43:56,198 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 실행 성공: 
                SELECT component_id FROM componen...
2025-09-13 22:43:56,198 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 실행 성공: 
                SELECT component_id FROM componen...
2025-09-13 22:43:56,199 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 실행 성공: 
                SELECT component_id FROM componen...
2025-09-13 22:43:56,199 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 실행 성공: 
                SELECT component_id FROM componen...
2025-09-13 22:43:56,199 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 실행 성공: 
                SELECT component_id FROM componen...
2025-09-13 22:43:56,199 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 실행 성공: 
                SELECT component_id FROM componen...
2025-09-13 22:43:56,199 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 실행 성공: 
                SELECT component_id FROM componen...
2025-09-13 22:43:56,199 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 실행 성공: 
                SELECT component_id FROM componen...
2025-09-13 22:43:56,199 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 실행 성공: 
                SELECT component_id FROM componen...
2025-09-13 22:43:56,199 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 실행 성공: 
                SELECT component_id FROM componen...
2025-09-13 22:43:56,199 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 실행 성공: 
                SELECT component_id FROM componen...
2025-09-13 22:43:56,199 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 실행 성공: 
                SELECT component_id FROM componen...
2025-09-13 22:43:56,199 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 실행 성공: 
                SELECT component_id FROM componen...
2025-09-13 22:43:56,199 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 실행 성공: 
                SELECT component_id FROM componen...
2025-09-13 22:43:56,199 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 실행 성공: 
                SELECT component_id FROM componen...
2025-09-13 22:43:56,199 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 실행 성공: 
                SELECT component_id FROM componen...
2025-09-13 22:43:56,199 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 실행 성공: 
                SELECT component_id FROM componen...
2025-09-13 22:43:56,199 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 실행 성공: 
                SELECT component_id FROM componen...
2025-09-13 22:43:56,199 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 실행 성공: 
                SELECT component_id FROM componen...
2025-09-13 22:43:56,199 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 실행 성공: 
                SELECT component_id FROM componen...
2025-09-13 22:43:56,199 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 실행 성공: 
                SELECT component_id FROM componen...
2025-09-13 22:43:56,199 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 실행 성공: 
                SELECT component_id FROM componen...
2025-09-13 22:43:56,199 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 실행 성공: 
                SELECT component_id FROM componen...
2025-09-13 22:43:56,199 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 실행 성공: 
                SELECT component_id FROM componen...
2025-09-13 22:43:56,200 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 실행 성공: 
                SELECT component_id FROM componen...
2025-09-13 22:43:56,200 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 실행 성공: 
                SELECT component_id FROM componen...
2025-09-13 22:43:56,200 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 실행 성공: 
                SELECT component_id FROM componen...
2025-09-13 22:43:56,200 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 실행 성공: 
                SELECT component_id FROM componen...
2025-09-13 22:43:56,200 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 실행 성공: 
                SELECT component_id FROM componen...
2025-09-13 22:43:56,200 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 실행 성공: 
                SELECT component_id FROM componen...
2025-09-13 22:43:56,200 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 실행 성공: 
                SELECT component_id FROM componen...
2025-09-13 22:43:56,200 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 실행 성공: 
                SELECT component_id FROM componen...
2025-09-13 22:43:56,200 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 실행 성공: 
                SELECT component_id FROM componen...
2025-09-13 22:43:56,200 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 실행 성공: 
                SELECT component_id FROM componen...
2025-09-13 22:43:56,200 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 실행 성공: 
                SELECT component_id FROM componen...
2025-09-13 22:43:56,200 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 실행 성공: 
                SELECT component_id FROM componen...
2025-09-13 22:43:56,200 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 실행 성공: 
                SELECT component_id FROM componen...
2025-09-13 22:43:56,200 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 실행 성공: 
                SELECT component_id FROM componen...
2025-09-13 22:43:56,200 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 실행 성공: 
                SELECT component_id FROM componen...
2025-09-13 22:43:56,200 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 실행 성공: 
                SELECT component_id FROM componen...
2025-09-13 22:43:56,200 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 실행 성공: 
                SELECT component_id FROM componen...
2025-09-13 22:43:56,200 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 실행 성공: 
                SELECT component_id FROM componen...
2025-09-13 22:43:56,200 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 실행 성공: 
                SELECT component_id FROM componen...
2025-09-13 22:43:56,200 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 실행 성공: 
                SELECT component_id FROM componen...
2025-09-13 22:43:56,200 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 실행 성공: 
                SELECT component_id FROM componen...
2025-09-13 22:43:56,200 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 실행 성공: 
                SELECT component_id FROM componen...
2025-09-13 22:43:56,201 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 실행 성공: 
                SELECT component_id FROM componen...
2025-09-13 22:43:56,201 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 실행 성공: 
                SELECT component_id FROM componen...
2025-09-13 22:43:56,201 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 실행 성공: 
                SELECT component_id FROM componen...
2025-09-13 22:43:56,201 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 실행 성공: 
                SELECT component_id FROM componen...
2025-09-13 22:43:56,201 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 실행 성공: 
                SELECT component_id FROM componen...
2025-09-13 22:43:56,201 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 실행 성공: 
                SELECT component_id FROM componen...
2025-09-13 22:43:56,201 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 실행 성공: 
                SELECT component_id FROM componen...
2025-09-13 22:43:56,201 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 실행 성공: 
                SELECT component_id FROM componen...
2025-09-13 22:43:56,201 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 실행 성공: 
                SELECT component_id FROM componen...
2025-09-13 22:43:56,201 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 실행 성공: 
                SELECT component_id FROM componen...
2025-09-13 22:43:56,201 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 실행 성공: 
                SELECT component_id FROM componen...
2025-09-13 22:43:56,201 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 실행 성공: 
                SELECT component_id FROM componen...
2025-09-13 22:43:56,201 - SourceAnalyzer - DEBUG - logger.py:64 - 업데이트 쿼리 실행 성공: 
            UPDATE columns
            SET compon..., 영향받은 행: 1
2025-09-13 22:43:56,201 - SourceAnalyzer - DEBUG - logger.py:64 - 업데이트 쿼리 실행 성공: 
            UPDATE columns
            SET compon..., 영향받은 행: 1
2025-09-13 22:43:56,201 - SourceAnalyzer - DEBUG - logger.py:64 - 업데이트 쿼리 실행 성공: 
            UPDATE columns
            SET compon..., 영향받은 행: 1
2025-09-13 22:43:56,201 - SourceAnalyzer - DEBUG - logger.py:64 - 업데이트 쿼리 실행 성공: 
            UPDATE columns
            SET compon..., 영향받은 행: 1
2025-09-13 22:43:56,201 - SourceAnalyzer - DEBUG - logger.py:64 - 업데이트 쿼리 실행 성공: 
            UPDATE columns
            SET compon..., 영향받은 행: 1
2025-09-13 22:43:56,201 - SourceAnalyzer - DEBUG - logger.py:64 - 업데이트 쿼리 실행 성공: 
            UPDATE columns
            SET compon..., 영향받은 행: 1
2025-09-13 22:43:56,201 - SourceAnalyzer - DEBUG - logger.py:64 - 업데이트 쿼리 실행 성공: 
            UPDATE columns
            SET compon..., 영향받은 행: 1
2025-09-13 22:43:56,202 - SourceAnalyzer - DEBUG - logger.py:64 - 업데이트 쿼리 실행 성공: 
            UPDATE columns
            SET compon..., 영향받은 행: 1
2025-09-13 22:43:56,202 - SourceAnalyzer - DEBUG - logger.py:64 - 업데이트 쿼리 실행 성공: 
            UPDATE columns
            SET compon..., 영향받은 행: 1
2025-09-13 22:43:56,202 - SourceAnalyzer - DEBUG - logger.py:64 - 업데이트 쿼리 실행 성공: 
            UPDATE columns
            SET compon..., 영향받은 행: 1
2025-09-13 22:43:56,202 - SourceAnalyzer - DEBUG - logger.py:64 - 업데이트 쿼리 실행 성공: 
            UPDATE columns
            SET compon..., 영향받은 행: 1
2025-09-13 22:43:56,202 - SourceAnalyzer - DEBUG - logger.py:64 - 업데이트 쿼리 실행 성공: 
            UPDATE columns
            SET compon..., 영향받은 행: 1
2025-09-13 22:43:56,202 - SourceAnalyzer - DEBUG - logger.py:64 - 업데이트 쿼리 실행 성공: 
            UPDATE columns
            SET compon..., 영향받은 행: 1
2025-09-13 22:43:56,202 - SourceAnalyzer - DEBUG - logger.py:64 - 업데이트 쿼리 실행 성공: 
            UPDATE columns
            SET compon..., 영향받은 행: 1
2025-09-13 22:43:56,202 - SourceAnalyzer - DEBUG - logger.py:64 - 업데이트 쿼리 실행 성공: 
            UPDATE columns
            SET compon..., 영향받은 행: 1
2025-09-13 22:43:56,202 - SourceAnalyzer - DEBUG - logger.py:64 - 업데이트 쿼리 실행 성공: 
            UPDATE columns
            SET compon..., 영향받은 행: 1
2025-09-13 22:43:56,202 - SourceAnalyzer - DEBUG - logger.py:64 - 업데이트 쿼리 실행 성공: 
            UPDATE columns
            SET compon..., 영향받은 행: 1
2025-09-13 22:43:56,202 - SourceAnalyzer - DEBUG - logger.py:64 - 업데이트 쿼리 실행 성공: 
            UPDATE columns
            SET compon..., 영향받은 행: 1
2025-09-13 22:43:56,202 - SourceAnalyzer - DEBUG - logger.py:64 - 업데이트 쿼리 실행 성공: 
            UPDATE columns
            SET compon..., 영향받은 행: 1
2025-09-13 22:43:56,202 - SourceAnalyzer - DEBUG - logger.py:64 - 업데이트 쿼리 실행 성공: 
            UPDATE columns
            SET compon..., 영향받은 행: 1
2025-09-13 22:43:56,202 - SourceAnalyzer - DEBUG - logger.py:64 - 업데이트 쿼리 실행 성공: 
            UPDATE columns
            SET compon..., 영향받은 행: 1
2025-09-13 22:43:56,202 - SourceAnalyzer - DEBUG - logger.py:64 - 업데이트 쿼리 실행 성공: 
            UPDATE columns
            SET compon..., 영향받은 행: 1
2025-09-13 22:43:56,202 - SourceAnalyzer - DEBUG - logger.py:64 - 업데이트 쿼리 실행 성공: 
            UPDATE columns
            SET compon..., 영향받은 행: 1
2025-09-13 22:43:56,202 - SourceAnalyzer - DEBUG - logger.py:64 - 업데이트 쿼리 실행 성공: 
            UPDATE columns
            SET compon..., 영향받은 행: 1
2025-09-13 22:43:56,202 - SourceAnalyzer - DEBUG - logger.py:64 - 업데이트 쿼리 실행 성공: 
            UPDATE columns
            SET compon..., 영향받은 행: 1
2025-09-13 22:43:56,203 - SourceAnalyzer - DEBUG - logger.py:64 - 업데이트 쿼리 실행 성공: 
            UPDATE columns
            SET compon..., 영향받은 행: 1
2025-09-13 22:43:56,203 - SourceAnalyzer - DEBUG - logger.py:64 - 업데이트 쿼리 실행 성공: 
            UPDATE columns
            SET compon..., 영향받은 행: 1
2025-09-13 22:43:56,203 - SourceAnalyzer - DEBUG - logger.py:64 - 업데이트 쿼리 실행 성공: 
            UPDATE columns
            SET compon..., 영향받은 행: 1
2025-09-13 22:43:56,203 - SourceAnalyzer - DEBUG - logger.py:64 - 업데이트 쿼리 실행 성공: 
            UPDATE columns
            SET compon..., 영향받은 행: 1
2025-09-13 22:43:56,203 - SourceAnalyzer - DEBUG - logger.py:64 - 업데이트 쿼리 실행 성공: 
            UPDATE columns
            SET compon..., 영향받은 행: 1
2025-09-13 22:43:56,203 - SourceAnalyzer - DEBUG - logger.py:64 - 업데이트 쿼리 실행 성공: 
            UPDATE columns
            SET compon..., 영향받은 행: 1
2025-09-13 22:43:56,203 - SourceAnalyzer - DEBUG - logger.py:64 - 업데이트 쿼리 실행 성공: 
            UPDATE columns
            SET compon..., 영향받은 행: 1
2025-09-13 22:43:56,203 - SourceAnalyzer - DEBUG - logger.py:64 - 업데이트 쿼리 실행 성공: 
            UPDATE columns
            SET compon..., 영향받은 행: 1
2025-09-13 22:43:56,203 - SourceAnalyzer - DEBUG - logger.py:64 - 업데이트 쿼리 실행 성공: 
            UPDATE columns
            SET compon..., 영향받은 행: 1
2025-09-13 22:43:56,203 - SourceAnalyzer - DEBUG - logger.py:64 - 업데이트 쿼리 실행 성공: 
            UPDATE columns
            SET compon..., 영향받은 행: 1
2025-09-13 22:43:56,203 - SourceAnalyzer - DEBUG - logger.py:64 - 업데이트 쿼리 실행 성공: 
            UPDATE columns
            SET compon..., 영향받은 행: 1
2025-09-13 22:43:56,203 - SourceAnalyzer - DEBUG - logger.py:64 - 업데이트 쿼리 실행 성공: 
            UPDATE columns
            SET compon..., 영향받은 행: 1
2025-09-13 22:43:56,203 - SourceAnalyzer - DEBUG - logger.py:64 - 업데이트 쿼리 실행 성공: 
            UPDATE columns
            SET compon..., 영향받은 행: 1
2025-09-13 22:43:56,203 - SourceAnalyzer - DEBUG - logger.py:64 - 업데이트 쿼리 실행 성공: 
            UPDATE columns
            SET compon..., 영향받은 행: 1
2025-09-13 22:43:56,203 - SourceAnalyzer - DEBUG - logger.py:64 - 업데이트 쿼리 실행 성공: 
            UPDATE columns
            SET compon..., 영향받은 행: 1
2025-09-13 22:43:56,203 - SourceAnalyzer - DEBUG - logger.py:64 - 업데이트 쿼리 실행 성공: 
            UPDATE columns
            SET compon..., 영향받은 행: 1
2025-09-13 22:43:56,203 - SourceAnalyzer - DEBUG - logger.py:64 - 업데이트 쿼리 실행 성공: 
            UPDATE columns
            SET compon..., 영향받은 행: 1
2025-09-13 22:43:56,204 - SourceAnalyzer - DEBUG - logger.py:64 - 업데이트 쿼리 실행 성공: 
            UPDATE columns
            SET compon..., 영향받은 행: 1
2025-09-13 22:43:56,204 - SourceAnalyzer - DEBUG - logger.py:64 - 업데이트 쿼리 실행 성공: 
            UPDATE columns
            SET compon..., 영향받은 행: 1
2025-09-13 22:43:56,204 - SourceAnalyzer - DEBUG - logger.py:64 - 업데이트 쿼리 실행 성공: 
            UPDATE columns
            SET compon..., 영향받은 행: 1
2025-09-13 22:43:56,204 - SourceAnalyzer - DEBUG - logger.py:64 - 업데이트 쿼리 실행 성공: 
            UPDATE columns
            SET compon..., 영향받은 행: 1
2025-09-13 22:43:56,204 - SourceAnalyzer - DEBUG - logger.py:64 - 업데이트 쿼리 실행 성공: 
            UPDATE columns
            SET compon..., 영향받은 행: 1
2025-09-13 22:43:56,204 - SourceAnalyzer - DEBUG - logger.py:64 - 업데이트 쿼리 실행 성공: 
            UPDATE columns
            SET compon..., 영향받은 행: 1
2025-09-13 22:43:56,204 - SourceAnalyzer - DEBUG - logger.py:64 - 업데이트 쿼리 실행 성공: 
            UPDATE columns
            SET compon..., 영향받은 행: 1
2025-09-13 22:43:56,204 - SourceAnalyzer - DEBUG - logger.py:64 - 업데이트 쿼리 실행 성공: 
            UPDATE columns
            SET compon..., 영향받은 행: 1
2025-09-13 22:43:56,204 - SourceAnalyzer - DEBUG - logger.py:64 - 업데이트 쿼리 실행 성공: 
            UPDATE columns
            SET compon..., 영향받은 행: 1
2025-09-13 22:43:56,204 - SourceAnalyzer - DEBUG - logger.py:64 - 업데이트 쿼리 실행 성공: 
            UPDATE columns
            SET compon..., 영향받은 행: 1
2025-09-13 22:43:56,204 - SourceAnalyzer - DEBUG - logger.py:64 - 업데이트 쿼리 실행 성공: 
            UPDATE columns
            SET compon..., 영향받은 행: 1
2025-09-13 22:43:56,204 - SourceAnalyzer - DEBUG - logger.py:64 - 업데이트 쿼리 실행 성공: 
            UPDATE columns
            SET compon..., 영향받은 행: 1
2025-09-13 22:43:56,204 - SourceAnalyzer - DEBUG - logger.py:64 - 업데이트 쿼리 실행 성공: 
            UPDATE columns
            SET compon..., 영향받은 행: 1
2025-09-13 22:43:56,204 - SourceAnalyzer - DEBUG - logger.py:64 - 업데이트 쿼리 실행 성공: 
            UPDATE columns
            SET compon..., 영향받은 행: 1
2025-09-13 22:43:56,204 - SourceAnalyzer - DEBUG - logger.py:64 - 업데이트 쿼리 실행 성공: 
            UPDATE columns
            SET compon..., 영향받은 행: 1
2025-09-13 22:43:56,204 - SourceAnalyzer - DEBUG - logger.py:64 - 업데이트 쿼리 실행 성공: 
            UPDATE columns
            SET compon..., 영향받은 행: 1
2025-09-13 22:43:56,204 - SourceAnalyzer - DEBUG - logger.py:64 - 업데이트 쿼리 실행 성공: 
            UPDATE columns
            SET compon..., 영향받은 행: 1
2025-09-13 22:43:56,205 - SourceAnalyzer - DEBUG - logger.py:64 - 업데이트 쿼리 실행 성공: 
            UPDATE columns
            SET compon..., 영향받은 행: 1
2025-09-13 22:43:56,205 - SourceAnalyzer - DEBUG - logger.py:64 - 업데이트 쿼리 실행 성공: 
            UPDATE columns
            SET compon..., 영향받은 행: 1
2025-09-13 22:43:56,205 - SourceAnalyzer - DEBUG - logger.py:64 - 업데이트 쿼리 실행 성공: 
            UPDATE columns
            SET compon..., 영향받은 행: 1
2025-09-13 22:43:56,205 - SourceAnalyzer - DEBUG - logger.py:64 - 업데이트 쿼리 실행 성공: 
            UPDATE columns
            SET compon..., 영향받은 행: 1
2025-09-13 22:43:56,205 - SourceAnalyzer - DEBUG - logger.py:64 - 업데이트 쿼리 실행 성공: 
            UPDATE columns
            SET compon..., 영향받은 행: 1
2025-09-13 22:43:56,205 - SourceAnalyzer - DEBUG - logger.py:64 - 업데이트 쿼리 실행 성공: 
            UPDATE columns
            SET compon..., 영향받은 행: 1
2025-09-13 22:43:56,205 - SourceAnalyzer - DEBUG - logger.py:64 - 업데이트 쿼리 실행 성공: 
            UPDATE columns
            SET compon..., 영향받은 행: 1
2025-09-13 22:43:56,205 - SourceAnalyzer - DEBUG - logger.py:64 - 업데이트 쿼리 실행 성공: 
            UPDATE columns
            SET compon..., 영향받은 행: 1
2025-09-13 22:43:56,205 - SourceAnalyzer - DEBUG - logger.py:64 - 업데이트 쿼리 실행 성공: 
            UPDATE columns
            SET compon..., 영향받은 행: 1
2025-09-13 22:43:56,205 - SourceAnalyzer - DEBUG - logger.py:64 - 업데이트 쿼리 실행 성공: 
            UPDATE columns
            SET compon..., 영향받은 행: 1
2025-09-13 22:43:56,205 - SourceAnalyzer - DEBUG - logger.py:64 - 업데이트 쿼리 실행 성공: 
            UPDATE columns
            SET compon..., 영향받은 행: 1
2025-09-13 22:43:56,205 - SourceAnalyzer - DEBUG - logger.py:64 - 업데이트 쿼리 실행 성공: 
            UPDATE columns
            SET compon..., 영향받은 행: 1
2025-09-13 22:43:56,205 - SourceAnalyzer - DEBUG - logger.py:64 - 업데이트 쿼리 실행 성공: 
            UPDATE columns
            SET compon..., 영향받은 행: 1
2025-09-13 22:43:56,205 - SourceAnalyzer - DEBUG - logger.py:64 - 업데이트 쿼리 실행 성공: 
            UPDATE columns
            SET compon..., 영향받은 행: 1
2025-09-13 22:43:56,205 - SourceAnalyzer - DEBUG - logger.py:64 - 업데이트 쿼리 실행 성공: 
            UPDATE columns
            SET compon..., 영향받은 행: 1
2025-09-13 22:43:56,205 - SourceAnalyzer - DEBUG - logger.py:64 - 업데이트 쿼리 실행 성공: 
            UPDATE columns
            SET compon..., 영향받은 행: 1
2025-09-13 22:43:56,205 - SourceAnalyzer - DEBUG - logger.py:64 - 업데이트 쿼리 실행 성공: 
            UPDATE columns
            SET compon..., 영향받은 행: 1
2025-09-13 22:43:56,205 - SourceAnalyzer - DEBUG - logger.py:64 - 업데이트 쿼리 실행 성공: 
            UPDATE columns
            SET compon..., 영향받은 행: 1
2025-09-13 22:43:56,206 - SourceAnalyzer - DEBUG - logger.py:64 - 업데이트 쿼리 실행 성공: 
            UPDATE columns
            SET compon..., 영향받은 행: 1
2025-09-13 22:43:56,206 - SourceAnalyzer - DEBUG - logger.py:64 - 업데이트 쿼리 실행 성공: 
            UPDATE columns
            SET compon..., 영향받은 행: 1
2025-09-13 22:43:56,206 - SourceAnalyzer - DEBUG - logger.py:64 - 업데이트 쿼리 실행 성공: 
            UPDATE columns
            SET compon..., 영향받은 행: 1
2025-09-13 22:43:56,206 - SourceAnalyzer - DEBUG - logger.py:64 - 업데이트 쿼리 실행 성공: 
            UPDATE columns
            SET compon..., 영향받은 행: 1
2025-09-13 22:43:56,206 - SourceAnalyzer - DEBUG - logger.py:64 - 업데이트 쿼리 실행 성공: 
            UPDATE columns
            SET compon..., 영향받은 행: 1
2025-09-13 22:43:56,206 - SourceAnalyzer - DEBUG - logger.py:64 - 업데이트 쿼리 실행 성공: 
            UPDATE columns
            SET compon..., 영향받은 행: 1
2025-09-13 22:43:56,206 - SourceAnalyzer - DEBUG - logger.py:64 - 업데이트 쿼리 실행 성공: 
            UPDATE columns
            SET compon..., 영향받은 행: 1
2025-09-13 22:43:56,206 - SourceAnalyzer - DEBUG - logger.py:64 - 업데이트 쿼리 실행 성공: 
            UPDATE columns
            SET compon..., 영향받은 행: 1
2025-09-13 22:43:56,206 - SourceAnalyzer - DEBUG - logger.py:64 - 업데이트 쿼리 실행 성공: 
            UPDATE columns
            SET compon..., 영향받은 행: 1
2025-09-13 22:43:56,206 - SourceAnalyzer - DEBUG - logger.py:64 - 업데이트 쿼리 실행 성공: 
            UPDATE columns
            SET compon..., 영향받은 행: 1
2025-09-13 22:43:56,206 - SourceAnalyzer - DEBUG - logger.py:64 - 업데이트 쿼리 실행 성공: 
            UPDATE columns
            SET compon..., 영향받은 행: 1
2025-09-13 22:43:56,206 - SourceAnalyzer - DEBUG - logger.py:64 - 업데이트 쿼리 실행 성공: 
            UPDATE columns
            SET compon..., 영향받은 행: 1
2025-09-13 22:43:56,206 - SourceAnalyzer - DEBUG - logger.py:64 - 업데이트 쿼리 실행 성공: 
            UPDATE columns
            SET compon..., 영향받은 행: 1
2025-09-13 22:43:56,206 - SourceAnalyzer - DEBUG - logger.py:64 - 업데이트 쿼리 실행 성공: 
            UPDATE columns
            SET compon..., 영향받은 행: 1
2025-09-13 22:43:56,206 - SourceAnalyzer - DEBUG - logger.py:64 - 업데이트 쿼리 실행 성공: 
            UPDATE columns
            SET compon..., 영향받은 행: 1
2025-09-13 22:43:56,206 - SourceAnalyzer - DEBUG - logger.py:64 - 업데이트 쿼리 실행 성공: 
            UPDATE columns
            SET compon..., 영향받은 행: 1
2025-09-13 22:43:56,206 - SourceAnalyzer - DEBUG - logger.py:64 - 업데이트 쿼리 실행 성공: 
            UPDATE columns
            SET compon..., 영향받은 행: 1
2025-09-13 22:43:56,206 - SourceAnalyzer - INFO - logger.py:68 - 컬럼 component_id 업데이트 완료: 94개
2025-09-13 22:43:56,206 - SourceAnalyzer - INFO - logger.py:68 - === 데이터베이스 구조 저장 통계 ===
2025-09-13 22:43:56,207 - SourceAnalyzer - INFO - logger.py:68 - 테이블 로드: 16 (오류: 0)
2025-09-13 22:43:56,207 - SourceAnalyzer - INFO - logger.py:68 - 컬럼 로드: 91 (오류: 0)
2025-09-13 22:43:56,207 - SourceAnalyzer - INFO - logger.py:68 - 컴포넌트 생성: 122 (오류: 0)
2025-09-13 22:43:56,207 - SourceAnalyzer - INFO - logger.py:68 - inferred 컬럼 생성: 0
2025-09-13 22:43:56,207 - SourceAnalyzer - INFO - logger.py:68 - 오류 없이 완료
2025-09-13 22:43:56,207 - SourceAnalyzer - INFO - logger.py:68 - === 데이터베이스 로딩 완료 ===
2025-09-13 22:43:56,207 - SourceAnalyzer - DEBUG - logger.py:64 - 데이터베이스 연결 해제: D:\Analyzer\CreateMetaDb\projects\sampleSrc\metadata.db
2025-09-13 22:43:56,207 - SourceAnalyzer - INFO - logger.py:68 - 2단계 완료: 데이터베이스 구조 저장 및 컴포넌트 생성
2025-09-13 22:43:56,207 - SourceAnalyzer - INFO - logger.py:68 - 3단계 실행: XML 파일 분석 및 SQL 컴포넌트 등록 + JOIN 관계 분석
2025-09-13 22:43:56,215 - SourceAnalyzer - DEBUG - logger.py:64 - 파일 읽기 성공: config/parser/sql_keyword.yaml
2025-09-13 22:43:56,237 - SourceAnalyzer - DEBUG - logger.py:64 - YAML 설정 파일 로드 성공: config/parser/sql_keyword.yaml
2025-09-13 22:43:56,237 - SourceAnalyzer - DEBUG - logger.py:64 - 파일 읽기 성공: config/parser/xml_parser_config.yaml
2025-09-13 22:43:56,243 - SourceAnalyzer - DEBUG - logger.py:64 - YAML 설정 파일 로드 성공: config/parser/xml_parser_config.yaml
2025-09-13 22:43:56,244 - SourceAnalyzer - DEBUG - logger.py:64 - 파일 읽기 성공: config/parser/mybatis_dom_rules.yaml
2025-09-13 22:43:56,245 - SourceAnalyzer - DEBUG - logger.py:64 - YAML 설정 파일 로드 성공: config/parser/mybatis_dom_rules.yaml
2025-09-13 22:43:56,247 - SourceAnalyzer - DEBUG - logger.py:64 - 데이터베이스 연결 성공: D:\Analyzer\CreateMetaDb\projects\sampleSrc\SqlContent.db
2025-09-13 22:43:56,247 - SourceAnalyzer - DEBUG - logger.py:64 - SQL 스크립트 실행 성공: D:\Analyzer\CreateMetaDb\database\create_sql_content_db.sql
2025-09-13 22:43:56,247 - SourceAnalyzer - INFO - logger.py:68 - SQL Content 데이터베이스 초기화 완료: D:\Analyzer\CreateMetaDb\projects\sampleSrc\SqlContent.db
2025-09-13 22:43:56,247 - SourceAnalyzer - INFO - logger.py:68 - === XML 로딩 시작: 3~4단계 통합 처리 ===
2025-09-13 22:43:56,249 - SourceAnalyzer - DEBUG - logger.py:64 - 데이터베이스 연결 성공: D:\Analyzer\CreateMetaDb\projects\sampleSrc\metadata.db
2025-09-13 22:43:56,249 - SourceAnalyzer - INFO - logger.py:68 - SQL Content Processor 초기화 시작
2025-09-13 22:43:56,250 - SourceAnalyzer - DEBUG - logger.py:64 - 데이터베이스 연결 성공: D:\Analyzer\CreateMetaDb\projects\sampleSrc\SqlContent.db
2025-09-13 22:43:56,250 - SourceAnalyzer - DEBUG - logger.py:64 - SQL 스크립트 실행 성공: D:\Analyzer\CreateMetaDb\database\create_sql_content_db.sql
2025-09-13 22:43:56,250 - SourceAnalyzer - INFO - logger.py:68 - SQL Content 데이터베이스 초기화 완료: D:\Analyzer\CreateMetaDb\projects\sampleSrc\SqlContent.db
2025-09-13 22:43:56,250 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 실행 성공: 
                SELECT file_id, file_path, file_n...
2025-09-13 22:43:56,250 - SourceAnalyzer - DEBUG - logger.py:64 - LOAD XML ID 매핑: src\com\example\dynamicquery + UserMapper.xml -> src/com/example/dynamicquery/UserMapper.xml (ID: 5)
2025-09-13 22:43:56,250 - SourceAnalyzer - DEBUG - logger.py:64 - LOAD XML ID 매핑: src\main\resources\mybatis\mapper + ImplicitJoinMapper.xml -> src/main/resources/mybatis/mapper/ImplicitJoinMapper.xml (ID: 23)
2025-09-13 22:43:56,250 - SourceAnalyzer - DEBUG - logger.py:64 - LOAD XML ID 매핑: src\main\resources\mybatis\mapper + ImplicitJoinTestMapper.xml -> src/main/resources/mybatis/mapper/ImplicitJoinTestMapper.xml (ID: 24)
2025-09-13 22:43:56,250 - SourceAnalyzer - DEBUG - logger.py:64 - LOAD XML ID 매핑: src\main\resources\mybatis\mapper + MixedErrorMapper.xml -> src/main/resources/mybatis/mapper/MixedErrorMapper.xml (ID: 25)
2025-09-13 22:43:56,250 - SourceAnalyzer - DEBUG - logger.py:64 - LOAD XML ID 매핑: src\main\resources\mybatis\mapper + ProductMapper.xml -> src/main/resources/mybatis/mapper/ProductMapper.xml (ID: 26)
2025-09-13 22:43:56,251 - SourceAnalyzer - DEBUG - logger.py:64 - LOAD XML ID 매핑: src\main\resources\mybatis\mapper + UserMapper.xml -> src/main/resources/mybatis/mapper/UserMapper.xml (ID: 27)
2025-09-13 22:43:56,251 - SourceAnalyzer - INFO - logger.py:68 - XML 파일 ID 매핑 로드 완료: 6개 파일
2025-09-13 22:43:56,251 - SourceAnalyzer - DEBUG - logger.py:64 - 매핑 테이블 키들: ['src/com/example/dynamicquery/UserMapper.xml', 'src/main/resources/mybatis/mapper/ImplicitJoinMapper.xml', 'src/main/resources/mybatis/mapper/ImplicitJoinTestMapper.xml', 'src/main/resources/mybatis/mapper/MixedErrorMapper.xml', 'src/main/resources/mybatis/mapper/ProductMapper.xml', 'src/main/resources/mybatis/mapper/UserMapper.xml']
2025-09-13 22:43:56,251 - SourceAnalyzer - INFO - logger.py:68 - SQL Content Processor 초기화 완료
2025-09-13 22:43:56,251 - SourceAnalyzer - DEBUG - logger.py:64 - 파일 읽기 성공: D:\Analyzer\CreateMetaDb\projects\sampleSrc\src\com\example\dynamicquery\UserMapper.xml
2025-09-13 22:43:56,253 - SourceAnalyzer - DEBUG - logger.py:64 - 파일 읽기 성공: D:\Analyzer\CreateMetaDb\projects\sampleSrc\src\main\resources\mybatis\mapper\ImplicitJoinMapper.xml
2025-09-13 22:43:56,253 - SourceAnalyzer - DEBUG - logger.py:64 - 파일 읽기 성공: D:\Analyzer\CreateMetaDb\projects\sampleSrc\src\main\resources\mybatis\mapper\ImplicitJoinTestMapper.xml
2025-09-13 22:43:56,253 - SourceAnalyzer - DEBUG - logger.py:64 - 파일 읽기 성공: D:\Analyzer\CreateMetaDb\projects\sampleSrc\src\main\resources\mybatis\mapper\MixedErrorMapper.xml
2025-09-13 22:43:56,253 - SourceAnalyzer - DEBUG - logger.py:64 - 파일 읽기 성공: D:\Analyzer\CreateMetaDb\projects\sampleSrc\src\main\resources\mybatis\mapper\ProductMapper.xml
2025-09-13 22:43:56,253 - SourceAnalyzer - DEBUG - logger.py:64 - 파일 읽기 성공: D:\Analyzer\CreateMetaDb\projects\sampleSrc\src\main\resources\mybatis\mapper\UserMapper.xml
2025-09-13 22:43:56,254 - SourceAnalyzer - INFO - logger.py:68 - MyBatis XML 파일 수집 완료: 6개
2025-09-13 22:43:56,254 - SourceAnalyzer - INFO - logger.py:68 - DOM 기반 파싱 시도: D:\Analyzer\CreateMetaDb\projects\sampleSrc\src\com\example\dynamicquery\UserMapper.xml
2025-09-13 22:43:56,255 - SourceAnalyzer - WARNING - logger.py:72 - DOM 파싱 실패, Fallback 실행: D:\Analyzer\CreateMetaDb\projects\sampleSrc\src\com\example\dynamicquery\UserMapper.xml - XmlParser._parse_with_dom() takes 2 positional arguments but 3 were given
2025-09-13 22:43:56,255 - SourceAnalyzer - WARNING - logger.py:72 - 데이터베이스 접근 실패: 'PathUtils' object has no attribute 'get_metadata_db_path'
2025-09-13 22:43:56,260 - SourceAnalyzer - WARNING - logger.py:72 - DOM 파싱 실패, Fallback 실행: D:\Analyzer\CreateMetaDb\projects\sampleSrc\src\com\example\dynamicquery\UserMapper.xml - XmlParser._parse_with_dom() takes 2 positional arguments but 3 were given
2025-09-13 22:43:56,261 - SourceAnalyzer - WARNING - logger.py:72 - 데이터베이스 접근 실패: 'PathUtils' object has no attribute 'get_metadata_db_path'
2025-09-13 22:43:56,262 - SourceAnalyzer - WARNING - logger.py:72 - 데이터베이스 접근 실패: 'PathUtils' object has no attribute 'get_metadata_db_path'
2025-09-13 22:43:56,262 - SourceAnalyzer - WARNING - logger.py:72 - 데이터베이스 접근 실패: 'PathUtils' object has no attribute 'get_metadata_db_path'
2025-09-13 22:43:56,262 - SourceAnalyzer - WARNING - logger.py:72 - 데이터베이스 접근 실패: 'PathUtils' object has no attribute 'get_metadata_db_path'
2025-09-13 22:43:56,262 - SourceAnalyzer - WARNING - logger.py:72 - 데이터베이스 접근 실패: 'PathUtils' object has no attribute 'get_metadata_db_path'
2025-09-13 22:43:56,262 - SourceAnalyzer - WARNING - logger.py:72 - 데이터베이스 접근 실패: 'PathUtils' object has no attribute 'get_metadata_db_path'
2025-09-13 22:43:56,262 - SourceAnalyzer - WARNING - logger.py:72 - 데이터베이스 접근 실패: 'PathUtils' object has no attribute 'get_metadata_db_path'
2025-09-13 22:43:56,262 - SourceAnalyzer - WARNING - logger.py:72 - 데이터베이스 접근 실패: 'PathUtils' object has no attribute 'get_metadata_db_path'
2025-09-13 22:43:56,262 - SourceAnalyzer - WARNING - logger.py:72 - 데이터베이스 접근 실패: 'PathUtils' object has no attribute 'get_metadata_db_path'
2025-09-13 22:43:56,262 - SourceAnalyzer - WARNING - logger.py:72 - DOM 파싱 실패, Fallback 실행: D:\Analyzer\CreateMetaDb\projects\sampleSrc\src\com\example\dynamicquery\UserMapper.xml - XmlParser._parse_with_dom() takes 2 positional arguments but 3 were given
2025-09-13 22:43:56,262 - SourceAnalyzer - WARNING - logger.py:72 - 데이터베이스 접근 실패: 'PathUtils' object has no attribute 'get_metadata_db_path'
2025-09-13 22:43:56,264 - SourceAnalyzer - WARNING - logger.py:72 - DOM 파싱 실패, Fallback 실행: D:\Analyzer\CreateMetaDb\projects\sampleSrc\src\com\example\dynamicquery\UserMapper.xml - XmlParser._parse_with_dom() takes 2 positional arguments but 3 were given
2025-09-13 22:43:56,264 - SourceAnalyzer - WARNING - logger.py:72 - 데이터베이스 접근 실패: 'PathUtils' object has no attribute 'get_metadata_db_path'
2025-09-13 22:43:56,264 - SourceAnalyzer - WARNING - logger.py:72 - 데이터베이스 접근 실패: 'PathUtils' object has no attribute 'get_metadata_db_path'
2025-09-13 22:43:56,264 - SourceAnalyzer - WARNING - logger.py:72 - 데이터베이스 접근 실패: 'PathUtils' object has no attribute 'get_metadata_db_path'
2025-09-13 22:43:56,264 - SourceAnalyzer - WARNING - logger.py:72 - 데이터베이스 접근 실패: 'PathUtils' object has no attribute 'get_metadata_db_path'
2025-09-13 22:43:56,264 - SourceAnalyzer - WARNING - logger.py:72 - 데이터베이스 접근 실패: 'PathUtils' object has no attribute 'get_metadata_db_path'
2025-09-13 22:43:56,264 - SourceAnalyzer - WARNING - logger.py:72 - DOM 파싱 실패, Fallback 실행: D:\Analyzer\CreateMetaDb\projects\sampleSrc\src\com\example\dynamicquery\UserMapper.xml - XmlParser._parse_with_dom() takes 2 positional arguments but 3 were given
2025-09-13 22:43:56,265 - SourceAnalyzer - WARNING - logger.py:72 - 데이터베이스 접근 실패: 'PathUtils' object has no attribute 'get_metadata_db_path'
2025-09-13 22:43:56,265 - SourceAnalyzer - WARNING - logger.py:72 - 데이터베이스 접근 실패: 'PathUtils' object has no attribute 'get_metadata_db_path'
2025-09-13 22:43:56,265 - SourceAnalyzer - WARNING - logger.py:72 - 데이터베이스 접근 실패: 'PathUtils' object has no attribute 'get_metadata_db_path'
2025-09-13 22:43:56,265 - SourceAnalyzer - WARNING - logger.py:72 - 데이터베이스 접근 실패: 'PathUtils' object has no attribute 'get_metadata_db_path'
2025-09-13 22:43:56,265 - SourceAnalyzer - WARNING - logger.py:72 - 데이터베이스 접근 실패: 'PathUtils' object has no attribute 'get_metadata_db_path'
2025-09-13 22:43:56,265 - SourceAnalyzer - WARNING - logger.py:72 - 데이터베이스 접근 실패: 'PathUtils' object has no attribute 'get_metadata_db_path'
2025-09-13 22:43:56,265 - SourceAnalyzer - WARNING - logger.py:72 - 데이터베이스 접근 실패: 'PathUtils' object has no attribute 'get_metadata_db_path'
2025-09-13 22:43:56,265 - SourceAnalyzer - WARNING - logger.py:72 - 데이터베이스 접근 실패: 'PathUtils' object has no attribute 'get_metadata_db_path'
2025-09-13 22:43:56,265 - SourceAnalyzer - WARNING - logger.py:72 - 데이터베이스 접근 실패: 'PathUtils' object has no attribute 'get_metadata_db_path'
2025-09-13 22:43:56,265 - SourceAnalyzer - WARNING - logger.py:72 - DOM 파싱 실패, Fallback 실행: D:\Analyzer\CreateMetaDb\projects\sampleSrc\src\com\example\dynamicquery\UserMapper.xml - XmlParser._parse_with_dom() takes 2 positional arguments but 3 were given
2025-09-13 22:43:56,265 - SourceAnalyzer - WARNING - logger.py:72 - 데이터베이스 접근 실패: 'PathUtils' object has no attribute 'get_metadata_db_path'
2025-09-13 22:43:56,266 - SourceAnalyzer - WARNING - logger.py:72 - 데이터베이스 접근 실패: 'PathUtils' object has no attribute 'get_metadata_db_path'
2025-09-13 22:43:56,266 - SourceAnalyzer - WARNING - logger.py:72 - 데이터베이스 접근 실패: 'PathUtils' object has no attribute 'get_metadata_db_path'
2025-09-13 22:43:56,266 - SourceAnalyzer - WARNING - logger.py:72 - 데이터베이스 접근 실패: 'PathUtils' object has no attribute 'get_metadata_db_path'
2025-09-13 22:43:56,266 - SourceAnalyzer - WARNING - logger.py:72 - 데이터베이스 접근 실패: 'PathUtils' object has no attribute 'get_metadata_db_path'
2025-09-13 22:43:56,266 - SourceAnalyzer - WARNING - logger.py:72 - 데이터베이스 접근 실패: 'PathUtils' object has no attribute 'get_metadata_db_path'
2025-09-13 22:43:56,266 - SourceAnalyzer - WARNING - logger.py:72 - 데이터베이스 접근 실패: 'PathUtils' object has no attribute 'get_metadata_db_path'
2025-09-13 22:43:56,266 - SourceAnalyzer - WARNING - logger.py:72 - 데이터베이스 접근 실패: 'PathUtils' object has no attribute 'get_metadata_db_path'
2025-09-13 22:43:56,266 - SourceAnalyzer - WARNING - logger.py:72 - 데이터베이스 접근 실패: 'PathUtils' object has no attribute 'get_metadata_db_path'
2025-09-13 22:43:56,266 - SourceAnalyzer - WARNING - logger.py:72 - 데이터베이스 접근 실패: 'PathUtils' object has no attribute 'get_metadata_db_path'
2025-09-13 22:43:56,266 - SourceAnalyzer - WARNING - logger.py:72 - 데이터베이스 접근 실패: 'PathUtils' object has no attribute 'get_metadata_db_path'
2025-09-13 22:43:56,266 - SourceAnalyzer - WARNING - logger.py:72 - 데이터베이스 접근 실패: 'PathUtils' object has no attribute 'get_metadata_db_path'
2025-09-13 22:43:56,266 - SourceAnalyzer - WARNING - logger.py:72 - 데이터베이스 접근 실패: 'PathUtils' object has no attribute 'get_metadata_db_path'
2025-09-13 22:43:56,266 - SourceAnalyzer - WARNING - logger.py:72 - 데이터베이스 접근 실패: 'PathUtils' object has no attribute 'get_metadata_db_path'
2025-09-13 22:43:56,266 - SourceAnalyzer - WARNING - logger.py:72 - 데이터베이스 접근 실패: 'PathUtils' object has no attribute 'get_metadata_db_path'
2025-09-13 22:43:56,266 - SourceAnalyzer - WARNING - logger.py:72 - 데이터베이스 접근 실패: 'PathUtils' object has no attribute 'get_metadata_db_path'
2025-09-13 22:43:56,266 - SourceAnalyzer - WARNING - logger.py:72 - 데이터베이스 접근 실패: 'PathUtils' object has no attribute 'get_metadata_db_path'
2025-09-13 22:43:56,266 - SourceAnalyzer - WARNING - logger.py:72 - 데이터베이스 접근 실패: 'PathUtils' object has no attribute 'get_metadata_db_path'
2025-09-13 22:43:56,266 - SourceAnalyzer - WARNING - logger.py:72 - 데이터베이스 접근 실패: 'PathUtils' object has no attribute 'get_metadata_db_path'
2025-09-13 22:43:56,267 - SourceAnalyzer - WARNING - logger.py:72 - 데이터베이스 접근 실패: 'PathUtils' object has no attribute 'get_metadata_db_path'
2025-09-13 22:43:56,267 - SourceAnalyzer - WARNING - logger.py:72 - 데이터베이스 접근 실패: 'PathUtils' object has no attribute 'get_metadata_db_path'
2025-09-13 22:43:56,267 - SourceAnalyzer - WARNING - logger.py:72 - DOM 파싱 실패, Fallback 실행: D:\Analyzer\CreateMetaDb\projects\sampleSrc\src\com\example\dynamicquery\UserMapper.xml - XmlParser._parse_with_dom() takes 2 positional arguments but 3 were given
2025-09-13 22:43:56,267 - SourceAnalyzer - WARNING - logger.py:72 - 데이터베이스 접근 실패: 'PathUtils' object has no attribute 'get_metadata_db_path'
2025-09-13 22:43:56,267 - SourceAnalyzer - WARNING - logger.py:72 - 데이터베이스 접근 실패: 'PathUtils' object has no attribute 'get_metadata_db_path'
2025-09-13 22:43:56,267 - SourceAnalyzer - WARNING - logger.py:72 - 데이터베이스 접근 실패: 'PathUtils' object has no attribute 'get_metadata_db_path'
2025-09-13 22:43:56,267 - SourceAnalyzer - WARNING - logger.py:72 - 데이터베이스 접근 실패: 'PathUtils' object has no attribute 'get_metadata_db_path'
2025-09-13 22:43:56,267 - SourceAnalyzer - WARNING - logger.py:72 - 데이터베이스 접근 실패: 'PathUtils' object has no attribute 'get_metadata_db_path'
2025-09-13 22:43:56,267 - SourceAnalyzer - WARNING - logger.py:72 - 데이터베이스 접근 실패: 'PathUtils' object has no attribute 'get_metadata_db_path'
2025-09-13 22:43:56,267 - SourceAnalyzer - WARNING - logger.py:72 - 데이터베이스 접근 실패: 'PathUtils' object has no attribute 'get_metadata_db_path'
2025-09-13 22:43:56,267 - SourceAnalyzer - WARNING - logger.py:72 - 데이터베이스 접근 실패: 'PathUtils' object has no attribute 'get_metadata_db_path'
2025-09-13 22:43:56,267 - SourceAnalyzer - WARNING - logger.py:72 - 데이터베이스 접근 실패: 'PathUtils' object has no attribute 'get_metadata_db_path'
2025-09-13 22:43:56,268 - SourceAnalyzer - WARNING - logger.py:72 - 데이터베이스 접근 실패: 'PathUtils' object has no attribute 'get_metadata_db_path'
2025-09-13 22:43:56,268 - SourceAnalyzer - WARNING - logger.py:72 - 데이터베이스 접근 실패: 'PathUtils' object has no attribute 'get_metadata_db_path'
2025-09-13 22:43:56,268 - SourceAnalyzer - WARNING - logger.py:72 - 데이터베이스 접근 실패: 'PathUtils' object has no attribute 'get_metadata_db_path'
2025-09-13 22:43:56,268 - SourceAnalyzer - WARNING - logger.py:72 - 데이터베이스 접근 실패: 'PathUtils' object has no attribute 'get_metadata_db_path'
2025-09-13 22:43:56,268 - SourceAnalyzer - WARNING - logger.py:72 - 데이터베이스 접근 실패: 'PathUtils' object has no attribute 'get_metadata_db_path'
2025-09-13 22:43:56,268 - SourceAnalyzer - WARNING - logger.py:72 - 데이터베이스 접근 실패: 'PathUtils' object has no attribute 'get_metadata_db_path'
2025-09-13 22:43:56,268 - SourceAnalyzer - WARNING - logger.py:72 - 데이터베이스 접근 실패: 'PathUtils' object has no attribute 'get_metadata_db_path'
2025-09-13 22:43:56,268 - SourceAnalyzer - WARNING - logger.py:72 - 데이터베이스 접근 실패: 'PathUtils' object has no attribute 'get_metadata_db_path'
2025-09-13 22:43:56,268 - SourceAnalyzer - WARNING - logger.py:72 - 데이터베이스 접근 실패: 'PathUtils' object has no attribute 'get_metadata_db_path'
2025-09-13 22:43:56,268 - SourceAnalyzer - WARNING - logger.py:72 - 데이터베이스 접근 실패: 'PathUtils' object has no attribute 'get_metadata_db_path'
2025-09-13 22:43:56,268 - SourceAnalyzer - WARNING - logger.py:72 - 데이터베이스 접근 실패: 'PathUtils' object has no attribute 'get_metadata_db_path'
2025-09-13 22:43:56,268 - SourceAnalyzer - WARNING - logger.py:72 - 데이터베이스 접근 실패: 'PathUtils' object has no attribute 'get_metadata_db_path'
2025-09-13 22:43:56,268 - SourceAnalyzer - WARNING - logger.py:72 - DOM 파싱 실패, Fallback 실행: D:\Analyzer\CreateMetaDb\projects\sampleSrc\src\com\example\dynamicquery\UserMapper.xml - XmlParser._parse_with_dom() takes 2 positional arguments but 3 were given
2025-09-13 22:43:56,268 - SourceAnalyzer - WARNING - logger.py:72 - 데이터베이스 접근 실패: 'PathUtils' object has no attribute 'get_metadata_db_path'
2025-09-13 22:43:56,269 - SourceAnalyzer - WARNING - logger.py:72 - 데이터베이스 접근 실패: 'PathUtils' object has no attribute 'get_metadata_db_path'
2025-09-13 22:43:56,269 - SourceAnalyzer - WARNING - logger.py:72 - 데이터베이스 접근 실패: 'PathUtils' object has no attribute 'get_metadata_db_path'
2025-09-13 22:43:56,269 - SourceAnalyzer - WARNING - logger.py:72 - 데이터베이스 접근 실패: 'PathUtils' object has no attribute 'get_metadata_db_path'
2025-09-13 22:43:56,269 - SourceAnalyzer - WARNING - logger.py:72 - 데이터베이스 접근 실패: 'PathUtils' object has no attribute 'get_metadata_db_path'
2025-09-13 22:43:56,269 - SourceAnalyzer - WARNING - logger.py:72 - 데이터베이스 접근 실패: 'PathUtils' object has no attribute 'get_metadata_db_path'
2025-09-13 22:43:56,269 - SourceAnalyzer - WARNING - logger.py:72 - 데이터베이스 접근 실패: 'PathUtils' object has no attribute 'get_metadata_db_path'
2025-09-13 22:43:56,269 - SourceAnalyzer - WARNING - logger.py:72 - 데이터베이스 접근 실패: 'PathUtils' object has no attribute 'get_metadata_db_path'
2025-09-13 22:43:56,269 - SourceAnalyzer - WARNING - logger.py:72 - 데이터베이스 접근 실패: 'PathUtils' object has no attribute 'get_metadata_db_path'
2025-09-13 22:43:56,269 - SourceAnalyzer - WARNING - logger.py:72 - 데이터베이스 접근 실패: 'PathUtils' object has no attribute 'get_metadata_db_path'
2025-09-13 22:43:56,269 - SourceAnalyzer - WARNING - logger.py:72 - 데이터베이스 접근 실패: 'PathUtils' object has no attribute 'get_metadata_db_path'
2025-09-13 22:43:56,269 - SourceAnalyzer - WARNING - logger.py:72 - 데이터베이스 접근 실패: 'PathUtils' object has no attribute 'get_metadata_db_path'
2025-09-13 22:43:56,269 - SourceAnalyzer - WARNING - logger.py:72 - 데이터베이스 접근 실패: 'PathUtils' object has no attribute 'get_metadata_db_path'
2025-09-13 22:43:56,269 - SourceAnalyzer - WARNING - logger.py:72 - 데이터베이스 접근 실패: 'PathUtils' object has no attribute 'get_metadata_db_path'
2025-09-13 22:43:56,269 - SourceAnalyzer - WARNING - logger.py:72 - 데이터베이스 접근 실패: 'PathUtils' object has no attribute 'get_metadata_db_path'
2025-09-13 22:43:56,269 - SourceAnalyzer - WARNING - logger.py:72 - 데이터베이스 접근 실패: 'PathUtils' object has no attribute 'get_metadata_db_path'
2025-09-13 22:43:56,270 - SourceAnalyzer - WARNING - logger.py:72 - 데이터베이스 접근 실패: 'PathUtils' object has no attribute 'get_metadata_db_path'
2025-09-13 22:43:56,270 - SourceAnalyzer - WARNING - logger.py:72 - 데이터베이스 접근 실패: 'PathUtils' object has no attribute 'get_metadata_db_path'
2025-09-13 22:43:56,270 - SourceAnalyzer - WARNING - logger.py:72 - 데이터베이스 접근 실패: 'PathUtils' object has no attribute 'get_metadata_db_path'
2025-09-13 22:43:56,270 - SourceAnalyzer - WARNING - logger.py:72 - 데이터베이스 접근 실패: 'PathUtils' object has no attribute 'get_metadata_db_path'
2025-09-13 22:43:56,270 - SourceAnalyzer - WARNING - logger.py:72 - 데이터베이스 접근 실패: 'PathUtils' object has no attribute 'get_metadata_db_path'
2025-09-13 22:43:56,270 - SourceAnalyzer - INFO - logger.py:68 - DOM 기반 파싱 성공: D:\Analyzer\CreateMetaDb\projects\sampleSrc\src\com\example\dynamicquery\UserMapper.xml
2025-09-13 22:43:56,270 - SourceAnalyzer - INFO - logger.py:68 - === XML 로딩 엔진: SQL 컴포넌트 저장 시작 ===
2025-09-13 22:43:56,270 - SourceAnalyzer - INFO - logger.py:68 - 전달받은 SQL 쿼리 수: 8개
2025-09-13 22:43:56,270 - SourceAnalyzer - INFO - logger.py:68 - XML에서 추출된 SQL 쿼리 타입별 통계: {'select': 8}
2025-09-13 22:43:56,270 - SourceAnalyzer - INFO - logger.py:68 - 프로젝트 ID: 1
2025-09-13 22:43:56,270 - SourceAnalyzer - INFO - logger.py:68 - SQL Content Processor를 사용하여 처리 시작
2025-09-13 22:43:56,270 - SourceAnalyzer - INFO - logger.py:68 - process_sql_queries 호출 전: sql_queries=8, project_id=1
2025-09-13 22:43:56,270 - SourceAnalyzer - INFO - logger.py:68 - === SQL 쿼리 처리 시작 ===
2025-09-13 22:43:56,270 - SourceAnalyzer - INFO - logger.py:68 - 전달받은 SQL 쿼리 수: 8
2025-09-13 22:43:56,270 - SourceAnalyzer - INFO - logger.py:68 - 프로젝트 ID: 1
2025-09-13 22:43:56,270 - SourceAnalyzer - DEBUG - logger.py:64 - SQL 쿼리 리스트 검증 시작
2025-09-13 22:43:56,270 - SourceAnalyzer - DEBUG - logger.py:64 - SQL 쿼리 리스트 타입: <class 'list'>
2025-09-13 22:43:56,270 - SourceAnalyzer - DEBUG - logger.py:64 - SQL 쿼리 리스트 길이: 8
2025-09-13 22:43:56,270 - SourceAnalyzer - DEBUG - logger.py:64 - 첫 번째 쿼리: {'tag_name': 'select', 'query_id': 'findUsers', 'query_type': 'select', 'sql_content': "\n        SELECT\n            u.USER_ID,\n            u.USER_NAME,\n            u.EMAIL,\n            u.STATUS,\n            d.DEPT_NAME,\n            p.PROFILE_IMAGE_URL,\n            u.CREATED_AT\n        FROM\n            USERS u,\n            DEPARTMENTS d,\n            USER_PROFILES p\n         \n            u.DEPT_ID = d.DEPT_ID\n            AND u.USER_ID = p.USER_ID(+)\n             \n                AND (u.USER_NAME LIKE '%' || #{searchKeyword} || '%' OR u.EMAIL LIKE '%' || #{searchKeyword} || '%')\n             \n             \n                AND u.STATUS = #{userStatus}\n             \n             \n                AND d.DEPT_NAME LIKE '%' || #{deptName} || '%'\n             \n         \n         \n            ORDER BY u.CREATED_AT ${sortOrder}\n         \n    ", 'file_path': 'D:\\Analyzer\\CreateMetaDb\\projects\\sampleSrc\\src\\com\\example\\dynamicquery\\UserMapper.xml', 'line_start': 1, 'line_end': 1, 'hash_value': 'f436fd2ef6553fb41743c0feeea5c1df'}
2025-09-13 22:43:56,270 - SourceAnalyzer - DEBUG - logger.py:64 - SQL 쿼리 리스트 검증 완료
2025-09-13 22:43:56,270 - SourceAnalyzer - DEBUG - logger.py:64 - SQL 쿼리 타입별 통계 시작
2025-09-13 22:43:56,271 - SourceAnalyzer - INFO - logger.py:68 - SQL 쿼리 타입별 통계: {'select': 8}
2025-09-13 22:43:56,271 - SourceAnalyzer - DEBUG - logger.py:64 - SQL 쿼리 타입별 통계 완료
2025-09-13 22:43:56,271 - SourceAnalyzer - DEBUG - logger.py:64 - SQL 쿼리 리스트 크기: 8
2025-09-13 22:43:56,271 - SourceAnalyzer - DEBUG - logger.py:64 - SQL 쿼리 리스트 타입: <class 'list'>
2025-09-13 22:43:56,271 - SourceAnalyzer - DEBUG - logger.py:64 - 첫 번째 쿼리 정보: {'tag_name': 'select', 'query_id': 'findUsers', 'query_type': 'select', 'sql_content': "\n        SELECT\n            u.USER_ID,\n            u.USER_NAME,\n            u.EMAIL,\n            u.STATUS,\n            d.DEPT_NAME,\n            p.PROFILE_IMAGE_URL,\n            u.CREATED_AT\n        FROM\n            USERS u,\n            DEPARTMENTS d,\n            USER_PROFILES p\n         \n            u.DEPT_ID = d.DEPT_ID\n            AND u.USER_ID = p.USER_ID(+)\n             \n                AND (u.USER_NAME LIKE '%' || #{searchKeyword} || '%' OR u.EMAIL LIKE '%' || #{searchKeyword} || '%')\n             \n             \n                AND u.STATUS = #{userStatus}\n             \n             \n                AND d.DEPT_NAME LIKE '%' || #{deptName} || '%'\n             \n         \n         \n            ORDER BY u.CREATED_AT ${sortOrder}\n         \n    ", 'file_path': 'D:\\Analyzer\\CreateMetaDb\\projects\\sampleSrc\\src\\com\\example\\dynamicquery\\UserMapper.xml', 'line_start': 1, 'line_end': 1, 'hash_value': 'f436fd2ef6553fb41743c0feeea5c1df'}
2025-09-13 22:43:56,271 - SourceAnalyzer - DEBUG - logger.py:64 - 모든 쿼리 정보: [{'tag_name': 'select', 'query_id': 'findUsers', 'query_type': 'select', 'sql_content': "\n        SELECT\n            u.USER_ID,\n            u.USER_NAME,\n            u.EMAIL,\n            u.STATUS,\n            d.DEPT_NAME,\n            p.PROFILE_IMAGE_URL,\n            u.CREATED_AT\n        FROM\n            USERS u,\n            DEPARTMENTS d,\n            USER_PROFILES p\n         \n            u.DEPT_ID = d.DEPT_ID\n            AND u.USER_ID = p.USER_ID(+)\n             \n                AND (u.USER_NAME LIKE '%' || #{searchKeyword} || '%' OR u.EMAIL LIKE '%' || #{searchKeyword} || '%')\n             \n             \n                AND u.STATUS = #{userStatus}\n             \n             \n                AND d.DEPT_NAME LIKE '%' || #{deptName} || '%'\n             \n         \n         \n            ORDER BY u.CREATED_AT ${sortOrder}\n         \n    ", 'file_path': 'D:\\Analyzer\\CreateMetaDb\\projects\\sampleSrc\\src\\com\\example\\dynamicquery\\UserMapper.xml', 'line_start': 1, 'line_end': 1, 'hash_value': 'f436fd2ef6553fb41743c0feeea5c1df'}, {'tag_name': 'select', 'query_id': 'findUsersWithAnsiJoin', 'query_type': 'select', 'sql_content': "\n        SELECT\n            u.USER_ID,\n            u.USER_NAME,\n            u.EMAIL,\n            u.STATUS,\n            d.DEPT_NAME,\n            p.PROFILE_IMAGE_URL,\n            u.CREATED_AT\n        FROM\n            USERS u\n            INNER JOIN DEPARTMENTS d ON u.DEPT_ID = d.DEPT_ID\n            LEFT JOIN USER_PROFILES p ON u.USER_ID = p.USER_ID\n         \n             \n                AND (u.USER_NAME LIKE '%' || #{searchKeyword} || '%' OR u.EMAIL LIKE '%' || #{searchKeyword} || '%')\n             \n             \n                AND u.STATUS = #{userStatus}\n             \n             \n                AND d.DEPT_NAME LIKE '%' || #{deptName} || '%'\n             \n         \n         \n            ORDER BY u.CREATED_AT ${sortOrder}\n         \n    ", 'file_path': 'D:\\Analyzer\\CreateMetaDb\\projects\\sampleSrc\\src\\com\\example\\dynamicquery\\UserMapper.xml', 'line_start': 1, 'line_end': 1, 'hash_value': '02078f9f611e6605527e7c2866a5a0cf'}, {'tag_name': 'select', 'query_id': 'findUsersWithAliasOmission', 'query_type': 'select', 'sql_content': "\n        SELECT \n            u.USER_ID,\n            u.USER_NAME,\n            d.DEPT_NAME,\n            p.PROFILE_IMAGE_URL\n        FROM \n            USERS u,\n            DEPARTMENTS d,\n            USER_PROFILES p\n        WHERE \n            u.DEPT_ID = DEPT_ID  -- d. 생략\n            AND u.USER_ID = USER_ID  -- p. 생략\n            AND u.STATUS = 'ACTIVE'\n    ", 'file_path': 'D:\\Analyzer\\CreateMetaDb\\projects\\sampleSrc\\src\\com\\example\\dynamicquery\\UserMapper.xml', 'line_start': 1, 'line_end': 1, 'hash_value': 'fc23d39261d0aa920db8fb5e0a1ac513'}, {'tag_name': 'select', 'query_id': 'findUsersWithMixedJoins', 'query_type': 'select', 'sql_content': "\n        SELECT \n            u.USER_ID,\n            u.USER_NAME,\n            d.DEPT_NAME,\n            p.PROFILE_IMAGE_URL,\n            ut.TYPE_NAME\n        FROM \n            USERS u,\n            DEPARTMENTS d,\n            USER_PROFILES p,\n            USER_TYPES ut\n        WHERE \n            u.DEPT_ID = d.DEPT_ID  -- 완전한 형태\n            AND u.USER_ID = USER_ID  -- p. 생략\n            AND u.USER_TYPE = TYPE_CODE  -- ut. 생략\n            AND u.STATUS = 'ACTIVE'\n    ", 'file_path': 'D:\\Analyzer\\CreateMetaDb\\projects\\sampleSrc\\src\\com\\example\\dynamicquery\\UserMapper.xml', 'line_start': 1, 'line_end': 1, 'hash_value': '1b154273b57fa222d82b55e8e770eb89'}, {'tag_name': 'select', 'query_id': 'findComplexJoins', 'query_type': 'select', 'sql_content': "\n        SELECT \n            o.ORDER_ID,\n            o.ORDER_DATE,\n            c.CUSTOMER_NAME,\n            p.PRODUCT_NAME,\n            oi.QUANTITY,\n            oi.UNIT_PRICE\n        FROM \n            ORDERS o,\n            CUSTOMERS c,\n            ORDER_ITEMS oi,\n            PRODUCTS p\n        WHERE \n            o.CUSTOMER_ID = c.CUSTOMER_ID  -- 완전한 형태\n            AND o.ORDER_ID = ORDER_ID  -- oi. 생략\n            AND oi.PRODUCT_ID = p.PRODUCT_ID  -- 완전한 형태\n            AND o.STATUS = 'COMPLETED'\n    ", 'file_path': 'D:\\Analyzer\\CreateMetaDb\\projects\\sampleSrc\\src\\com\\example\\dynamicquery\\UserMapper.xml', 'line_start': 1, 'line_end': 1, 'hash_value': 'e65fb525f982da7c1679c4b559941bc6'}, {'tag_name': 'select', 'query_id': 'findUsersWithScatteredConditions', 'query_type': 'select', 'sql_content': "\n        SELECT \n            u.USER_ID,\n            u.USER_NAME,\n            d.DEPT_NAME,\n            p.PROFILE_IMAGE_URL,\n            ut.TYPE_NAME,\n            r.ROLE_NAME\n        FROM \n            USERS u,\n            DEPARTMENTS d,\n            USER_PROFILES p,\n            USER_TYPES ut,\n            USER_ROLES ur,\n            ROLES r\n        WHERE \n            u.STATUS = 'ACTIVE'  -- 일반 조건\n            AND u.DEPT_ID = d.DEPT_ID  -- 조인 조건 1\n            AND u.USER_TYPE = 'PREMIUM'  -- 일반 조건\n            AND u.USER_ID = p.USER_ID  -- 조인 조건 2\n            AND u.USER_TYPE = ut.TYPE_CODE  -- 조인 조건 3\n            AND u.USER_ID = ur.USER_ID  -- 조인 조건 4\n            AND ur.ROLE_ID = r.ROLE_ID  -- 조인 조건 5\n            AND d.DEPT_STATUS = 'ACTIVE'  -- 일반 조건\n    ", 'file_path': 'D:\\Analyzer\\CreateMetaDb\\projects\\sampleSrc\\src\\com\\example\\dynamicquery\\UserMapper.xml', 'line_start': 1, 'line_end': 1, 'hash_value': '1ee1d3cad41bcc1efda99c6c83ad76e9'}, {'tag_name': 'select', 'query_id': 'findOrdersWithScatteredJoins', 'query_type': 'select', 'sql_content': "\n        SELECT \n            o.ORDER_ID,\n            o.ORDER_DATE,\n            c.CUSTOMER_NAME,\n            c.EMAIL,\n            p.PRODUCT_NAME,\n            p.PRICE,\n            oi.QUANTITY,\n            oi.UNIT_PRICE,\n            cat.CATEGORY_NAME,\n            b.BRAND_NAME\n        FROM \n            ORDERS o,\n            CUSTOMERS c,\n            ORDER_ITEMS oi,\n            PRODUCTS p,\n            CATEGORIES cat,\n            BRANDS b\n        WHERE \n            o.ORDER_DATE >= '2024-01-01'  -- 일반 조건\n            AND o.CUSTOMER_ID = c.CUSTOMER_ID  -- 조인 조건 1\n            AND o.STATUS = 'COMPLETED'  -- 일반 조건\n            AND o.ORDER_ID = oi.ORDER_ID  -- 조인 조건 2\n            AND oi.PRODUCT_ID = p.PRODUCT_ID  -- 조인 조건 3\n            AND p.CATEGORY_ID = cat.CATEGORY_ID  -- 조인 조건 4\n            AND p.BRAND_ID = b.BRAND_ID  -- 조인 조건 5\n            AND oi.QUANTITY > 1  -- 일반 조건\n            AND p.STATUS = 'ACTIVE'  -- 일반 조건\n            AND cat.CATEGORY_STATUS = 'ACTIVE'  -- 일반 조건\n    ", 'file_path': 'D:\\Analyzer\\CreateMetaDb\\projects\\sampleSrc\\src\\com\\example\\dynamicquery\\UserMapper.xml', 'line_start': 1, 'line_end': 1, 'hash_value': 'f68c28ee60bcd9561ea72803d7d3dd05'}, {'tag_name': 'select', 'query_id': 'findComplexScatteredJoins', 'query_type': 'select', 'sql_content': "\n        SELECT \n            u.USER_ID,\n            u.USER_NAME,\n            d.DEPT_NAME,\n            p.PROFILE_IMAGE_URL,\n            ut.TYPE_NAME,\n            COUNT(o.ORDER_ID) as ORDER_COUNT,\n            SUM(o.TOTAL_AMOUNT) as TOTAL_SPENT\n        FROM \n            USERS u,\n            DEPARTMENTS d,\n            USER_PROFILES p,\n            USER_TYPES ut,\n            ORDERS o,\n            CUSTOMERS c\n        WHERE \n            u.USER_ID IN (SELECT USER_ID FROM USER_ACTIVITY_LOG WHERE ACTIVITY_DATE >= '2024-01-01')  -- 서브쿼리\n            AND u.DEPT_ID = d.DEPT_ID  -- 조인 조건 1\n            AND u.USER_ID = p.USER_ID  -- 조인 조건 2\n            AND u.USER_TYPE = ut.TYPE_CODE  -- 조인 조건 3\n            AND u.USER_ID = c.USER_ID  -- 조인 조건 4\n            AND c.CUSTOMER_ID = o.CUSTOMER_ID  -- 조인 조건 5\n            AND o.ORDER_DATE >= '2024-01-01'  -- 일반 조건\n            AND u.STATUS = 'ACTIVE'  -- 일반 조건\n            AND d.DEPT_STATUS = 'ACTIVE'  -- 일반 조건\n        GROUP BY \n            u.USER_ID, u.USER_NAME, d.DEPT_NAME, p.PROFILE_IMAGE_URL, ut.TYPE_NAME\n        HAVING \n            COUNT(o.ORDER_ID) > 5  -- 그룹 조건\n    ", 'file_path': 'D:\\Analyzer\\CreateMetaDb\\projects\\sampleSrc\\src\\com\\example\\dynamicquery\\UserMapper.xml', 'line_start': 1, 'line_end': 1, 'hash_value': 'ef62661e3cd803fb718318175d5f13bb'}]
2025-09-13 22:43:56,271 - SourceAnalyzer - DEBUG - logger.py:64 - SQL 쿼리 처리 루프 시작 전
2025-09-13 22:43:56,271 - SourceAnalyzer - DEBUG - logger.py:64 - SQL 쿼리 처리 루프 시작: 1/8
2025-09-13 22:43:56,271 - SourceAnalyzer - DEBUG - logger.py:64 - SQL 쿼리 처리 시작: findUsers (select)
2025-09-13 22:43:56,271 - SourceAnalyzer - DEBUG - logger.py:64 - GET XML ID 조회: D:\Analyzer\CreateMetaDb\projects\sampleSrc\src\com\example\dynamicquery\UserMapper.xml -> src/com/example/dynamicquery/UserMapper.xml
2025-09-13 22:43:56,271 - SourceAnalyzer - DEBUG - logger.py:64 - 메모리 매핑 테이블 키들: ['src/com/example/dynamicquery/UserMapper.xml', 'src/main/resources/mybatis/mapper/ImplicitJoinMapper.xml', 'src/main/resources/mybatis/mapper/ImplicitJoinTestMapper.xml', 'src/main/resources/mybatis/mapper/MixedErrorMapper.xml', 'src/main/resources/mybatis/mapper/ProductMapper.xml', 'src/main/resources/mybatis/mapper/UserMapper.xml']
2025-09-13 22:43:56,271 - SourceAnalyzer - DEBUG - logger.py:64 - 메모리에서 file_id 조회 성공: src/com/example/dynamicquery/UserMapper.xml -> 5
2025-09-13 22:43:56,271 - SourceAnalyzer - DEBUG - logger.py:64 - 파일 ID 조회 성공: 5
2025-09-13 22:43:56,271 - SourceAnalyzer - DEBUG - logger.py:64 - 컴포넌트 저장 시도: findUsers (select) -> SQL_SELECT
2025-09-13 22:43:56,271 - SourceAnalyzer - DEBUG - logger.py:64 - Upsert 실행: components
2025-09-13 22:43:56,271 - SourceAnalyzer - DEBUG - logger.py:64 - 데이터: {'project_id': 1, 'component_type': 'SQL_SELECT', 'component_name': 'findUsers', 'parent_id': None, 'layer': 'SQL', 'file_id': 5, 'line_start': 1, 'line_end': 1, 'hash_value': 'f436fd2ef6553fb41743c0feeea5c1df', 'has_error': 'N', 'error_message': None, 'del_yn': 'N'}
2025-09-13 22:43:56,271 - SourceAnalyzer - DEBUG - logger.py:64 - Components upsert 시작: findUsers (SQL_SELECT)
2025-09-13 22:43:56,271 - SourceAnalyzer - DEBUG - logger.py:64 - 기존 레코드 확인 쿼리: 
                    SELECT component_id FROM components 
                    WHERE project_id = ? AND component_name = ? AND file_id = ?
                    
2025-09-13 22:43:56,271 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 파라미터: (1, 'findUsers', 5)
2025-09-13 22:43:56,271 - SourceAnalyzer - DEBUG - logger.py:64 - 기존 레코드 조회 결과: <sqlite3.Row object at 0x00000257905C59F0>
2025-09-13 22:43:56,271 - SourceAnalyzer - DEBUG - logger.py:64 - UPDATE 쿼리: 
                        UPDATE components SET component_type = ?, parent_id = ?, layer = ?, line_start = ?, line_end = ?, hash_value = ?, has_error = ?, error_message = ?, del_yn = ?
                        WHERE component_id = ?
                        
2025-09-13 22:43:56,271 - SourceAnalyzer - DEBUG - logger.py:64 - UPDATE 파라미터: ['SQL_SELECT', None, 'SQL', 1, 1, 'f436fd2ef6553fb41743c0feeea5c1df', 'N', None, 'N', 548]
2025-09-13 22:43:56,272 - SourceAnalyzer - DEBUG - logger.py:64 - UPDATE 실행 완료: component_id = 548
2025-09-13 22:43:56,272 - SourceAnalyzer - DEBUG - logger.py:64 - 컴포넌트 저장 완료: findUsers (ID: 548)
2025-09-13 22:43:56,272 - SourceAnalyzer - DEBUG - logger.py:64 - 컴포넌트 저장 결과: component_id = 548
2025-09-13 22:43:56,272 - SourceAnalyzer - DEBUG - logger.py:64 - SQL Content 저장 시작: findUsers (component_id: 548)
2025-09-13 22:43:56,272 - SourceAnalyzer - DEBUG - logger.py:64 - SQL Content 상대경로: src/com/example/dynamicquery
2025-09-13 22:43:56,272 - SourceAnalyzer - WARNING - logger.py:72 - SQL Content 저장 중 예외 발생 (무시하고 계속 진행): findUsers - 'sql_query'
2025-09-13 22:43:56,272 - SourceAnalyzer - DEBUG - logger.py:64 - SQL 쿼리 처리 완료: findUsers
2025-09-13 22:43:56,272 - SourceAnalyzer - DEBUG - logger.py:64 - SQL 쿼리 처리 루프 시작: 2/8
2025-09-13 22:43:56,272 - SourceAnalyzer - DEBUG - logger.py:64 - SQL 쿼리 처리 시작: findUsersWithAnsiJoin (select)
2025-09-13 22:43:56,272 - SourceAnalyzer - DEBUG - logger.py:64 - GET XML ID 조회: D:\Analyzer\CreateMetaDb\projects\sampleSrc\src\com\example\dynamicquery\UserMapper.xml -> src/com/example/dynamicquery/UserMapper.xml
2025-09-13 22:43:56,272 - SourceAnalyzer - DEBUG - logger.py:64 - 메모리 매핑 테이블 키들: ['src/com/example/dynamicquery/UserMapper.xml', 'src/main/resources/mybatis/mapper/ImplicitJoinMapper.xml', 'src/main/resources/mybatis/mapper/ImplicitJoinTestMapper.xml', 'src/main/resources/mybatis/mapper/MixedErrorMapper.xml', 'src/main/resources/mybatis/mapper/ProductMapper.xml', 'src/main/resources/mybatis/mapper/UserMapper.xml']
2025-09-13 22:43:56,272 - SourceAnalyzer - DEBUG - logger.py:64 - 메모리에서 file_id 조회 성공: src/com/example/dynamicquery/UserMapper.xml -> 5
2025-09-13 22:43:56,272 - SourceAnalyzer - DEBUG - logger.py:64 - 파일 ID 조회 성공: 5
2025-09-13 22:43:56,272 - SourceAnalyzer - DEBUG - logger.py:64 - 컴포넌트 저장 시도: findUsersWithAnsiJoin (select) -> SQL_SELECT
2025-09-13 22:43:56,272 - SourceAnalyzer - DEBUG - logger.py:64 - Upsert 실행: components
2025-09-13 22:43:56,272 - SourceAnalyzer - DEBUG - logger.py:64 - 데이터: {'project_id': 1, 'component_type': 'SQL_SELECT', 'component_name': 'findUsersWithAnsiJoin', 'parent_id': None, 'layer': 'SQL', 'file_id': 5, 'line_start': 1, 'line_end': 1, 'hash_value': '02078f9f611e6605527e7c2866a5a0cf', 'has_error': 'N', 'error_message': None, 'del_yn': 'N'}
2025-09-13 22:43:56,272 - SourceAnalyzer - DEBUG - logger.py:64 - Components upsert 시작: findUsersWithAnsiJoin (SQL_SELECT)
2025-09-13 22:43:56,272 - SourceAnalyzer - DEBUG - logger.py:64 - 기존 레코드 확인 쿼리: 
                    SELECT component_id FROM components 
                    WHERE project_id = ? AND component_name = ? AND file_id = ?
                    
2025-09-13 22:43:56,272 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 파라미터: (1, 'findUsersWithAnsiJoin', 5)
2025-09-13 22:43:56,272 - SourceAnalyzer - DEBUG - logger.py:64 - 기존 레코드 조회 결과: <sqlite3.Row object at 0x00000257905C59F0>
2025-09-13 22:43:56,272 - SourceAnalyzer - DEBUG - logger.py:64 - UPDATE 쿼리: 
                        UPDATE components SET component_type = ?, parent_id = ?, layer = ?, line_start = ?, line_end = ?, hash_value = ?, has_error = ?, error_message = ?, del_yn = ?
                        WHERE component_id = ?
                        
2025-09-13 22:43:56,272 - SourceAnalyzer - DEBUG - logger.py:64 - UPDATE 파라미터: ['SQL_SELECT', None, 'SQL', 1, 1, '02078f9f611e6605527e7c2866a5a0cf', 'N', None, 'N', 549]
2025-09-13 22:43:56,272 - SourceAnalyzer - DEBUG - logger.py:64 - UPDATE 실행 완료: component_id = 549
2025-09-13 22:43:56,272 - SourceAnalyzer - DEBUG - logger.py:64 - 컴포넌트 저장 완료: findUsersWithAnsiJoin (ID: 549)
2025-09-13 22:43:56,272 - SourceAnalyzer - DEBUG - logger.py:64 - 컴포넌트 저장 결과: component_id = 549
2025-09-13 22:43:56,273 - SourceAnalyzer - DEBUG - logger.py:64 - SQL Content 저장 시작: findUsersWithAnsiJoin (component_id: 549)
2025-09-13 22:43:56,273 - SourceAnalyzer - DEBUG - logger.py:64 - SQL Content 상대경로: src/com/example/dynamicquery
2025-09-13 22:43:56,273 - SourceAnalyzer - WARNING - logger.py:72 - SQL Content 저장 중 예외 발생 (무시하고 계속 진행): findUsersWithAnsiJoin - 'sql_query'
2025-09-13 22:43:56,273 - SourceAnalyzer - DEBUG - logger.py:64 - SQL 쿼리 처리 완료: findUsersWithAnsiJoin
2025-09-13 22:43:56,273 - SourceAnalyzer - DEBUG - logger.py:64 - SQL 쿼리 처리 루프 시작: 3/8
2025-09-13 22:43:56,273 - SourceAnalyzer - DEBUG - logger.py:64 - SQL 쿼리 처리 시작: findUsersWithAliasOmission (select)
2025-09-13 22:43:56,273 - SourceAnalyzer - DEBUG - logger.py:64 - GET XML ID 조회: D:\Analyzer\CreateMetaDb\projects\sampleSrc\src\com\example\dynamicquery\UserMapper.xml -> src/com/example/dynamicquery/UserMapper.xml
2025-09-13 22:43:56,273 - SourceAnalyzer - DEBUG - logger.py:64 - 메모리 매핑 테이블 키들: ['src/com/example/dynamicquery/UserMapper.xml', 'src/main/resources/mybatis/mapper/ImplicitJoinMapper.xml', 'src/main/resources/mybatis/mapper/ImplicitJoinTestMapper.xml', 'src/main/resources/mybatis/mapper/MixedErrorMapper.xml', 'src/main/resources/mybatis/mapper/ProductMapper.xml', 'src/main/resources/mybatis/mapper/UserMapper.xml']
2025-09-13 22:43:56,273 - SourceAnalyzer - DEBUG - logger.py:64 - 메모리에서 file_id 조회 성공: src/com/example/dynamicquery/UserMapper.xml -> 5
2025-09-13 22:43:56,273 - SourceAnalyzer - DEBUG - logger.py:64 - 파일 ID 조회 성공: 5
2025-09-13 22:43:56,273 - SourceAnalyzer - DEBUG - logger.py:64 - 컴포넌트 저장 시도: findUsersWithAliasOmission (select) -> SQL_SELECT
2025-09-13 22:43:56,273 - SourceAnalyzer - DEBUG - logger.py:64 - Upsert 실행: components
2025-09-13 22:43:56,273 - SourceAnalyzer - DEBUG - logger.py:64 - 데이터: {'project_id': 1, 'component_type': 'SQL_SELECT', 'component_name': 'findUsersWithAliasOmission', 'parent_id': None, 'layer': 'SQL', 'file_id': 5, 'line_start': 1, 'line_end': 1, 'hash_value': 'fc23d39261d0aa920db8fb5e0a1ac513', 'has_error': 'N', 'error_message': None, 'del_yn': 'N'}
2025-09-13 22:43:56,273 - SourceAnalyzer - DEBUG - logger.py:64 - Components upsert 시작: findUsersWithAliasOmission (SQL_SELECT)
2025-09-13 22:43:56,273 - SourceAnalyzer - DEBUG - logger.py:64 - 기존 레코드 확인 쿼리: 
                    SELECT component_id FROM components 
                    WHERE project_id = ? AND component_name = ? AND file_id = ?
                    
2025-09-13 22:43:56,273 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 파라미터: (1, 'findUsersWithAliasOmission', 5)
2025-09-13 22:43:56,273 - SourceAnalyzer - DEBUG - logger.py:64 - 기존 레코드 조회 결과: <sqlite3.Row object at 0x00000257905C5540>
2025-09-13 22:43:56,273 - SourceAnalyzer - DEBUG - logger.py:64 - UPDATE 쿼리: 
                        UPDATE components SET component_type = ?, parent_id = ?, layer = ?, line_start = ?, line_end = ?, hash_value = ?, has_error = ?, error_message = ?, del_yn = ?
                        WHERE component_id = ?
                        
2025-09-13 22:43:56,273 - SourceAnalyzer - DEBUG - logger.py:64 - UPDATE 파라미터: ['SQL_SELECT', None, 'SQL', 1, 1, 'fc23d39261d0aa920db8fb5e0a1ac513', 'N', None, 'N', 550]
2025-09-13 22:43:56,273 - SourceAnalyzer - DEBUG - logger.py:64 - UPDATE 실행 완료: component_id = 550
2025-09-13 22:43:56,273 - SourceAnalyzer - DEBUG - logger.py:64 - 컴포넌트 저장 완료: findUsersWithAliasOmission (ID: 550)
2025-09-13 22:43:56,273 - SourceAnalyzer - DEBUG - logger.py:64 - 컴포넌트 저장 결과: component_id = 550
2025-09-13 22:43:56,273 - SourceAnalyzer - DEBUG - logger.py:64 - SQL Content 저장 시작: findUsersWithAliasOmission (component_id: 550)
2025-09-13 22:43:56,273 - SourceAnalyzer - DEBUG - logger.py:64 - SQL Content 상대경로: src/com/example/dynamicquery
2025-09-13 22:43:56,273 - SourceAnalyzer - WARNING - logger.py:72 - SQL Content 저장 중 예외 발생 (무시하고 계속 진행): findUsersWithAliasOmission - 'sql_query'
2025-09-13 22:43:56,273 - SourceAnalyzer - DEBUG - logger.py:64 - SQL 쿼리 처리 완료: findUsersWithAliasOmission
2025-09-13 22:43:56,273 - SourceAnalyzer - DEBUG - logger.py:64 - SQL 쿼리 처리 루프 시작: 4/8
2025-09-13 22:43:56,273 - SourceAnalyzer - DEBUG - logger.py:64 - SQL 쿼리 처리 시작: findUsersWithMixedJoins (select)
2025-09-13 22:43:56,273 - SourceAnalyzer - DEBUG - logger.py:64 - GET XML ID 조회: D:\Analyzer\CreateMetaDb\projects\sampleSrc\src\com\example\dynamicquery\UserMapper.xml -> src/com/example/dynamicquery/UserMapper.xml
2025-09-13 22:43:56,274 - SourceAnalyzer - DEBUG - logger.py:64 - 메모리 매핑 테이블 키들: ['src/com/example/dynamicquery/UserMapper.xml', 'src/main/resources/mybatis/mapper/ImplicitJoinMapper.xml', 'src/main/resources/mybatis/mapper/ImplicitJoinTestMapper.xml', 'src/main/resources/mybatis/mapper/MixedErrorMapper.xml', 'src/main/resources/mybatis/mapper/ProductMapper.xml', 'src/main/resources/mybatis/mapper/UserMapper.xml']
2025-09-13 22:43:56,274 - SourceAnalyzer - DEBUG - logger.py:64 - 메모리에서 file_id 조회 성공: src/com/example/dynamicquery/UserMapper.xml -> 5
2025-09-13 22:43:56,274 - SourceAnalyzer - DEBUG - logger.py:64 - 파일 ID 조회 성공: 5
2025-09-13 22:43:56,274 - SourceAnalyzer - DEBUG - logger.py:64 - 컴포넌트 저장 시도: findUsersWithMixedJoins (select) -> SQL_SELECT
2025-09-13 22:43:56,274 - SourceAnalyzer - DEBUG - logger.py:64 - Upsert 실행: components
2025-09-13 22:43:56,274 - SourceAnalyzer - DEBUG - logger.py:64 - 데이터: {'project_id': 1, 'component_type': 'SQL_SELECT', 'component_name': 'findUsersWithMixedJoins', 'parent_id': None, 'layer': 'SQL', 'file_id': 5, 'line_start': 1, 'line_end': 1, 'hash_value': '1b154273b57fa222d82b55e8e770eb89', 'has_error': 'N', 'error_message': None, 'del_yn': 'N'}
2025-09-13 22:43:56,274 - SourceAnalyzer - DEBUG - logger.py:64 - Components upsert 시작: findUsersWithMixedJoins (SQL_SELECT)
2025-09-13 22:43:56,274 - SourceAnalyzer - DEBUG - logger.py:64 - 기존 레코드 확인 쿼리: 
                    SELECT component_id FROM components 
                    WHERE project_id = ? AND component_name = ? AND file_id = ?
                    
2025-09-13 22:43:56,274 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 파라미터: (1, 'findUsersWithMixedJoins', 5)
2025-09-13 22:43:56,274 - SourceAnalyzer - DEBUG - logger.py:64 - 기존 레코드 조회 결과: <sqlite3.Row object at 0x00000257905C59C0>
2025-09-13 22:43:56,274 - SourceAnalyzer - DEBUG - logger.py:64 - UPDATE 쿼리: 
                        UPDATE components SET component_type = ?, parent_id = ?, layer = ?, line_start = ?, line_end = ?, hash_value = ?, has_error = ?, error_message = ?, del_yn = ?
                        WHERE component_id = ?
                        
2025-09-13 22:43:56,274 - SourceAnalyzer - DEBUG - logger.py:64 - UPDATE 파라미터: ['SQL_SELECT', None, 'SQL', 1, 1, '1b154273b57fa222d82b55e8e770eb89', 'N', None, 'N', 551]
2025-09-13 22:43:56,274 - SourceAnalyzer - DEBUG - logger.py:64 - UPDATE 실행 완료: component_id = 551
2025-09-13 22:43:56,274 - SourceAnalyzer - DEBUG - logger.py:64 - 컴포넌트 저장 완료: findUsersWithMixedJoins (ID: 551)
2025-09-13 22:43:56,274 - SourceAnalyzer - DEBUG - logger.py:64 - 컴포넌트 저장 결과: component_id = 551
2025-09-13 22:43:56,274 - SourceAnalyzer - DEBUG - logger.py:64 - SQL Content 저장 시작: findUsersWithMixedJoins (component_id: 551)
2025-09-13 22:43:56,274 - SourceAnalyzer - DEBUG - logger.py:64 - SQL Content 상대경로: src/com/example/dynamicquery
2025-09-13 22:43:56,274 - SourceAnalyzer - WARNING - logger.py:72 - SQL Content 저장 중 예외 발생 (무시하고 계속 진행): findUsersWithMixedJoins - 'sql_query'
2025-09-13 22:43:56,274 - SourceAnalyzer - DEBUG - logger.py:64 - SQL 쿼리 처리 완료: findUsersWithMixedJoins
2025-09-13 22:43:56,274 - SourceAnalyzer - DEBUG - logger.py:64 - SQL 쿼리 처리 루프 시작: 5/8
2025-09-13 22:43:56,274 - SourceAnalyzer - DEBUG - logger.py:64 - SQL 쿼리 처리 시작: findComplexJoins (select)
2025-09-13 22:43:56,274 - SourceAnalyzer - DEBUG - logger.py:64 - GET XML ID 조회: D:\Analyzer\CreateMetaDb\projects\sampleSrc\src\com\example\dynamicquery\UserMapper.xml -> src/com/example/dynamicquery/UserMapper.xml
2025-09-13 22:43:56,274 - SourceAnalyzer - DEBUG - logger.py:64 - 메모리 매핑 테이블 키들: ['src/com/example/dynamicquery/UserMapper.xml', 'src/main/resources/mybatis/mapper/ImplicitJoinMapper.xml', 'src/main/resources/mybatis/mapper/ImplicitJoinTestMapper.xml', 'src/main/resources/mybatis/mapper/MixedErrorMapper.xml', 'src/main/resources/mybatis/mapper/ProductMapper.xml', 'src/main/resources/mybatis/mapper/UserMapper.xml']
2025-09-13 22:43:56,274 - SourceAnalyzer - DEBUG - logger.py:64 - 메모리에서 file_id 조회 성공: src/com/example/dynamicquery/UserMapper.xml -> 5
2025-09-13 22:43:56,274 - SourceAnalyzer - DEBUG - logger.py:64 - 파일 ID 조회 성공: 5
2025-09-13 22:43:56,274 - SourceAnalyzer - DEBUG - logger.py:64 - 컴포넌트 저장 시도: findComplexJoins (select) -> SQL_SELECT
2025-09-13 22:43:56,274 - SourceAnalyzer - DEBUG - logger.py:64 - Upsert 실행: components
2025-09-13 22:43:56,274 - SourceAnalyzer - DEBUG - logger.py:64 - 데이터: {'project_id': 1, 'component_type': 'SQL_SELECT', 'component_name': 'findComplexJoins', 'parent_id': None, 'layer': 'SQL', 'file_id': 5, 'line_start': 1, 'line_end': 1, 'hash_value': 'e65fb525f982da7c1679c4b559941bc6', 'has_error': 'N', 'error_message': None, 'del_yn': 'N'}
2025-09-13 22:43:56,274 - SourceAnalyzer - DEBUG - logger.py:64 - Components upsert 시작: findComplexJoins (SQL_SELECT)
2025-09-13 22:43:56,274 - SourceAnalyzer - DEBUG - logger.py:64 - 기존 레코드 확인 쿼리: 
                    SELECT component_id FROM components 
                    WHERE project_id = ? AND component_name = ? AND file_id = ?
                    
2025-09-13 22:43:56,275 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 파라미터: (1, 'findComplexJoins', 5)
2025-09-13 22:43:56,275 - SourceAnalyzer - DEBUG - logger.py:64 - 기존 레코드 조회 결과: <sqlite3.Row object at 0x00000257905C5A80>
2025-09-13 22:43:56,275 - SourceAnalyzer - DEBUG - logger.py:64 - UPDATE 쿼리: 
                        UPDATE components SET component_type = ?, parent_id = ?, layer = ?, line_start = ?, line_end = ?, hash_value = ?, has_error = ?, error_message = ?, del_yn = ?
                        WHERE component_id = ?
                        
2025-09-13 22:43:56,275 - SourceAnalyzer - DEBUG - logger.py:64 - UPDATE 파라미터: ['SQL_SELECT', None, 'SQL', 1, 1, 'e65fb525f982da7c1679c4b559941bc6', 'N', None, 'N', 552]
2025-09-13 22:43:56,275 - SourceAnalyzer - DEBUG - logger.py:64 - UPDATE 실행 완료: component_id = 552
2025-09-13 22:43:56,275 - SourceAnalyzer - DEBUG - logger.py:64 - 컴포넌트 저장 완료: findComplexJoins (ID: 552)
2025-09-13 22:43:56,275 - SourceAnalyzer - DEBUG - logger.py:64 - 컴포넌트 저장 결과: component_id = 552
2025-09-13 22:43:56,275 - SourceAnalyzer - DEBUG - logger.py:64 - SQL Content 저장 시작: findComplexJoins (component_id: 552)
2025-09-13 22:43:56,275 - SourceAnalyzer - DEBUG - logger.py:64 - SQL Content 상대경로: src/com/example/dynamicquery
2025-09-13 22:43:56,275 - SourceAnalyzer - WARNING - logger.py:72 - SQL Content 저장 중 예외 발생 (무시하고 계속 진행): findComplexJoins - 'sql_query'
2025-09-13 22:43:56,275 - SourceAnalyzer - DEBUG - logger.py:64 - SQL 쿼리 처리 완료: findComplexJoins
2025-09-13 22:43:56,275 - SourceAnalyzer - DEBUG - logger.py:64 - SQL 쿼리 처리 루프 시작: 6/8
2025-09-13 22:43:56,275 - SourceAnalyzer - DEBUG - logger.py:64 - SQL 쿼리 처리 시작: findUsersWithScatteredConditions (select)
2025-09-13 22:43:56,275 - SourceAnalyzer - DEBUG - logger.py:64 - GET XML ID 조회: D:\Analyzer\CreateMetaDb\projects\sampleSrc\src\com\example\dynamicquery\UserMapper.xml -> src/com/example/dynamicquery/UserMapper.xml
2025-09-13 22:43:56,275 - SourceAnalyzer - DEBUG - logger.py:64 - 메모리 매핑 테이블 키들: ['src/com/example/dynamicquery/UserMapper.xml', 'src/main/resources/mybatis/mapper/ImplicitJoinMapper.xml', 'src/main/resources/mybatis/mapper/ImplicitJoinTestMapper.xml', 'src/main/resources/mybatis/mapper/MixedErrorMapper.xml', 'src/main/resources/mybatis/mapper/ProductMapper.xml', 'src/main/resources/mybatis/mapper/UserMapper.xml']
2025-09-13 22:43:56,275 - SourceAnalyzer - DEBUG - logger.py:64 - 메모리에서 file_id 조회 성공: src/com/example/dynamicquery/UserMapper.xml -> 5
2025-09-13 22:43:56,275 - SourceAnalyzer - DEBUG - logger.py:64 - 파일 ID 조회 성공: 5
2025-09-13 22:43:56,275 - SourceAnalyzer - DEBUG - logger.py:64 - 컴포넌트 저장 시도: findUsersWithScatteredConditions (select) -> SQL_SELECT
2025-09-13 22:43:56,275 - SourceAnalyzer - DEBUG - logger.py:64 - Upsert 실행: components
2025-09-13 22:43:56,275 - SourceAnalyzer - DEBUG - logger.py:64 - 데이터: {'project_id': 1, 'component_type': 'SQL_SELECT', 'component_name': 'findUsersWithScatteredConditions', 'parent_id': None, 'layer': 'SQL', 'file_id': 5, 'line_start': 1, 'line_end': 1, 'hash_value': '1ee1d3cad41bcc1efda99c6c83ad76e9', 'has_error': 'N', 'error_message': None, 'del_yn': 'N'}
2025-09-13 22:43:56,275 - SourceAnalyzer - DEBUG - logger.py:64 - Components upsert 시작: findUsersWithScatteredConditions (SQL_SELECT)
2025-09-13 22:43:56,275 - SourceAnalyzer - DEBUG - logger.py:64 - 기존 레코드 확인 쿼리: 
                    SELECT component_id FROM components 
                    WHERE project_id = ? AND component_name = ? AND file_id = ?
                    
2025-09-13 22:43:56,275 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 파라미터: (1, 'findUsersWithScatteredConditions', 5)
2025-09-13 22:43:56,275 - SourceAnalyzer - DEBUG - logger.py:64 - 기존 레코드 조회 결과: <sqlite3.Row object at 0x00000257905C5960>
2025-09-13 22:43:56,275 - SourceAnalyzer - DEBUG - logger.py:64 - UPDATE 쿼리: 
                        UPDATE components SET component_type = ?, parent_id = ?, layer = ?, line_start = ?, line_end = ?, hash_value = ?, has_error = ?, error_message = ?, del_yn = ?
                        WHERE component_id = ?
                        
2025-09-13 22:43:56,275 - SourceAnalyzer - DEBUG - logger.py:64 - UPDATE 파라미터: ['SQL_SELECT', None, 'SQL', 1, 1, '1ee1d3cad41bcc1efda99c6c83ad76e9', 'N', None, 'N', 553]
2025-09-13 22:43:56,275 - SourceAnalyzer - DEBUG - logger.py:64 - UPDATE 실행 완료: component_id = 553
2025-09-13 22:43:56,275 - SourceAnalyzer - DEBUG - logger.py:64 - 컴포넌트 저장 완료: findUsersWithScatteredConditions (ID: 553)
2025-09-13 22:43:56,276 - SourceAnalyzer - DEBUG - logger.py:64 - 컴포넌트 저장 결과: component_id = 553
2025-09-13 22:43:56,276 - SourceAnalyzer - DEBUG - logger.py:64 - SQL Content 저장 시작: findUsersWithScatteredConditions (component_id: 553)
2025-09-13 22:43:56,276 - SourceAnalyzer - DEBUG - logger.py:64 - SQL Content 상대경로: src/com/example/dynamicquery
2025-09-13 22:43:56,276 - SourceAnalyzer - WARNING - logger.py:72 - SQL Content 저장 중 예외 발생 (무시하고 계속 진행): findUsersWithScatteredConditions - 'sql_query'
2025-09-13 22:43:56,276 - SourceAnalyzer - DEBUG - logger.py:64 - SQL 쿼리 처리 완료: findUsersWithScatteredConditions
2025-09-13 22:43:56,276 - SourceAnalyzer - DEBUG - logger.py:64 - SQL 쿼리 처리 루프 시작: 7/8
2025-09-13 22:43:56,276 - SourceAnalyzer - DEBUG - logger.py:64 - SQL 쿼리 처리 시작: findOrdersWithScatteredJoins (select)
2025-09-13 22:43:56,276 - SourceAnalyzer - DEBUG - logger.py:64 - GET XML ID 조회: D:\Analyzer\CreateMetaDb\projects\sampleSrc\src\com\example\dynamicquery\UserMapper.xml -> src/com/example/dynamicquery/UserMapper.xml
2025-09-13 22:43:56,276 - SourceAnalyzer - DEBUG - logger.py:64 - 메모리 매핑 테이블 키들: ['src/com/example/dynamicquery/UserMapper.xml', 'src/main/resources/mybatis/mapper/ImplicitJoinMapper.xml', 'src/main/resources/mybatis/mapper/ImplicitJoinTestMapper.xml', 'src/main/resources/mybatis/mapper/MixedErrorMapper.xml', 'src/main/resources/mybatis/mapper/ProductMapper.xml', 'src/main/resources/mybatis/mapper/UserMapper.xml']
2025-09-13 22:43:56,276 - SourceAnalyzer - DEBUG - logger.py:64 - 메모리에서 file_id 조회 성공: src/com/example/dynamicquery/UserMapper.xml -> 5
2025-09-13 22:43:56,276 - SourceAnalyzer - DEBUG - logger.py:64 - 파일 ID 조회 성공: 5
2025-09-13 22:43:56,276 - SourceAnalyzer - DEBUG - logger.py:64 - 컴포넌트 저장 시도: findOrdersWithScatteredJoins (select) -> SQL_SELECT
2025-09-13 22:43:56,276 - SourceAnalyzer - DEBUG - logger.py:64 - Upsert 실행: components
2025-09-13 22:43:56,276 - SourceAnalyzer - DEBUG - logger.py:64 - 데이터: {'project_id': 1, 'component_type': 'SQL_SELECT', 'component_name': 'findOrdersWithScatteredJoins', 'parent_id': None, 'layer': 'SQL', 'file_id': 5, 'line_start': 1, 'line_end': 1, 'hash_value': 'f68c28ee60bcd9561ea72803d7d3dd05', 'has_error': 'N', 'error_message': None, 'del_yn': 'N'}
2025-09-13 22:43:56,276 - SourceAnalyzer - DEBUG - logger.py:64 - Components upsert 시작: findOrdersWithScatteredJoins (SQL_SELECT)
2025-09-13 22:43:56,276 - SourceAnalyzer - DEBUG - logger.py:64 - 기존 레코드 확인 쿼리: 
                    SELECT component_id FROM components 
                    WHERE project_id = ? AND component_name = ? AND file_id = ?
                    
2025-09-13 22:43:56,276 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 파라미터: (1, 'findOrdersWithScatteredJoins', 5)
2025-09-13 22:43:56,276 - SourceAnalyzer - DEBUG - logger.py:64 - 기존 레코드 조회 결과: <sqlite3.Row object at 0x00000257905C5B10>
2025-09-13 22:43:56,276 - SourceAnalyzer - DEBUG - logger.py:64 - UPDATE 쿼리: 
                        UPDATE components SET component_type = ?, parent_id = ?, layer = ?, line_start = ?, line_end = ?, hash_value = ?, has_error = ?, error_message = ?, del_yn = ?
                        WHERE component_id = ?
                        
2025-09-13 22:43:56,276 - SourceAnalyzer - DEBUG - logger.py:64 - UPDATE 파라미터: ['SQL_SELECT', None, 'SQL', 1, 1, 'f68c28ee60bcd9561ea72803d7d3dd05', 'N', None, 'N', 554]
2025-09-13 22:43:56,276 - SourceAnalyzer - DEBUG - logger.py:64 - UPDATE 실행 완료: component_id = 554
2025-09-13 22:43:56,276 - SourceAnalyzer - DEBUG - logger.py:64 - 컴포넌트 저장 완료: findOrdersWithScatteredJoins (ID: 554)
2025-09-13 22:43:56,276 - SourceAnalyzer - DEBUG - logger.py:64 - 컴포넌트 저장 결과: component_id = 554
2025-09-13 22:43:56,276 - SourceAnalyzer - DEBUG - logger.py:64 - SQL Content 저장 시작: findOrdersWithScatteredJoins (component_id: 554)
2025-09-13 22:43:56,276 - SourceAnalyzer - DEBUG - logger.py:64 - SQL Content 상대경로: src/com/example/dynamicquery
2025-09-13 22:43:56,276 - SourceAnalyzer - WARNING - logger.py:72 - SQL Content 저장 중 예외 발생 (무시하고 계속 진행): findOrdersWithScatteredJoins - 'sql_query'
2025-09-13 22:43:56,276 - SourceAnalyzer - DEBUG - logger.py:64 - SQL 쿼리 처리 완료: findOrdersWithScatteredJoins
2025-09-13 22:43:56,276 - SourceAnalyzer - DEBUG - logger.py:64 - SQL 쿼리 처리 루프 시작: 8/8
2025-09-13 22:43:56,276 - SourceAnalyzer - DEBUG - logger.py:64 - SQL 쿼리 처리 시작: findComplexScatteredJoins (select)
2025-09-13 22:43:56,277 - SourceAnalyzer - DEBUG - logger.py:64 - GET XML ID 조회: D:\Analyzer\CreateMetaDb\projects\sampleSrc\src\com\example\dynamicquery\UserMapper.xml -> src/com/example/dynamicquery/UserMapper.xml
2025-09-13 22:43:56,277 - SourceAnalyzer - DEBUG - logger.py:64 - 메모리 매핑 테이블 키들: ['src/com/example/dynamicquery/UserMapper.xml', 'src/main/resources/mybatis/mapper/ImplicitJoinMapper.xml', 'src/main/resources/mybatis/mapper/ImplicitJoinTestMapper.xml', 'src/main/resources/mybatis/mapper/MixedErrorMapper.xml', 'src/main/resources/mybatis/mapper/ProductMapper.xml', 'src/main/resources/mybatis/mapper/UserMapper.xml']
2025-09-13 22:43:56,277 - SourceAnalyzer - DEBUG - logger.py:64 - 메모리에서 file_id 조회 성공: src/com/example/dynamicquery/UserMapper.xml -> 5
2025-09-13 22:43:56,277 - SourceAnalyzer - DEBUG - logger.py:64 - 파일 ID 조회 성공: 5
2025-09-13 22:43:56,277 - SourceAnalyzer - DEBUG - logger.py:64 - 컴포넌트 저장 시도: findComplexScatteredJoins (select) -> SQL_SELECT
2025-09-13 22:43:56,277 - SourceAnalyzer - DEBUG - logger.py:64 - Upsert 실행: components
2025-09-13 22:43:56,277 - SourceAnalyzer - DEBUG - logger.py:64 - 데이터: {'project_id': 1, 'component_type': 'SQL_SELECT', 'component_name': 'findComplexScatteredJoins', 'parent_id': None, 'layer': 'SQL', 'file_id': 5, 'line_start': 1, 'line_end': 1, 'hash_value': 'ef62661e3cd803fb718318175d5f13bb', 'has_error': 'N', 'error_message': None, 'del_yn': 'N'}
2025-09-13 22:43:56,277 - SourceAnalyzer - DEBUG - logger.py:64 - Components upsert 시작: findComplexScatteredJoins (SQL_SELECT)
2025-09-13 22:43:56,277 - SourceAnalyzer - DEBUG - logger.py:64 - 기존 레코드 확인 쿼리: 
                    SELECT component_id FROM components 
                    WHERE project_id = ? AND component_name = ? AND file_id = ?
                    
2025-09-13 22:43:56,277 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 파라미터: (1, 'findComplexScatteredJoins', 5)
2025-09-13 22:43:56,277 - SourceAnalyzer - DEBUG - logger.py:64 - 기존 레코드 조회 결과: <sqlite3.Row object at 0x00000257905C59F0>
2025-09-13 22:43:56,277 - SourceAnalyzer - DEBUG - logger.py:64 - UPDATE 쿼리: 
                        UPDATE components SET component_type = ?, parent_id = ?, layer = ?, line_start = ?, line_end = ?, hash_value = ?, has_error = ?, error_message = ?, del_yn = ?
                        WHERE component_id = ?
                        
2025-09-13 22:43:56,277 - SourceAnalyzer - DEBUG - logger.py:64 - UPDATE 파라미터: ['SQL_SELECT', None, 'SQL', 1, 1, 'ef62661e3cd803fb718318175d5f13bb', 'N', None, 'N', 555]
2025-09-13 22:43:56,277 - SourceAnalyzer - DEBUG - logger.py:64 - UPDATE 실행 완료: component_id = 555
2025-09-13 22:43:56,277 - SourceAnalyzer - DEBUG - logger.py:64 - 컴포넌트 저장 완료: findComplexScatteredJoins (ID: 555)
2025-09-13 22:43:56,277 - SourceAnalyzer - DEBUG - logger.py:64 - 컴포넌트 저장 결과: component_id = 555
2025-09-13 22:43:56,277 - SourceAnalyzer - DEBUG - logger.py:64 - SQL Content 저장 시작: findComplexScatteredJoins (component_id: 555)
2025-09-13 22:43:56,277 - SourceAnalyzer - DEBUG - logger.py:64 - SQL Content 상대경로: src/com/example/dynamicquery
2025-09-13 22:43:56,277 - SourceAnalyzer - WARNING - logger.py:72 - SQL Content 저장 중 예외 발생 (무시하고 계속 진행): findComplexScatteredJoins - 'sql_query'
2025-09-13 22:43:56,277 - SourceAnalyzer - DEBUG - logger.py:64 - SQL 쿼리 처리 완료: findComplexScatteredJoins
2025-09-13 22:43:56,277 - SourceAnalyzer - INFO - logger.py:68 - === SQL 쿼리 처리 완료 ===
2025-09-13 22:43:56,277 - SourceAnalyzer - INFO - logger.py:68 - 처리된 쿼리 수: 8
2025-09-13 22:43:56,277 - SourceAnalyzer - INFO - logger.py:68 - 건너뜀 쿼리 수: 0
2025-09-13 22:43:56,277 - SourceAnalyzer - INFO - logger.py:68 - 컴포넌트 ID 매핑 크기: 8
2025-09-13 22:43:56,277 - SourceAnalyzer - INFO - logger.py:68 - SQL 컴포넌트 저장 완료: 8개 (건너뜀: 0개)
2025-09-13 22:43:56,277 - SourceAnalyzer - INFO - logger.py:68 - process_sql_queries 호출 후: result=True
2025-09-13 22:43:56,277 - SourceAnalyzer - INFO - logger.py:68 - SQL Content Processor 처리 결과: True
2025-09-13 22:43:56,277 - SourceAnalyzer - INFO - logger.py:68 - === XML 로딩 엔진: SQL 컴포넌트 저장 완료 ===
2025-09-13 22:43:56,278 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 실행 성공: 
                SELECT c.component_id 
          ...
2025-09-13 22:43:56,278 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 실행 성공: 
                SELECT c.component_id 
          ...
2025-09-13 22:43:56,278 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 실행 성공: 
                SELECT c.component_id 
          ...
2025-09-13 22:43:56,278 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 실행 성공: 
                SELECT c.component_id 
          ...
2025-09-13 22:43:56,278 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 실행 성공: 
                SELECT c.component_id 
          ...
2025-09-13 22:43:56,278 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 실행 성공: 
                SELECT c.component_id 
          ...
2025-09-13 22:43:56,278 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 실행 성공: 
                SELECT c.component_id 
          ...
2025-09-13 22:43:56,278 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 실행 성공: 
                SELECT c.component_id 
          ...
2025-09-13 22:43:56,278 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 실행 성공: 
                SELECT c.component_id 
          ...
2025-09-13 22:43:56,278 - SourceAnalyzer - INFO - logger.py:68 - inferred 테이블 생성 시도: OI
2025-09-13 22:43:56,278 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 실행 성공: 
                SELECT file_id 
                F...
2025-09-13 22:43:56,278 - SourceAnalyzer - INFO - logger.py:68 - inferred 테이블용 file_id 찾음: 5
2025-09-13 22:43:56,278 - SourceAnalyzer - INFO - logger.py:68 - tables 테이블에 데이터 삽입 시도: {'project_id': 1, 'component_id': None, 'table_name': 'OI', 'table_owner': 'UNKNOWN', 'table_comments': 'Inferred from SQL analysis', 'has_error': 'N', 'error_message': None, 'hash_value': 'INFERRED', 'del_yn': 'N'}
2025-09-13 22:43:56,278 - SourceAnalyzer - DEBUG - logger.py:64 - Upsert 실행: tables
2025-09-13 22:43:56,278 - SourceAnalyzer - DEBUG - logger.py:64 - 데이터: {'project_id': 1, 'component_id': None, 'table_name': 'OI', 'table_owner': 'UNKNOWN', 'table_comments': 'Inferred from SQL analysis', 'has_error': 'N', 'error_message': None, 'hash_value': 'INFERRED', 'del_yn': 'N'}
2025-09-13 22:43:56,278 - SourceAnalyzer - INFO - logger.py:68 - tables 테이블 삽입 결과: 125
2025-09-13 22:43:56,279 - SourceAnalyzer - INFO - logger.py:68 - components 테이블에 데이터 삽입 시도: {'project_id': 1, 'component_type': 'TABLE', 'component_name': 'OI', 'parent_id': None, 'file_id': 5, 'line_start': None, 'line_end': None, 'hash_value': 'INFERRED', 'has_error': 'N', 'error_message': None, 'del_yn': 'N'}
2025-09-13 22:43:56,279 - SourceAnalyzer - DEBUG - logger.py:64 - Upsert 실행: components
2025-09-13 22:43:56,279 - SourceAnalyzer - DEBUG - logger.py:64 - 데이터: {'project_id': 1, 'component_type': 'TABLE', 'component_name': 'OI', 'parent_id': None, 'file_id': 5, 'line_start': None, 'line_end': None, 'hash_value': 'INFERRED', 'has_error': 'N', 'error_message': None, 'del_yn': 'N'}
2025-09-13 22:43:56,279 - SourceAnalyzer - DEBUG - logger.py:64 - Components upsert 시작: OI (TABLE)
2025-09-13 22:43:56,279 - SourceAnalyzer - DEBUG - logger.py:64 - 기존 레코드 확인 쿼리: 
                    SELECT component_id FROM components 
                    WHERE project_id = ? AND component_name = ? AND file_id = ?
                    
2025-09-13 22:43:56,279 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 파라미터: (1, 'OI', 5)
2025-09-13 22:43:56,279 - SourceAnalyzer - DEBUG - logger.py:64 - 기존 레코드 조회 결과: None
2025-09-13 22:43:56,279 - SourceAnalyzer - DEBUG - logger.py:64 - INSERT 쿼리: 
                        INSERT INTO components (project_id, component_type, component_name, parent_id, file_id, line_start, line_end, hash_value, has_error, error_message, del_yn)
                        VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
                        
2025-09-13 22:43:56,279 - SourceAnalyzer - DEBUG - logger.py:64 - INSERT 파라미터: (1, 'TABLE', 'OI', None, 5, None, None, 'INFERRED', 'N', None, 'N')
2025-09-13 22:43:56,279 - SourceAnalyzer - DEBUG - logger.py:64 - INSERT 실행 완료: component_id = 860
2025-09-13 22:43:56,279 - SourceAnalyzer - INFO - logger.py:68 - components 테이블 삽입 결과: 860
2025-09-13 22:43:56,279 - SourceAnalyzer - INFO - logger.py:68 - tables 테이블 업데이트 시도: component_id=860, table_id=125
2025-09-13 22:43:56,279 - SourceAnalyzer - DEBUG - logger.py:64 - 업데이트 쿼리 실행 성공: 
            UPDATE tables
            SET compone..., 영향받은 행: 1
2025-09-13 22:43:56,279 - SourceAnalyzer - INFO - logger.py:68 - tables 테이블 업데이트 완료
2025-09-13 22:43:56,279 - SourceAnalyzer - DEBUG - logger.py:64 - 테이블 OI에 대한 조인 필드가 없습니다
2025-09-13 22:43:56,279 - SourceAnalyzer - INFO - logger.py:68 - inferred 테이블 생성 완료: OI, component_id: 860
2025-09-13 22:43:56,279 - SourceAnalyzer - INFO - logger.py:68 - inferred 테이블 생성 성공: OI (ID: 860)
2025-09-13 22:43:56,279 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 실행 성공: 
                SELECT c.component_id 
          ...
2025-09-13 22:43:56,280 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 실행 성공: 
                SELECT c.component_id 
          ...
2025-09-13 22:43:56,280 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 실행 성공: 
                SELECT c.component_id 
          ...
2025-09-13 22:43:56,280 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 실행 성공: 
                SELECT c.component_id 
          ...
2025-09-13 22:43:56,280 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 실행 성공: 
                SELECT c.component_id 
          ...
2025-09-13 22:43:56,280 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 실행 성공: 
                SELECT c.component_id 
          ...
2025-09-13 22:43:56,280 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 실행 성공: 
                SELECT c.component_id 
          ...
2025-09-13 22:43:56,280 - SourceAnalyzer - INFO - logger.py:68 - inferred 테이블 생성 시도: UT
2025-09-13 22:43:56,280 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 실행 성공: 
                SELECT file_id 
                F...
2025-09-13 22:43:56,280 - SourceAnalyzer - INFO - logger.py:68 - inferred 테이블용 file_id 찾음: 5
2025-09-13 22:43:56,280 - SourceAnalyzer - INFO - logger.py:68 - tables 테이블에 데이터 삽입 시도: {'project_id': 1, 'component_id': None, 'table_name': 'UT', 'table_owner': 'UNKNOWN', 'table_comments': 'Inferred from SQL analysis', 'has_error': 'N', 'error_message': None, 'hash_value': 'INFERRED', 'del_yn': 'N'}
2025-09-13 22:43:56,280 - SourceAnalyzer - DEBUG - logger.py:64 - Upsert 실행: tables
2025-09-13 22:43:56,280 - SourceAnalyzer - DEBUG - logger.py:64 - 데이터: {'project_id': 1, 'component_id': None, 'table_name': 'UT', 'table_owner': 'UNKNOWN', 'table_comments': 'Inferred from SQL analysis', 'has_error': 'N', 'error_message': None, 'hash_value': 'INFERRED', 'del_yn': 'N'}
2025-09-13 22:43:56,280 - SourceAnalyzer - INFO - logger.py:68 - tables 테이블 삽입 결과: 126
2025-09-13 22:43:56,280 - SourceAnalyzer - INFO - logger.py:68 - components 테이블에 데이터 삽입 시도: {'project_id': 1, 'component_type': 'TABLE', 'component_name': 'UT', 'parent_id': None, 'file_id': 5, 'line_start': None, 'line_end': None, 'hash_value': 'INFERRED', 'has_error': 'N', 'error_message': None, 'del_yn': 'N'}
2025-09-13 22:43:56,280 - SourceAnalyzer - DEBUG - logger.py:64 - Upsert 실행: components
2025-09-13 22:43:56,280 - SourceAnalyzer - DEBUG - logger.py:64 - 데이터: {'project_id': 1, 'component_type': 'TABLE', 'component_name': 'UT', 'parent_id': None, 'file_id': 5, 'line_start': None, 'line_end': None, 'hash_value': 'INFERRED', 'has_error': 'N', 'error_message': None, 'del_yn': 'N'}
2025-09-13 22:43:56,280 - SourceAnalyzer - DEBUG - logger.py:64 - Components upsert 시작: UT (TABLE)
2025-09-13 22:43:56,280 - SourceAnalyzer - DEBUG - logger.py:64 - 기존 레코드 확인 쿼리: 
                    SELECT component_id FROM components 
                    WHERE project_id = ? AND component_name = ? AND file_id = ?
                    
2025-09-13 22:43:56,280 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 파라미터: (1, 'UT', 5)
2025-09-13 22:43:56,280 - SourceAnalyzer - DEBUG - logger.py:64 - 기존 레코드 조회 결과: None
2025-09-13 22:43:56,280 - SourceAnalyzer - DEBUG - logger.py:64 - INSERT 쿼리: 
                        INSERT INTO components (project_id, component_type, component_name, parent_id, file_id, line_start, line_end, hash_value, has_error, error_message, del_yn)
                        VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
                        
2025-09-13 22:43:56,280 - SourceAnalyzer - DEBUG - logger.py:64 - INSERT 파라미터: (1, 'TABLE', 'UT', None, 5, None, None, 'INFERRED', 'N', None, 'N')
2025-09-13 22:43:56,280 - SourceAnalyzer - DEBUG - logger.py:64 - INSERT 실행 완료: component_id = 861
2025-09-13 22:43:56,281 - SourceAnalyzer - INFO - logger.py:68 - components 테이블 삽입 결과: 861
2025-09-13 22:43:56,281 - SourceAnalyzer - INFO - logger.py:68 - tables 테이블 업데이트 시도: component_id=861, table_id=126
2025-09-13 22:43:56,281 - SourceAnalyzer - DEBUG - logger.py:64 - 업데이트 쿼리 실행 성공: 
            UPDATE tables
            SET compone..., 영향받은 행: 1
2025-09-13 22:43:56,281 - SourceAnalyzer - INFO - logger.py:68 - tables 테이블 업데이트 완료
2025-09-13 22:43:56,281 - SourceAnalyzer - DEBUG - logger.py:64 - 테이블 UT에 대한 조인 필드가 없습니다
2025-09-13 22:43:56,281 - SourceAnalyzer - INFO - logger.py:68 - inferred 테이블 생성 완료: UT, component_id: 861
2025-09-13 22:43:56,281 - SourceAnalyzer - INFO - logger.py:68 - inferred 테이블 생성 성공: UT (ID: 861)
2025-09-13 22:43:56,281 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 실행 성공: 
                SELECT c.component_id 
          ...
2025-09-13 22:43:56,281 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 실행 성공: 
                SELECT c.component_id 
          ...
2025-09-13 22:43:56,281 - SourceAnalyzer - INFO - logger.py:68 - inferred 테이블 생성 시도: UR
2025-09-13 22:43:56,281 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 실행 성공: 
                SELECT file_id 
                F...
2025-09-13 22:43:56,281 - SourceAnalyzer - INFO - logger.py:68 - inferred 테이블용 file_id 찾음: 5
2025-09-13 22:43:56,281 - SourceAnalyzer - INFO - logger.py:68 - tables 테이블에 데이터 삽입 시도: {'project_id': 1, 'component_id': None, 'table_name': 'UR', 'table_owner': 'UNKNOWN', 'table_comments': 'Inferred from SQL analysis', 'has_error': 'N', 'error_message': None, 'hash_value': 'INFERRED', 'del_yn': 'N'}
2025-09-13 22:43:56,281 - SourceAnalyzer - DEBUG - logger.py:64 - Upsert 실행: tables
2025-09-13 22:43:56,281 - SourceAnalyzer - DEBUG - logger.py:64 - 데이터: {'project_id': 1, 'component_id': None, 'table_name': 'UR', 'table_owner': 'UNKNOWN', 'table_comments': 'Inferred from SQL analysis', 'has_error': 'N', 'error_message': None, 'hash_value': 'INFERRED', 'del_yn': 'N'}
2025-09-13 22:43:56,281 - SourceAnalyzer - INFO - logger.py:68 - tables 테이블 삽입 결과: 127
2025-09-13 22:43:56,281 - SourceAnalyzer - INFO - logger.py:68 - components 테이블에 데이터 삽입 시도: {'project_id': 1, 'component_type': 'TABLE', 'component_name': 'UR', 'parent_id': None, 'file_id': 5, 'line_start': None, 'line_end': None, 'hash_value': 'INFERRED', 'has_error': 'N', 'error_message': None, 'del_yn': 'N'}
2025-09-13 22:43:56,281 - SourceAnalyzer - DEBUG - logger.py:64 - Upsert 실행: components
2025-09-13 22:43:56,281 - SourceAnalyzer - DEBUG - logger.py:64 - 데이터: {'project_id': 1, 'component_type': 'TABLE', 'component_name': 'UR', 'parent_id': None, 'file_id': 5, 'line_start': None, 'line_end': None, 'hash_value': 'INFERRED', 'has_error': 'N', 'error_message': None, 'del_yn': 'N'}
2025-09-13 22:43:56,282 - SourceAnalyzer - DEBUG - logger.py:64 - Components upsert 시작: UR (TABLE)
2025-09-13 22:43:56,282 - SourceAnalyzer - DEBUG - logger.py:64 - 기존 레코드 확인 쿼리: 
                    SELECT component_id FROM components 
                    WHERE project_id = ? AND component_name = ? AND file_id = ?
                    
2025-09-13 22:43:56,282 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 파라미터: (1, 'UR', 5)
2025-09-13 22:43:56,282 - SourceAnalyzer - DEBUG - logger.py:64 - 기존 레코드 조회 결과: None
2025-09-13 22:43:56,282 - SourceAnalyzer - DEBUG - logger.py:64 - INSERT 쿼리: 
                        INSERT INTO components (project_id, component_type, component_name, parent_id, file_id, line_start, line_end, hash_value, has_error, error_message, del_yn)
                        VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
                        
2025-09-13 22:43:56,282 - SourceAnalyzer - DEBUG - logger.py:64 - INSERT 파라미터: (1, 'TABLE', 'UR', None, 5, None, None, 'INFERRED', 'N', None, 'N')
2025-09-13 22:43:56,282 - SourceAnalyzer - DEBUG - logger.py:64 - INSERT 실행 완료: component_id = 862
2025-09-13 22:43:56,282 - SourceAnalyzer - INFO - logger.py:68 - components 테이블 삽입 결과: 862
2025-09-13 22:43:56,282 - SourceAnalyzer - INFO - logger.py:68 - tables 테이블 업데이트 시도: component_id=862, table_id=127
2025-09-13 22:43:56,282 - SourceAnalyzer - DEBUG - logger.py:64 - 업데이트 쿼리 실행 성공: 
            UPDATE tables
            SET compone..., 영향받은 행: 1
2025-09-13 22:43:56,282 - SourceAnalyzer - INFO - logger.py:68 - tables 테이블 업데이트 완료
2025-09-13 22:43:56,282 - SourceAnalyzer - DEBUG - logger.py:64 - 테이블 UR에 대한 조인 필드가 없습니다
2025-09-13 22:43:56,282 - SourceAnalyzer - INFO - logger.py:68 - inferred 테이블 생성 완료: UR, component_id: 862
2025-09-13 22:43:56,282 - SourceAnalyzer - INFO - logger.py:68 - inferred 테이블 생성 성공: UR (ID: 862)
2025-09-13 22:43:56,282 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 실행 성공: 
                SELECT c.component_id 
          ...
2025-09-13 22:43:56,282 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 실행 성공: 
                SELECT c.component_id 
          ...
2025-09-13 22:43:56,282 - SourceAnalyzer - INFO - logger.py:68 - inferred 테이블 생성 시도: R
2025-09-13 22:43:56,282 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 실행 성공: 
                SELECT file_id 
                F...
2025-09-13 22:43:56,282 - SourceAnalyzer - INFO - logger.py:68 - inferred 테이블용 file_id 찾음: 5
2025-09-13 22:43:56,282 - SourceAnalyzer - INFO - logger.py:68 - tables 테이블에 데이터 삽입 시도: {'project_id': 1, 'component_id': None, 'table_name': 'R', 'table_owner': 'UNKNOWN', 'table_comments': 'Inferred from SQL analysis', 'has_error': 'N', 'error_message': None, 'hash_value': 'INFERRED', 'del_yn': 'N'}
2025-09-13 22:43:56,283 - SourceAnalyzer - DEBUG - logger.py:64 - Upsert 실행: tables
2025-09-13 22:43:56,283 - SourceAnalyzer - DEBUG - logger.py:64 - 데이터: {'project_id': 1, 'component_id': None, 'table_name': 'R', 'table_owner': 'UNKNOWN', 'table_comments': 'Inferred from SQL analysis', 'has_error': 'N', 'error_message': None, 'hash_value': 'INFERRED', 'del_yn': 'N'}
2025-09-13 22:43:56,283 - SourceAnalyzer - INFO - logger.py:68 - tables 테이블 삽입 결과: 128
2025-09-13 22:43:56,283 - SourceAnalyzer - INFO - logger.py:68 - components 테이블에 데이터 삽입 시도: {'project_id': 1, 'component_type': 'TABLE', 'component_name': 'R', 'parent_id': None, 'file_id': 5, 'line_start': None, 'line_end': None, 'hash_value': 'INFERRED', 'has_error': 'N', 'error_message': None, 'del_yn': 'N'}
2025-09-13 22:43:56,283 - SourceAnalyzer - DEBUG - logger.py:64 - Upsert 실행: components
2025-09-13 22:43:56,283 - SourceAnalyzer - DEBUG - logger.py:64 - 데이터: {'project_id': 1, 'component_type': 'TABLE', 'component_name': 'R', 'parent_id': None, 'file_id': 5, 'line_start': None, 'line_end': None, 'hash_value': 'INFERRED', 'has_error': 'N', 'error_message': None, 'del_yn': 'N'}
2025-09-13 22:43:56,283 - SourceAnalyzer - DEBUG - logger.py:64 - Components upsert 시작: R (TABLE)
2025-09-13 22:43:56,283 - SourceAnalyzer - DEBUG - logger.py:64 - 기존 레코드 확인 쿼리: 
                    SELECT component_id FROM components 
                    WHERE project_id = ? AND component_name = ? AND file_id = ?
                    
2025-09-13 22:43:56,283 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 파라미터: (1, 'R', 5)
2025-09-13 22:43:56,283 - SourceAnalyzer - DEBUG - logger.py:64 - 기존 레코드 조회 결과: None
2025-09-13 22:43:56,283 - SourceAnalyzer - DEBUG - logger.py:64 - INSERT 쿼리: 
                        INSERT INTO components (project_id, component_type, component_name, parent_id, file_id, line_start, line_end, hash_value, has_error, error_message, del_yn)
                        VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
                        
2025-09-13 22:43:56,283 - SourceAnalyzer - DEBUG - logger.py:64 - INSERT 파라미터: (1, 'TABLE', 'R', None, 5, None, None, 'INFERRED', 'N', None, 'N')
2025-09-13 22:43:56,283 - SourceAnalyzer - DEBUG - logger.py:64 - INSERT 실행 완료: component_id = 863
2025-09-13 22:43:56,283 - SourceAnalyzer - INFO - logger.py:68 - components 테이블 삽입 결과: 863
2025-09-13 22:43:56,283 - SourceAnalyzer - INFO - logger.py:68 - tables 테이블 업데이트 시도: component_id=863, table_id=128
2025-09-13 22:43:56,283 - SourceAnalyzer - DEBUG - logger.py:64 - 업데이트 쿼리 실행 성공: 
            UPDATE tables
            SET compone..., 영향받은 행: 1
2025-09-13 22:43:56,283 - SourceAnalyzer - INFO - logger.py:68 - tables 테이블 업데이트 완료
2025-09-13 22:43:56,283 - SourceAnalyzer - DEBUG - logger.py:64 - 테이블 R에 대한 조인 필드가 없습니다
2025-09-13 22:43:56,283 - SourceAnalyzer - INFO - logger.py:68 - inferred 테이블 생성 완료: R, component_id: 863
2025-09-13 22:43:56,283 - SourceAnalyzer - INFO - logger.py:68 - inferred 테이블 생성 성공: R (ID: 863)
2025-09-13 22:43:56,284 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 실행 성공: 
                SELECT c.component_id 
          ...
2025-09-13 22:43:56,284 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 실행 성공: 
                SELECT c.component_id 
          ...
2025-09-13 22:43:56,284 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 실행 성공: 
                SELECT c.component_id 
          ...
2025-09-13 22:43:56,284 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 실행 성공: 
                SELECT c.component_id 
          ...
2025-09-13 22:43:56,284 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 실행 성공: 
                SELECT c.component_id 
          ...
2025-09-13 22:43:56,284 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 실행 성공: 
                SELECT c.component_id 
          ...
2025-09-13 22:43:56,284 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 실행 성공: 
                SELECT c.component_id 
          ...
2025-09-13 22:43:56,284 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 실행 성공: 
                SELECT c.component_id 
          ...
2025-09-13 22:43:56,284 - SourceAnalyzer - INFO - logger.py:68 - inferred 테이블 생성 시도: CAT
2025-09-13 22:43:56,284 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 실행 성공: 
                SELECT file_id 
                F...
2025-09-13 22:43:56,284 - SourceAnalyzer - INFO - logger.py:68 - inferred 테이블용 file_id 찾음: 5
2025-09-13 22:43:56,284 - SourceAnalyzer - INFO - logger.py:68 - tables 테이블에 데이터 삽입 시도: {'project_id': 1, 'component_id': None, 'table_name': 'CAT', 'table_owner': 'UNKNOWN', 'table_comments': 'Inferred from SQL analysis', 'has_error': 'N', 'error_message': None, 'hash_value': 'INFERRED', 'del_yn': 'N'}
2025-09-13 22:43:56,284 - SourceAnalyzer - DEBUG - logger.py:64 - Upsert 실행: tables
2025-09-13 22:43:56,284 - SourceAnalyzer - DEBUG - logger.py:64 - 데이터: {'project_id': 1, 'component_id': None, 'table_name': 'CAT', 'table_owner': 'UNKNOWN', 'table_comments': 'Inferred from SQL analysis', 'has_error': 'N', 'error_message': None, 'hash_value': 'INFERRED', 'del_yn': 'N'}
2025-09-13 22:43:56,284 - SourceAnalyzer - INFO - logger.py:68 - tables 테이블 삽입 결과: 129
2025-09-13 22:43:56,284 - SourceAnalyzer - INFO - logger.py:68 - components 테이블에 데이터 삽입 시도: {'project_id': 1, 'component_type': 'TABLE', 'component_name': 'CAT', 'parent_id': None, 'file_id': 5, 'line_start': None, 'line_end': None, 'hash_value': 'INFERRED', 'has_error': 'N', 'error_message': None, 'del_yn': 'N'}
2025-09-13 22:43:56,284 - SourceAnalyzer - DEBUG - logger.py:64 - Upsert 실행: components
2025-09-13 22:43:56,284 - SourceAnalyzer - DEBUG - logger.py:64 - 데이터: {'project_id': 1, 'component_type': 'TABLE', 'component_name': 'CAT', 'parent_id': None, 'file_id': 5, 'line_start': None, 'line_end': None, 'hash_value': 'INFERRED', 'has_error': 'N', 'error_message': None, 'del_yn': 'N'}
2025-09-13 22:43:56,284 - SourceAnalyzer - DEBUG - logger.py:64 - Components upsert 시작: CAT (TABLE)
2025-09-13 22:43:56,285 - SourceAnalyzer - DEBUG - logger.py:64 - 기존 레코드 확인 쿼리: 
                    SELECT component_id FROM components 
                    WHERE project_id = ? AND component_name = ? AND file_id = ?
                    
2025-09-13 22:43:56,285 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 파라미터: (1, 'CAT', 5)
2025-09-13 22:43:56,285 - SourceAnalyzer - DEBUG - logger.py:64 - 기존 레코드 조회 결과: None
2025-09-13 22:43:56,285 - SourceAnalyzer - DEBUG - logger.py:64 - INSERT 쿼리: 
                        INSERT INTO components (project_id, component_type, component_name, parent_id, file_id, line_start, line_end, hash_value, has_error, error_message, del_yn)
                        VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
                        
2025-09-13 22:43:56,285 - SourceAnalyzer - DEBUG - logger.py:64 - INSERT 파라미터: (1, 'TABLE', 'CAT', None, 5, None, None, 'INFERRED', 'N', None, 'N')
2025-09-13 22:43:56,285 - SourceAnalyzer - DEBUG - logger.py:64 - INSERT 실행 완료: component_id = 864
2025-09-13 22:43:56,285 - SourceAnalyzer - INFO - logger.py:68 - components 테이블 삽입 결과: 864
2025-09-13 22:43:56,285 - SourceAnalyzer - INFO - logger.py:68 - tables 테이블 업데이트 시도: component_id=864, table_id=129
2025-09-13 22:43:56,285 - SourceAnalyzer - DEBUG - logger.py:64 - 업데이트 쿼리 실행 성공: 
            UPDATE tables
            SET compone..., 영향받은 행: 1
2025-09-13 22:43:56,285 - SourceAnalyzer - INFO - logger.py:68 - tables 테이블 업데이트 완료
2025-09-13 22:43:56,285 - SourceAnalyzer - DEBUG - logger.py:64 - 테이블 CAT에 대한 조인 필드가 없습니다
2025-09-13 22:43:56,285 - SourceAnalyzer - INFO - logger.py:68 - inferred 테이블 생성 완료: CAT, component_id: 864
2025-09-13 22:43:56,285 - SourceAnalyzer - INFO - logger.py:68 - inferred 테이블 생성 성공: CAT (ID: 864)
2025-09-13 22:43:56,285 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 실행 성공: 
                SELECT c.component_id 
          ...
2025-09-13 22:43:56,285 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 실행 성공: 
                SELECT c.component_id 
          ...
2025-09-13 22:43:56,285 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 실행 성공: 
                SELECT c.component_id 
          ...
2025-09-13 22:43:56,285 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 실행 성공: 
                SELECT c.component_id 
          ...
2025-09-13 22:43:56,285 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 실행 성공: 
                SELECT c.component_id 
          ...
2025-09-13 22:43:56,285 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 실행 성공: 
                SELECT c.component_id 
          ...
2025-09-13 22:43:56,285 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 실행 성공: 
                SELECT c.component_id 
          ...
2025-09-13 22:43:56,286 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 실행 성공: 
                SELECT c.component_id 
          ...
2025-09-13 22:43:56,286 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 실행 성공: 
                SELECT c.component_id 
          ...
2025-09-13 22:43:56,286 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 실행 성공: 
                SELECT c.component_id 
          ...
2025-09-13 22:43:56,286 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 실행 성공: 
                SELECT c.component_id 
          ...
2025-09-13 22:43:56,286 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 실행 성공: 
                SELECT c.component_id 
          ...
2025-09-13 22:43:56,286 - SourceAnalyzer - INFO - logger.py:68 - inferred 테이블 생성 시도: O
2025-09-13 22:43:56,286 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 실행 성공: 
                SELECT file_id 
                F...
2025-09-13 22:43:56,286 - SourceAnalyzer - INFO - logger.py:68 - inferred 테이블용 file_id 찾음: 5
2025-09-13 22:43:56,286 - SourceAnalyzer - INFO - logger.py:68 - tables 테이블에 데이터 삽입 시도: {'project_id': 1, 'component_id': None, 'table_name': 'O', 'table_owner': 'UNKNOWN', 'table_comments': 'Inferred from SQL analysis', 'has_error': 'N', 'error_message': None, 'hash_value': 'INFERRED', 'del_yn': 'N'}
2025-09-13 22:43:56,286 - SourceAnalyzer - DEBUG - logger.py:64 - Upsert 실행: tables
2025-09-13 22:43:56,286 - SourceAnalyzer - DEBUG - logger.py:64 - 데이터: {'project_id': 1, 'component_id': None, 'table_name': 'O', 'table_owner': 'UNKNOWN', 'table_comments': 'Inferred from SQL analysis', 'has_error': 'N', 'error_message': None, 'hash_value': 'INFERRED', 'del_yn': 'N'}
2025-09-13 22:43:56,286 - SourceAnalyzer - INFO - logger.py:68 - tables 테이블 삽입 결과: 130
2025-09-13 22:43:56,286 - SourceAnalyzer - INFO - logger.py:68 - components 테이블에 데이터 삽입 시도: {'project_id': 1, 'component_type': 'TABLE', 'component_name': 'O', 'parent_id': None, 'file_id': 5, 'line_start': None, 'line_end': None, 'hash_value': 'INFERRED', 'has_error': 'N', 'error_message': None, 'del_yn': 'N'}
2025-09-13 22:43:56,286 - SourceAnalyzer - DEBUG - logger.py:64 - Upsert 실행: components
2025-09-13 22:43:56,286 - SourceAnalyzer - DEBUG - logger.py:64 - 데이터: {'project_id': 1, 'component_type': 'TABLE', 'component_name': 'O', 'parent_id': None, 'file_id': 5, 'line_start': None, 'line_end': None, 'hash_value': 'INFERRED', 'has_error': 'N', 'error_message': None, 'del_yn': 'N'}
2025-09-13 22:43:56,286 - SourceAnalyzer - DEBUG - logger.py:64 - Components upsert 시작: O (TABLE)
2025-09-13 22:43:56,286 - SourceAnalyzer - DEBUG - logger.py:64 - 기존 레코드 확인 쿼리: 
                    SELECT component_id FROM components 
                    WHERE project_id = ? AND component_name = ? AND file_id = ?
                    
2025-09-13 22:43:56,286 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 파라미터: (1, 'O', 5)
2025-09-13 22:43:56,286 - SourceAnalyzer - DEBUG - logger.py:64 - 기존 레코드 조회 결과: None
2025-09-13 22:43:56,286 - SourceAnalyzer - DEBUG - logger.py:64 - INSERT 쿼리: 
                        INSERT INTO components (project_id, component_type, component_name, parent_id, file_id, line_start, line_end, hash_value, has_error, error_message, del_yn)
                        VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
                        
2025-09-13 22:43:56,286 - SourceAnalyzer - DEBUG - logger.py:64 - INSERT 파라미터: (1, 'TABLE', 'O', None, 5, None, None, 'INFERRED', 'N', None, 'N')
2025-09-13 22:43:56,286 - SourceAnalyzer - DEBUG - logger.py:64 - INSERT 실행 완료: component_id = 865
2025-09-13 22:43:56,286 - SourceAnalyzer - INFO - logger.py:68 - components 테이블 삽입 결과: 865
2025-09-13 22:43:56,287 - SourceAnalyzer - INFO - logger.py:68 - tables 테이블 업데이트 시도: component_id=865, table_id=130
2025-09-13 22:43:56,287 - SourceAnalyzer - DEBUG - logger.py:64 - 업데이트 쿼리 실행 성공: 
            UPDATE tables
            SET compone..., 영향받은 행: 1
2025-09-13 22:43:56,287 - SourceAnalyzer - INFO - logger.py:68 - tables 테이블 업데이트 완료
2025-09-13 22:43:56,287 - SourceAnalyzer - DEBUG - logger.py:64 - 테이블 O에 대한 조인 필드가 없습니다
2025-09-13 22:43:56,287 - SourceAnalyzer - INFO - logger.py:68 - inferred 테이블 생성 완료: O, component_id: 865
2025-09-13 22:43:56,287 - SourceAnalyzer - INFO - logger.py:68 - inferred 테이블 생성 성공: O (ID: 865)
2025-09-13 22:43:56,287 - SourceAnalyzer - DEBUG - logger.py:64 - 배치 쿼리 실행 성공: 
            INSERT OR IGNORE INTO relationships (..., 처리된 행: 20
2025-09-13 22:43:56,287 - SourceAnalyzer - INFO - logger.py:68 - JOIN 관계 저장 완료: 20개
2025-09-13 22:43:56,287 - SourceAnalyzer - INFO - logger.py:68 - DOM 기반 파싱 시도: D:\Analyzer\CreateMetaDb\projects\sampleSrc\src\main\resources\mybatis\mapper\ImplicitJoinMapper.xml
2025-09-13 22:43:56,288 - SourceAnalyzer - WARNING - logger.py:72 - DOM 파싱 실패, Fallback 실행: D:\Analyzer\CreateMetaDb\projects\sampleSrc\src\main\resources\mybatis\mapper\ImplicitJoinMapper.xml - XmlParser._parse_with_dom() takes 2 positional arguments but 3 were given
2025-09-13 22:43:56,288 - SourceAnalyzer - WARNING - logger.py:72 - 데이터베이스 접근 실패: 'PathUtils' object has no attribute 'get_metadata_db_path'
2025-09-13 22:43:56,288 - SourceAnalyzer - WARNING - logger.py:72 - 데이터베이스 접근 실패: 'PathUtils' object has no attribute 'get_metadata_db_path'
2025-09-13 22:43:56,288 - SourceAnalyzer - WARNING - logger.py:72 - 데이터베이스 접근 실패: 'PathUtils' object has no attribute 'get_metadata_db_path'
2025-09-13 22:43:56,288 - SourceAnalyzer - WARNING - logger.py:72 - 데이터베이스 접근 실패: 'PathUtils' object has no attribute 'get_metadata_db_path'
2025-09-13 22:43:56,288 - SourceAnalyzer - WARNING - logger.py:72 - 데이터베이스 접근 실패: 'PathUtils' object has no attribute 'get_metadata_db_path'
2025-09-13 22:43:56,288 - SourceAnalyzer - WARNING - logger.py:72 - DOM 파싱 실패, Fallback 실행: D:\Analyzer\CreateMetaDb\projects\sampleSrc\src\main\resources\mybatis\mapper\ImplicitJoinMapper.xml - XmlParser._parse_with_dom() takes 2 positional arguments but 3 were given
2025-09-13 22:43:56,288 - SourceAnalyzer - WARNING - logger.py:72 - 데이터베이스 접근 실패: 'PathUtils' object has no attribute 'get_metadata_db_path'
2025-09-13 22:43:56,288 - SourceAnalyzer - WARNING - logger.py:72 - 데이터베이스 접근 실패: 'PathUtils' object has no attribute 'get_metadata_db_path'
2025-09-13 22:43:56,288 - SourceAnalyzer - WARNING - logger.py:72 - 데이터베이스 접근 실패: 'PathUtils' object has no attribute 'get_metadata_db_path'
2025-09-13 22:43:56,288 - SourceAnalyzer - WARNING - logger.py:72 - 데이터베이스 접근 실패: 'PathUtils' object has no attribute 'get_metadata_db_path'
2025-09-13 22:43:56,288 - SourceAnalyzer - WARNING - logger.py:72 - 데이터베이스 접근 실패: 'PathUtils' object has no attribute 'get_metadata_db_path'
2025-09-13 22:43:56,289 - SourceAnalyzer - WARNING - logger.py:72 - 데이터베이스 접근 실패: 'PathUtils' object has no attribute 'get_metadata_db_path'
2025-09-13 22:43:56,289 - SourceAnalyzer - WARNING - logger.py:72 - 데이터베이스 접근 실패: 'PathUtils' object has no attribute 'get_metadata_db_path'
2025-09-13 22:43:56,289 - SourceAnalyzer - WARNING - logger.py:72 - 데이터베이스 접근 실패: 'PathUtils' object has no attribute 'get_metadata_db_path'
2025-09-13 22:43:56,289 - SourceAnalyzer - WARNING - logger.py:72 - 데이터베이스 접근 실패: 'PathUtils' object has no attribute 'get_metadata_db_path'
2025-09-13 22:43:56,289 - SourceAnalyzer - WARNING - logger.py:72 - DOM 파싱 실패, Fallback 실행: D:\Analyzer\CreateMetaDb\projects\sampleSrc\src\main\resources\mybatis\mapper\ImplicitJoinMapper.xml - XmlParser._parse_with_dom() takes 2 positional arguments but 3 were given
2025-09-13 22:43:56,289 - SourceAnalyzer - WARNING - logger.py:72 - 데이터베이스 접근 실패: 'PathUtils' object has no attribute 'get_metadata_db_path'
2025-09-13 22:43:56,289 - SourceAnalyzer - WARNING - logger.py:72 - 데이터베이스 접근 실패: 'PathUtils' object has no attribute 'get_metadata_db_path'
2025-09-13 22:43:56,289 - SourceAnalyzer - WARNING - logger.py:72 - 데이터베이스 접근 실패: 'PathUtils' object has no attribute 'get_metadata_db_path'
2025-09-13 22:43:56,289 - SourceAnalyzer - WARNING - logger.py:72 - 데이터베이스 접근 실패: 'PathUtils' object has no attribute 'get_metadata_db_path'
2025-09-13 22:43:56,289 - SourceAnalyzer - WARNING - logger.py:72 - 데이터베이스 접근 실패: 'PathUtils' object has no attribute 'get_metadata_db_path'
2025-09-13 22:43:56,289 - SourceAnalyzer - WARNING - logger.py:72 - DOM 파싱 실패, Fallback 실행: D:\Analyzer\CreateMetaDb\projects\sampleSrc\src\main\resources\mybatis\mapper\ImplicitJoinMapper.xml - XmlParser._parse_with_dom() takes 2 positional arguments but 3 were given
2025-09-13 22:43:56,289 - SourceAnalyzer - WARNING - logger.py:72 - 데이터베이스 접근 실패: 'PathUtils' object has no attribute 'get_metadata_db_path'
2025-09-13 22:43:56,289 - SourceAnalyzer - WARNING - logger.py:72 - 데이터베이스 접근 실패: 'PathUtils' object has no attribute 'get_metadata_db_path'
2025-09-13 22:43:56,289 - SourceAnalyzer - WARNING - logger.py:72 - 데이터베이스 접근 실패: 'PathUtils' object has no attribute 'get_metadata_db_path'
2025-09-13 22:43:56,290 - SourceAnalyzer - WARNING - logger.py:72 - 데이터베이스 접근 실패: 'PathUtils' object has no attribute 'get_metadata_db_path'
2025-09-13 22:43:56,290 - SourceAnalyzer - WARNING - logger.py:72 - 데이터베이스 접근 실패: 'PathUtils' object has no attribute 'get_metadata_db_path'
2025-09-13 22:43:56,290 - SourceAnalyzer - WARNING - logger.py:72 - 데이터베이스 접근 실패: 'PathUtils' object has no attribute 'get_metadata_db_path'
2025-09-13 22:43:56,290 - SourceAnalyzer - WARNING - logger.py:72 - 데이터베이스 접근 실패: 'PathUtils' object has no attribute 'get_metadata_db_path'
2025-09-13 22:43:56,290 - SourceAnalyzer - WARNING - logger.py:72 - 데이터베이스 접근 실패: 'PathUtils' object has no attribute 'get_metadata_db_path'
2025-09-13 22:43:56,290 - SourceAnalyzer - WARNING - logger.py:72 - 데이터베이스 접근 실패: 'PathUtils' object has no attribute 'get_metadata_db_path'
2025-09-13 22:43:56,290 - SourceAnalyzer - WARNING - logger.py:72 - DOM 파싱 실패, Fallback 실행: D:\Analyzer\CreateMetaDb\projects\sampleSrc\src\main\resources\mybatis\mapper\ImplicitJoinMapper.xml - XmlParser._parse_with_dom() takes 2 positional arguments but 3 were given
2025-09-13 22:43:56,290 - SourceAnalyzer - WARNING - logger.py:72 - 데이터베이스 접근 실패: 'PathUtils' object has no attribute 'get_metadata_db_path'
2025-09-13 22:43:56,290 - SourceAnalyzer - WARNING - logger.py:72 - 데이터베이스 접근 실패: 'PathUtils' object has no attribute 'get_metadata_db_path'
2025-09-13 22:43:56,290 - SourceAnalyzer - WARNING - logger.py:72 - 데이터베이스 접근 실패: 'PathUtils' object has no attribute 'get_metadata_db_path'
2025-09-13 22:43:56,290 - SourceAnalyzer - WARNING - logger.py:72 - 데이터베이스 접근 실패: 'PathUtils' object has no attribute 'get_metadata_db_path'
2025-09-13 22:43:56,290 - SourceAnalyzer - WARNING - logger.py:72 - 데이터베이스 접근 실패: 'PathUtils' object has no attribute 'get_metadata_db_path'
2025-09-13 22:43:56,290 - SourceAnalyzer - WARNING - logger.py:72 - 데이터베이스 접근 실패: 'PathUtils' object has no attribute 'get_metadata_db_path'
2025-09-13 22:43:56,290 - SourceAnalyzer - WARNING - logger.py:72 - 데이터베이스 접근 실패: 'PathUtils' object has no attribute 'get_metadata_db_path'
2025-09-13 22:43:56,290 - SourceAnalyzer - WARNING - logger.py:72 - 데이터베이스 접근 실패: 'PathUtils' object has no attribute 'get_metadata_db_path'
2025-09-13 22:43:56,291 - SourceAnalyzer - WARNING - logger.py:72 - 데이터베이스 접근 실패: 'PathUtils' object has no attribute 'get_metadata_db_path'
2025-09-13 22:43:56,291 - SourceAnalyzer - WARNING - logger.py:72 - 데이터베이스 접근 실패: 'PathUtils' object has no attribute 'get_metadata_db_path'
2025-09-13 22:43:56,291 - SourceAnalyzer - WARNING - logger.py:72 - 데이터베이스 접근 실패: 'PathUtils' object has no attribute 'get_metadata_db_path'
2025-09-13 22:43:56,291 - SourceAnalyzer - WARNING - logger.py:72 - 데이터베이스 접근 실패: 'PathUtils' object has no attribute 'get_metadata_db_path'
2025-09-13 22:43:56,291 - SourceAnalyzer - WARNING - logger.py:72 - 데이터베이스 접근 실패: 'PathUtils' object has no attribute 'get_metadata_db_path'
2025-09-13 22:43:56,291 - SourceAnalyzer - WARNING - logger.py:72 - 데이터베이스 접근 실패: 'PathUtils' object has no attribute 'get_metadata_db_path'
2025-09-13 22:43:56,291 - SourceAnalyzer - WARNING - logger.py:72 - 데이터베이스 접근 실패: 'PathUtils' object has no attribute 'get_metadata_db_path'
2025-09-13 22:43:56,291 - SourceAnalyzer - WARNING - logger.py:72 - 데이터베이스 접근 실패: 'PathUtils' object has no attribute 'get_metadata_db_path'
2025-09-13 22:43:56,291 - SourceAnalyzer - WARNING - logger.py:72 - 데이터베이스 접근 실패: 'PathUtils' object has no attribute 'get_metadata_db_path'
2025-09-13 22:43:56,291 - SourceAnalyzer - INFO - logger.py:68 - DOM 기반 파싱 성공: D:\Analyzer\CreateMetaDb\projects\sampleSrc\src\main\resources\mybatis\mapper\ImplicitJoinMapper.xml
2025-09-13 22:43:56,291 - SourceAnalyzer - INFO - logger.py:68 - === XML 로딩 엔진: SQL 컴포넌트 저장 시작 ===
2025-09-13 22:43:56,291 - SourceAnalyzer - INFO - logger.py:68 - 전달받은 SQL 쿼리 수: 5개
2025-09-13 22:43:56,291 - SourceAnalyzer - INFO - logger.py:68 - XML에서 추출된 SQL 쿼리 타입별 통계: {'select': 5}
2025-09-13 22:43:56,291 - SourceAnalyzer - INFO - logger.py:68 - 프로젝트 ID: 1
2025-09-13 22:43:56,291 - SourceAnalyzer - INFO - logger.py:68 - SQL Content Processor를 사용하여 처리 시작
2025-09-13 22:43:56,291 - SourceAnalyzer - INFO - logger.py:68 - process_sql_queries 호출 전: sql_queries=5, project_id=1
2025-09-13 22:43:56,291 - SourceAnalyzer - INFO - logger.py:68 - === SQL 쿼리 처리 시작 ===
2025-09-13 22:43:56,291 - SourceAnalyzer - INFO - logger.py:68 - 전달받은 SQL 쿼리 수: 5
2025-09-13 22:43:56,291 - SourceAnalyzer - INFO - logger.py:68 - 프로젝트 ID: 1
2025-09-13 22:43:56,292 - SourceAnalyzer - DEBUG - logger.py:64 - SQL 쿼리 리스트 검증 시작
2025-09-13 22:43:56,292 - SourceAnalyzer - DEBUG - logger.py:64 - SQL 쿼리 리스트 타입: <class 'list'>
2025-09-13 22:43:56,292 - SourceAnalyzer - DEBUG - logger.py:64 - SQL 쿼리 리스트 길이: 5
2025-09-13 22:43:56,292 - SourceAnalyzer - DEBUG - logger.py:64 - 첫 번째 쿼리: {'tag_name': 'select', 'query_id': 'getUsersWithTypes', 'query_type': 'select', 'sql_content': '\n        SELECT u.id, u.name, u.email, ut.type_name\n        FROM users u, user_types ut\n        WHERE u.type_id = ut.id\n        ORDER BY u.name\n    ', 'file_path': 'D:\\Analyzer\\CreateMetaDb\\projects\\sampleSrc\\src\\main\\resources\\mybatis\\mapper\\ImplicitJoinMapper.xml', 'line_start': 1, 'line_end': 1, 'hash_value': 'ff0ef69ebcf0c8f08a86a37f60a1912f'}
2025-09-13 22:43:56,292 - SourceAnalyzer - DEBUG - logger.py:64 - SQL 쿼리 리스트 검증 완료
2025-09-13 22:43:56,292 - SourceAnalyzer - DEBUG - logger.py:64 - SQL 쿼리 타입별 통계 시작
2025-09-13 22:43:56,292 - SourceAnalyzer - INFO - logger.py:68 - SQL 쿼리 타입별 통계: {'select': 5}
2025-09-13 22:43:56,292 - SourceAnalyzer - DEBUG - logger.py:64 - SQL 쿼리 타입별 통계 완료
2025-09-13 22:43:56,292 - SourceAnalyzer - DEBUG - logger.py:64 - SQL 쿼리 리스트 크기: 5
2025-09-13 22:43:56,292 - SourceAnalyzer - DEBUG - logger.py:64 - SQL 쿼리 리스트 타입: <class 'list'>
2025-09-13 22:43:56,292 - SourceAnalyzer - DEBUG - logger.py:64 - 첫 번째 쿼리 정보: {'tag_name': 'select', 'query_id': 'getUsersWithTypes', 'query_type': 'select', 'sql_content': '\n        SELECT u.id, u.name, u.email, ut.type_name\n        FROM users u, user_types ut\n        WHERE u.type_id = ut.id\n        ORDER BY u.name\n    ', 'file_path': 'D:\\Analyzer\\CreateMetaDb\\projects\\sampleSrc\\src\\main\\resources\\mybatis\\mapper\\ImplicitJoinMapper.xml', 'line_start': 1, 'line_end': 1, 'hash_value': 'ff0ef69ebcf0c8f08a86a37f60a1912f'}
2025-09-13 22:43:56,292 - SourceAnalyzer - DEBUG - logger.py:64 - 모든 쿼리 정보: [{'tag_name': 'select', 'query_id': 'getUsersWithTypes', 'query_type': 'select', 'sql_content': '\n        SELECT u.id, u.name, u.email, ut.type_name\n        FROM users u, user_types ut\n        WHERE u.type_id = ut.id\n        ORDER BY u.name\n    ', 'file_path': 'D:\\Analyzer\\CreateMetaDb\\projects\\sampleSrc\\src\\main\\resources\\mybatis\\mapper\\ImplicitJoinMapper.xml', 'line_start': 1, 'line_end': 1, 'hash_value': 'ff0ef69ebcf0c8f08a86a37f60a1912f'}, {'tag_name': 'select', 'query_id': 'getProductsWithCategoryAndBrand', 'query_type': 'select', 'sql_content': "\n        SELECT p.id, p.name, p.price, c.category_name, b.brand_name\n        FROM products p, categories c, brands b\n        WHERE p.category_id = c.id \n          AND p.brand_id = b.id\n          AND p.status = 'ACTIVE'\n        ORDER BY p.name\n    ", 'file_path': 'D:\\Analyzer\\CreateMetaDb\\projects\\sampleSrc\\src\\main\\resources\\mybatis\\mapper\\ImplicitJoinMapper.xml', 'line_start': 1, 'line_end': 1, 'hash_value': '1ffa025326af14fd55baa492b973ce37'}, {'tag_name': 'select', 'query_id': 'getOrdersWithUsers', 'query_type': 'select', 'sql_content': "\n        SELECT o.id AS order_id, o.order_date, u.name AS user_name, u.email\n        FROM orders ord_alias, users user_alias\n        WHERE ord_alias.user_id = user_alias.id\n          AND ord_alias.status = 'COMPLETED'\n        ORDER BY ord_alias.order_date DESC\n    ", 'file_path': 'D:\\Analyzer\\CreateMetaDb\\projects\\sampleSrc\\src\\main\\resources\\mybatis\\mapper\\ImplicitJoinMapper.xml', 'line_start': 1, 'line_end': 1, 'hash_value': '83d8199dc6f7b86f23bf0c2121ce453b'}, {'tag_name': 'select', 'query_id': 'getComplexJoin', 'query_type': 'select', 'sql_content': "\n        SELECT u.name, ut.type_name, p.name AS product_name, c.category_name\n        FROM users u, user_types ut, products p, categories c\n        WHERE u.type_id = ut.id\n          AND p.category_id = c.id\n          AND u.created_date > #{startDate}\n          AND p.status = 'ACTIVE'\n        ORDER BY u.name, p.name\n    ", 'file_path': 'D:\\Analyzer\\CreateMetaDb\\projects\\sampleSrc\\src\\main\\resources\\mybatis\\mapper\\ImplicitJoinMapper.xml', 'line_start': 1, 'line_end': 1, 'hash_value': '8c496c80d3582accfdb96dee9212f1b9'}, {'tag_name': 'select', 'query_id': 'getMixedJoin', 'query_type': 'select', 'sql_content': "\n        SELECT u.name, ut.type_name, r.role_name, p.name AS product_name\n        FROM users u, user_types ut\n        LEFT JOIN user_roles ur ON u.id = ur.user_id\n        LEFT JOIN roles r ON ur.role_id = r.id\n        INNER JOIN products p ON p.created_by = u.id\n        WHERE u.type_id = ut.id\n          AND u.status = 'ACTIVE'\n        ORDER BY u.name\n    ", 'file_path': 'D:\\Analyzer\\CreateMetaDb\\projects\\sampleSrc\\src\\main\\resources\\mybatis\\mapper\\ImplicitJoinMapper.xml', 'line_start': 1, 'line_end': 1, 'hash_value': '41c259efd15fe6897cf293e8b10cfb72'}]
2025-09-13 22:43:56,292 - SourceAnalyzer - DEBUG - logger.py:64 - SQL 쿼리 처리 루프 시작 전
2025-09-13 22:43:56,292 - SourceAnalyzer - DEBUG - logger.py:64 - SQL 쿼리 처리 루프 시작: 1/5
2025-09-13 22:43:56,292 - SourceAnalyzer - DEBUG - logger.py:64 - SQL 쿼리 처리 시작: getUsersWithTypes (select)
2025-09-13 22:43:56,292 - SourceAnalyzer - DEBUG - logger.py:64 - GET XML ID 조회: D:\Analyzer\CreateMetaDb\projects\sampleSrc\src\main\resources\mybatis\mapper\ImplicitJoinMapper.xml -> src/main/resources/mybatis/mapper/ImplicitJoinMapper.xml
2025-09-13 22:43:56,292 - SourceAnalyzer - DEBUG - logger.py:64 - 메모리 매핑 테이블 키들: ['src/com/example/dynamicquery/UserMapper.xml', 'src/main/resources/mybatis/mapper/ImplicitJoinMapper.xml', 'src/main/resources/mybatis/mapper/ImplicitJoinTestMapper.xml', 'src/main/resources/mybatis/mapper/MixedErrorMapper.xml', 'src/main/resources/mybatis/mapper/ProductMapper.xml', 'src/main/resources/mybatis/mapper/UserMapper.xml']
2025-09-13 22:43:56,292 - SourceAnalyzer - DEBUG - logger.py:64 - 메모리에서 file_id 조회 성공: src/main/resources/mybatis/mapper/ImplicitJoinMapper.xml -> 23
2025-09-13 22:43:56,292 - SourceAnalyzer - DEBUG - logger.py:64 - 파일 ID 조회 성공: 23
2025-09-13 22:43:56,292 - SourceAnalyzer - DEBUG - logger.py:64 - 컴포넌트 저장 시도: getUsersWithTypes (select) -> SQL_SELECT
2025-09-13 22:43:56,292 - SourceAnalyzer - DEBUG - logger.py:64 - Upsert 실행: components
2025-09-13 22:43:56,292 - SourceAnalyzer - DEBUG - logger.py:64 - 데이터: {'project_id': 1, 'component_type': 'SQL_SELECT', 'component_name': 'getUsersWithTypes', 'parent_id': None, 'layer': 'SQL', 'file_id': 23, 'line_start': 1, 'line_end': 1, 'hash_value': 'ff0ef69ebcf0c8f08a86a37f60a1912f', 'has_error': 'N', 'error_message': None, 'del_yn': 'N'}
2025-09-13 22:43:56,292 - SourceAnalyzer - DEBUG - logger.py:64 - Components upsert 시작: getUsersWithTypes (SQL_SELECT)
2025-09-13 22:43:56,292 - SourceAnalyzer - DEBUG - logger.py:64 - 기존 레코드 확인 쿼리: 
                    SELECT component_id FROM components 
                    WHERE project_id = ? AND component_name = ? AND file_id = ?
                    
2025-09-13 22:43:56,292 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 파라미터: (1, 'getUsersWithTypes', 23)
2025-09-13 22:43:56,293 - SourceAnalyzer - DEBUG - logger.py:64 - 기존 레코드 조회 결과: <sqlite3.Row object at 0x00000257905C53C0>
2025-09-13 22:43:56,293 - SourceAnalyzer - DEBUG - logger.py:64 - UPDATE 쿼리: 
                        UPDATE components SET component_type = ?, parent_id = ?, layer = ?, line_start = ?, line_end = ?, hash_value = ?, has_error = ?, error_message = ?, del_yn = ?
                        WHERE component_id = ?
                        
2025-09-13 22:43:56,293 - SourceAnalyzer - DEBUG - logger.py:64 - UPDATE 파라미터: ['SQL_SELECT', None, 'SQL', 1, 1, 'ff0ef69ebcf0c8f08a86a37f60a1912f', 'N', None, 'N', 559]
2025-09-13 22:43:56,293 - SourceAnalyzer - DEBUG - logger.py:64 - UPDATE 실행 완료: component_id = 559
2025-09-13 22:43:56,293 - SourceAnalyzer - DEBUG - logger.py:64 - 컴포넌트 저장 완료: getUsersWithTypes (ID: 559)
2025-09-13 22:43:56,293 - SourceAnalyzer - DEBUG - logger.py:64 - 컴포넌트 저장 결과: component_id = 559
2025-09-13 22:43:56,293 - SourceAnalyzer - DEBUG - logger.py:64 - SQL Content 저장 시작: getUsersWithTypes (component_id: 559)
2025-09-13 22:43:56,293 - SourceAnalyzer - DEBUG - logger.py:64 - SQL Content 상대경로: src/main/resources/mybatis/mapper
2025-09-13 22:43:56,293 - SourceAnalyzer - WARNING - logger.py:72 - SQL Content 저장 중 예외 발생 (무시하고 계속 진행): getUsersWithTypes - 'sql_query'
2025-09-13 22:43:56,293 - SourceAnalyzer - DEBUG - logger.py:64 - SQL 쿼리 처리 완료: getUsersWithTypes
2025-09-13 22:43:56,293 - SourceAnalyzer - DEBUG - logger.py:64 - SQL 쿼리 처리 루프 시작: 2/5
2025-09-13 22:43:56,293 - SourceAnalyzer - DEBUG - logger.py:64 - SQL 쿼리 처리 시작: getProductsWithCategoryAndBrand (select)
2025-09-13 22:43:56,293 - SourceAnalyzer - DEBUG - logger.py:64 - GET XML ID 조회: D:\Analyzer\CreateMetaDb\projects\sampleSrc\src\main\resources\mybatis\mapper\ImplicitJoinMapper.xml -> src/main/resources/mybatis/mapper/ImplicitJoinMapper.xml
2025-09-13 22:43:56,293 - SourceAnalyzer - DEBUG - logger.py:64 - 메모리 매핑 테이블 키들: ['src/com/example/dynamicquery/UserMapper.xml', 'src/main/resources/mybatis/mapper/ImplicitJoinMapper.xml', 'src/main/resources/mybatis/mapper/ImplicitJoinTestMapper.xml', 'src/main/resources/mybatis/mapper/MixedErrorMapper.xml', 'src/main/resources/mybatis/mapper/ProductMapper.xml', 'src/main/resources/mybatis/mapper/UserMapper.xml']
2025-09-13 22:43:56,293 - SourceAnalyzer - DEBUG - logger.py:64 - 메모리에서 file_id 조회 성공: src/main/resources/mybatis/mapper/ImplicitJoinMapper.xml -> 23
2025-09-13 22:43:56,293 - SourceAnalyzer - DEBUG - logger.py:64 - 파일 ID 조회 성공: 23
2025-09-13 22:43:56,293 - SourceAnalyzer - DEBUG - logger.py:64 - 컴포넌트 저장 시도: getProductsWithCategoryAndBrand (select) -> SQL_SELECT
2025-09-13 22:43:56,293 - SourceAnalyzer - DEBUG - logger.py:64 - Upsert 실행: components
2025-09-13 22:43:56,293 - SourceAnalyzer - DEBUG - logger.py:64 - 데이터: {'project_id': 1, 'component_type': 'SQL_SELECT', 'component_name': 'getProductsWithCategoryAndBrand', 'parent_id': None, 'layer': 'SQL', 'file_id': 23, 'line_start': 1, 'line_end': 1, 'hash_value': '1ffa025326af14fd55baa492b973ce37', 'has_error': 'N', 'error_message': None, 'del_yn': 'N'}
2025-09-13 22:43:56,293 - SourceAnalyzer - DEBUG - logger.py:64 - Components upsert 시작: getProductsWithCategoryAndBrand (SQL_SELECT)
2025-09-13 22:43:56,293 - SourceAnalyzer - DEBUG - logger.py:64 - 기존 레코드 확인 쿼리: 
                    SELECT component_id FROM components 
                    WHERE project_id = ? AND component_name = ? AND file_id = ?
                    
2025-09-13 22:43:56,293 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 파라미터: (1, 'getProductsWithCategoryAndBrand', 23)
2025-09-13 22:43:56,293 - SourceAnalyzer - DEBUG - logger.py:64 - 기존 레코드 조회 결과: <sqlite3.Row object at 0x00000257905C53C0>
2025-09-13 22:43:56,293 - SourceAnalyzer - DEBUG - logger.py:64 - UPDATE 쿼리: 
                        UPDATE components SET component_type = ?, parent_id = ?, layer = ?, line_start = ?, line_end = ?, hash_value = ?, has_error = ?, error_message = ?, del_yn = ?
                        WHERE component_id = ?
                        
2025-09-13 22:43:56,293 - SourceAnalyzer - DEBUG - logger.py:64 - UPDATE 파라미터: ['SQL_SELECT', None, 'SQL', 1, 1, '1ffa025326af14fd55baa492b973ce37', 'N', None, 'N', 560]
2025-09-13 22:43:56,293 - SourceAnalyzer - DEBUG - logger.py:64 - UPDATE 실행 완료: component_id = 560
2025-09-13 22:43:56,293 - SourceAnalyzer - DEBUG - logger.py:64 - 컴포넌트 저장 완료: getProductsWithCategoryAndBrand (ID: 560)
2025-09-13 22:43:56,294 - SourceAnalyzer - DEBUG - logger.py:64 - 컴포넌트 저장 결과: component_id = 560
2025-09-13 22:43:56,294 - SourceAnalyzer - DEBUG - logger.py:64 - SQL Content 저장 시작: getProductsWithCategoryAndBrand (component_id: 560)
2025-09-13 22:43:56,294 - SourceAnalyzer - DEBUG - logger.py:64 - SQL Content 상대경로: src/main/resources/mybatis/mapper
2025-09-13 22:43:56,294 - SourceAnalyzer - WARNING - logger.py:72 - SQL Content 저장 중 예외 발생 (무시하고 계속 진행): getProductsWithCategoryAndBrand - 'sql_query'
2025-09-13 22:43:56,294 - SourceAnalyzer - DEBUG - logger.py:64 - SQL 쿼리 처리 완료: getProductsWithCategoryAndBrand
2025-09-13 22:43:56,294 - SourceAnalyzer - DEBUG - logger.py:64 - SQL 쿼리 처리 루프 시작: 3/5
2025-09-13 22:43:56,294 - SourceAnalyzer - DEBUG - logger.py:64 - SQL 쿼리 처리 시작: getOrdersWithUsers (select)
2025-09-13 22:43:56,294 - SourceAnalyzer - DEBUG - logger.py:64 - GET XML ID 조회: D:\Analyzer\CreateMetaDb\projects\sampleSrc\src\main\resources\mybatis\mapper\ImplicitJoinMapper.xml -> src/main/resources/mybatis/mapper/ImplicitJoinMapper.xml
2025-09-13 22:43:56,294 - SourceAnalyzer - DEBUG - logger.py:64 - 메모리 매핑 테이블 키들: ['src/com/example/dynamicquery/UserMapper.xml', 'src/main/resources/mybatis/mapper/ImplicitJoinMapper.xml', 'src/main/resources/mybatis/mapper/ImplicitJoinTestMapper.xml', 'src/main/resources/mybatis/mapper/MixedErrorMapper.xml', 'src/main/resources/mybatis/mapper/ProductMapper.xml', 'src/main/resources/mybatis/mapper/UserMapper.xml']
2025-09-13 22:43:56,294 - SourceAnalyzer - DEBUG - logger.py:64 - 메모리에서 file_id 조회 성공: src/main/resources/mybatis/mapper/ImplicitJoinMapper.xml -> 23
2025-09-13 22:43:56,294 - SourceAnalyzer - DEBUG - logger.py:64 - 파일 ID 조회 성공: 23
2025-09-13 22:43:56,294 - SourceAnalyzer - DEBUG - logger.py:64 - 컴포넌트 저장 시도: getOrdersWithUsers (select) -> SQL_SELECT
2025-09-13 22:43:56,294 - SourceAnalyzer - DEBUG - logger.py:64 - Upsert 실행: components
2025-09-13 22:43:56,294 - SourceAnalyzer - DEBUG - logger.py:64 - 데이터: {'project_id': 1, 'component_type': 'SQL_SELECT', 'component_name': 'getOrdersWithUsers', 'parent_id': None, 'layer': 'SQL', 'file_id': 23, 'line_start': 1, 'line_end': 1, 'hash_value': '83d8199dc6f7b86f23bf0c2121ce453b', 'has_error': 'N', 'error_message': None, 'del_yn': 'N'}
2025-09-13 22:43:56,294 - SourceAnalyzer - DEBUG - logger.py:64 - Components upsert 시작: getOrdersWithUsers (SQL_SELECT)
2025-09-13 22:43:56,294 - SourceAnalyzer - DEBUG - logger.py:64 - 기존 레코드 확인 쿼리: 
                    SELECT component_id FROM components 
                    WHERE project_id = ? AND component_name = ? AND file_id = ?
                    
2025-09-13 22:43:56,294 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 파라미터: (1, 'getOrdersWithUsers', 23)
2025-09-13 22:43:56,294 - SourceAnalyzer - DEBUG - logger.py:64 - 기존 레코드 조회 결과: <sqlite3.Row object at 0x00000257905C58D0>
2025-09-13 22:43:56,294 - SourceAnalyzer - DEBUG - logger.py:64 - UPDATE 쿼리: 
                        UPDATE components SET component_type = ?, parent_id = ?, layer = ?, line_start = ?, line_end = ?, hash_value = ?, has_error = ?, error_message = ?, del_yn = ?
                        WHERE component_id = ?
                        
2025-09-13 22:43:56,294 - SourceAnalyzer - DEBUG - logger.py:64 - UPDATE 파라미터: ['SQL_SELECT', None, 'SQL', 1, 1, '83d8199dc6f7b86f23bf0c2121ce453b', 'N', None, 'N', 561]
2025-09-13 22:43:56,294 - SourceAnalyzer - DEBUG - logger.py:64 - UPDATE 실행 완료: component_id = 561
2025-09-13 22:43:56,294 - SourceAnalyzer - DEBUG - logger.py:64 - 컴포넌트 저장 완료: getOrdersWithUsers (ID: 561)
2025-09-13 22:43:56,294 - SourceAnalyzer - DEBUG - logger.py:64 - 컴포넌트 저장 결과: component_id = 561
2025-09-13 22:43:56,294 - SourceAnalyzer - DEBUG - logger.py:64 - SQL Content 저장 시작: getOrdersWithUsers (component_id: 561)
2025-09-13 22:43:56,294 - SourceAnalyzer - DEBUG - logger.py:64 - SQL Content 상대경로: src/main/resources/mybatis/mapper
2025-09-13 22:43:56,294 - SourceAnalyzer - WARNING - logger.py:72 - SQL Content 저장 중 예외 발생 (무시하고 계속 진행): getOrdersWithUsers - 'sql_query'
2025-09-13 22:43:56,294 - SourceAnalyzer - DEBUG - logger.py:64 - SQL 쿼리 처리 완료: getOrdersWithUsers
2025-09-13 22:43:56,295 - SourceAnalyzer - DEBUG - logger.py:64 - SQL 쿼리 처리 루프 시작: 4/5
2025-09-13 22:43:56,295 - SourceAnalyzer - DEBUG - logger.py:64 - SQL 쿼리 처리 시작: getComplexJoin (select)
2025-09-13 22:43:56,295 - SourceAnalyzer - DEBUG - logger.py:64 - GET XML ID 조회: D:\Analyzer\CreateMetaDb\projects\sampleSrc\src\main\resources\mybatis\mapper\ImplicitJoinMapper.xml -> src/main/resources/mybatis/mapper/ImplicitJoinMapper.xml
2025-09-13 22:43:56,295 - SourceAnalyzer - DEBUG - logger.py:64 - 메모리 매핑 테이블 키들: ['src/com/example/dynamicquery/UserMapper.xml', 'src/main/resources/mybatis/mapper/ImplicitJoinMapper.xml', 'src/main/resources/mybatis/mapper/ImplicitJoinTestMapper.xml', 'src/main/resources/mybatis/mapper/MixedErrorMapper.xml', 'src/main/resources/mybatis/mapper/ProductMapper.xml', 'src/main/resources/mybatis/mapper/UserMapper.xml']
2025-09-13 22:43:56,295 - SourceAnalyzer - DEBUG - logger.py:64 - 메모리에서 file_id 조회 성공: src/main/resources/mybatis/mapper/ImplicitJoinMapper.xml -> 23
2025-09-13 22:43:56,295 - SourceAnalyzer - DEBUG - logger.py:64 - 파일 ID 조회 성공: 23
2025-09-13 22:43:56,295 - SourceAnalyzer - DEBUG - logger.py:64 - 컴포넌트 저장 시도: getComplexJoin (select) -> SQL_SELECT
2025-09-13 22:43:56,295 - SourceAnalyzer - DEBUG - logger.py:64 - Upsert 실행: components
2025-09-13 22:43:56,295 - SourceAnalyzer - DEBUG - logger.py:64 - 데이터: {'project_id': 1, 'component_type': 'SQL_SELECT', 'component_name': 'getComplexJoin', 'parent_id': None, 'layer': 'SQL', 'file_id': 23, 'line_start': 1, 'line_end': 1, 'hash_value': '8c496c80d3582accfdb96dee9212f1b9', 'has_error': 'N', 'error_message': None, 'del_yn': 'N'}
2025-09-13 22:43:56,295 - SourceAnalyzer - DEBUG - logger.py:64 - Components upsert 시작: getComplexJoin (SQL_SELECT)
2025-09-13 22:43:56,295 - SourceAnalyzer - DEBUG - logger.py:64 - 기존 레코드 확인 쿼리: 
                    SELECT component_id FROM components 
                    WHERE project_id = ? AND component_name = ? AND file_id = ?
                    
2025-09-13 22:43:56,295 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 파라미터: (1, 'getComplexJoin', 23)
2025-09-13 22:43:56,295 - SourceAnalyzer - DEBUG - logger.py:64 - 기존 레코드 조회 결과: <sqlite3.Row object at 0x00000257905C61D0>
2025-09-13 22:43:56,295 - SourceAnalyzer - DEBUG - logger.py:64 - UPDATE 쿼리: 
                        UPDATE components SET component_type = ?, parent_id = ?, layer = ?, line_start = ?, line_end = ?, hash_value = ?, has_error = ?, error_message = ?, del_yn = ?
                        WHERE component_id = ?
                        
2025-09-13 22:43:56,295 - SourceAnalyzer - DEBUG - logger.py:64 - UPDATE 파라미터: ['SQL_SELECT', None, 'SQL', 1, 1, '8c496c80d3582accfdb96dee9212f1b9', 'N', None, 'N', 562]
2025-09-13 22:43:56,295 - SourceAnalyzer - DEBUG - logger.py:64 - UPDATE 실행 완료: component_id = 562
2025-09-13 22:43:56,295 - SourceAnalyzer - DEBUG - logger.py:64 - 컴포넌트 저장 완료: getComplexJoin (ID: 562)
2025-09-13 22:43:56,295 - SourceAnalyzer - DEBUG - logger.py:64 - 컴포넌트 저장 결과: component_id = 562
2025-09-13 22:43:56,295 - SourceAnalyzer - DEBUG - logger.py:64 - SQL Content 저장 시작: getComplexJoin (component_id: 562)
2025-09-13 22:43:56,295 - SourceAnalyzer - DEBUG - logger.py:64 - SQL Content 상대경로: src/main/resources/mybatis/mapper
2025-09-13 22:43:56,295 - SourceAnalyzer - WARNING - logger.py:72 - SQL Content 저장 중 예외 발생 (무시하고 계속 진행): getComplexJoin - 'sql_query'
2025-09-13 22:43:56,295 - SourceAnalyzer - DEBUG - logger.py:64 - SQL 쿼리 처리 완료: getComplexJoin
2025-09-13 22:43:56,295 - SourceAnalyzer - DEBUG - logger.py:64 - SQL 쿼리 처리 루프 시작: 5/5
2025-09-13 22:43:56,295 - SourceAnalyzer - DEBUG - logger.py:64 - SQL 쿼리 처리 시작: getMixedJoin (select)
2025-09-13 22:43:56,295 - SourceAnalyzer - DEBUG - logger.py:64 - GET XML ID 조회: D:\Analyzer\CreateMetaDb\projects\sampleSrc\src\main\resources\mybatis\mapper\ImplicitJoinMapper.xml -> src/main/resources/mybatis/mapper/ImplicitJoinMapper.xml
2025-09-13 22:43:56,295 - SourceAnalyzer - DEBUG - logger.py:64 - 메모리 매핑 테이블 키들: ['src/com/example/dynamicquery/UserMapper.xml', 'src/main/resources/mybatis/mapper/ImplicitJoinMapper.xml', 'src/main/resources/mybatis/mapper/ImplicitJoinTestMapper.xml', 'src/main/resources/mybatis/mapper/MixedErrorMapper.xml', 'src/main/resources/mybatis/mapper/ProductMapper.xml', 'src/main/resources/mybatis/mapper/UserMapper.xml']
2025-09-13 22:43:56,295 - SourceAnalyzer - DEBUG - logger.py:64 - 메모리에서 file_id 조회 성공: src/main/resources/mybatis/mapper/ImplicitJoinMapper.xml -> 23
2025-09-13 22:43:56,295 - SourceAnalyzer - DEBUG - logger.py:64 - 파일 ID 조회 성공: 23
2025-09-13 22:43:56,295 - SourceAnalyzer - DEBUG - logger.py:64 - 컴포넌트 저장 시도: getMixedJoin (select) -> SQL_SELECT
2025-09-13 22:43:56,295 - SourceAnalyzer - DEBUG - logger.py:64 - Upsert 실행: components
2025-09-13 22:43:56,296 - SourceAnalyzer - DEBUG - logger.py:64 - 데이터: {'project_id': 1, 'component_type': 'SQL_SELECT', 'component_name': 'getMixedJoin', 'parent_id': None, 'layer': 'SQL', 'file_id': 23, 'line_start': 1, 'line_end': 1, 'hash_value': '41c259efd15fe6897cf293e8b10cfb72', 'has_error': 'N', 'error_message': None, 'del_yn': 'N'}
2025-09-13 22:43:56,296 - SourceAnalyzer - DEBUG - logger.py:64 - Components upsert 시작: getMixedJoin (SQL_SELECT)
2025-09-13 22:43:56,296 - SourceAnalyzer - DEBUG - logger.py:64 - 기존 레코드 확인 쿼리: 
                    SELECT component_id FROM components 
                    WHERE project_id = ? AND component_name = ? AND file_id = ?
                    
2025-09-13 22:43:56,296 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 파라미터: (1, 'getMixedJoin', 23)
2025-09-13 22:43:56,296 - SourceAnalyzer - DEBUG - logger.py:64 - 기존 레코드 조회 결과: <sqlite3.Row object at 0x00000257905C6170>
2025-09-13 22:43:56,296 - SourceAnalyzer - DEBUG - logger.py:64 - UPDATE 쿼리: 
                        UPDATE components SET component_type = ?, parent_id = ?, layer = ?, line_start = ?, line_end = ?, hash_value = ?, has_error = ?, error_message = ?, del_yn = ?
                        WHERE component_id = ?
                        
2025-09-13 22:43:56,296 - SourceAnalyzer - DEBUG - logger.py:64 - UPDATE 파라미터: ['SQL_SELECT', None, 'SQL', 1, 1, '41c259efd15fe6897cf293e8b10cfb72', 'N', None, 'N', 563]
2025-09-13 22:43:56,296 - SourceAnalyzer - DEBUG - logger.py:64 - UPDATE 실행 완료: component_id = 563
2025-09-13 22:43:56,296 - SourceAnalyzer - DEBUG - logger.py:64 - 컴포넌트 저장 완료: getMixedJoin (ID: 563)
2025-09-13 22:43:56,296 - SourceAnalyzer - DEBUG - logger.py:64 - 컴포넌트 저장 결과: component_id = 563
2025-09-13 22:43:56,296 - SourceAnalyzer - DEBUG - logger.py:64 - SQL Content 저장 시작: getMixedJoin (component_id: 563)
2025-09-13 22:43:56,296 - SourceAnalyzer - DEBUG - logger.py:64 - SQL Content 상대경로: src/main/resources/mybatis/mapper
2025-09-13 22:43:56,296 - SourceAnalyzer - WARNING - logger.py:72 - SQL Content 저장 중 예외 발생 (무시하고 계속 진행): getMixedJoin - 'sql_query'
2025-09-13 22:43:56,296 - SourceAnalyzer - DEBUG - logger.py:64 - SQL 쿼리 처리 완료: getMixedJoin
2025-09-13 22:43:56,296 - SourceAnalyzer - INFO - logger.py:68 - === SQL 쿼리 처리 완료 ===
2025-09-13 22:43:56,296 - SourceAnalyzer - INFO - logger.py:68 - 처리된 쿼리 수: 5
2025-09-13 22:43:56,296 - SourceAnalyzer - INFO - logger.py:68 - 건너뜀 쿼리 수: 0
2025-09-13 22:43:56,296 - SourceAnalyzer - INFO - logger.py:68 - 컴포넌트 ID 매핑 크기: 5
2025-09-13 22:43:56,296 - SourceAnalyzer - INFO - logger.py:68 - SQL 컴포넌트 저장 완료: 5개 (건너뜀: 0개)
2025-09-13 22:43:56,296 - SourceAnalyzer - INFO - logger.py:68 - process_sql_queries 호출 후: result=True
2025-09-13 22:43:56,296 - SourceAnalyzer - INFO - logger.py:68 - SQL Content Processor 처리 결과: True
2025-09-13 22:43:56,296 - SourceAnalyzer - INFO - logger.py:68 - === XML 로딩 엔진: SQL 컴포넌트 저장 완료 ===
2025-09-13 22:43:56,296 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 실행 성공: 
                SELECT c.component_id 
          ...
2025-09-13 22:43:56,296 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 실행 성공: 
                SELECT c.component_id 
          ...
2025-09-13 22:43:56,296 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 실행 성공: 
                SELECT c.component_id 
          ...
2025-09-13 22:43:56,297 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 실행 성공: 
                SELECT c.component_id 
          ...
2025-09-13 22:43:56,297 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 실행 성공: 
                SELECT c.component_id 
          ...
2025-09-13 22:43:56,297 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 실행 성공: 
                SELECT c.component_id 
          ...
2025-09-13 22:43:56,297 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 실행 성공: 
                SELECT c.component_id 
          ...
2025-09-13 22:43:56,297 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 실행 성공: 
                SELECT c.component_id 
          ...
2025-09-13 22:43:56,297 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 실행 성공: 
                SELECT c.component_id 
          ...
2025-09-13 22:43:56,297 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 실행 성공: 
                SELECT c.component_id 
          ...
2025-09-13 22:43:56,297 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 실행 성공: 
                SELECT c.component_id 
          ...
2025-09-13 22:43:56,297 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 실행 성공: 
                SELECT c.component_id 
          ...
2025-09-13 22:43:56,297 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 실행 성공: 
                SELECT c.component_id 
          ...
2025-09-13 22:43:56,297 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 실행 성공: 
                SELECT c.component_id 
          ...
2025-09-13 22:43:56,297 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 실행 성공: 
                SELECT c.component_id 
          ...
2025-09-13 22:43:56,297 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 실행 성공: 
                SELECT c.component_id 
          ...
2025-09-13 22:43:56,297 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 실행 성공: 
                SELECT c.component_id 
          ...
2025-09-13 22:43:56,297 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 실행 성공: 
                SELECT c.component_id 
          ...
2025-09-13 22:43:56,297 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 실행 성공: 
                SELECT c.component_id 
          ...
2025-09-13 22:43:56,297 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 실행 성공: 
                SELECT c.component_id 
          ...
2025-09-13 22:43:56,298 - SourceAnalyzer - DEBUG - logger.py:64 - 배치 쿼리 실행 성공: 
            INSERT OR IGNORE INTO relationships (..., 처리된 행: 10
2025-09-13 22:43:56,298 - SourceAnalyzer - INFO - logger.py:68 - JOIN 관계 저장 완료: 10개
2025-09-13 22:43:56,298 - SourceAnalyzer - INFO - logger.py:68 - DOM 기반 파싱 시도: D:\Analyzer\CreateMetaDb\projects\sampleSrc\src\main\resources\mybatis\mapper\ImplicitJoinTestMapper.xml
2025-09-13 22:43:56,298 - SourceAnalyzer - WARNING - logger.py:72 - DOM 파싱 중 예외 발생: not well-formed (invalid token): line 190, column 37 - D:\Analyzer\CreateMetaDb\projects\sampleSrc\src\main\resources\mybatis\mapper\ImplicitJoinTestMapper.xml
2025-09-13 22:43:56,298 - SourceAnalyzer - WARNING - logger.py:72 - DOM 기반 파싱 실패 또는 결과 없음, 기존 파서로 Fallback: D:\Analyzer\CreateMetaDb\projects\sampleSrc\src\main\resources\mybatis\mapper\ImplicitJoinTestMapper.xml
2025-09-13 22:43:56,298 - SourceAnalyzer - WARNING - logger.py:72 - DOM 파싱 오류 메시지: DOM 파싱 중 예외 발생: not well-formed (invalid token): line 190, column 37
2025-09-13 22:43:56,298 - SourceAnalyzer - INFO - logger.py:68 - 기존 정규식 기반 파서로 Fallback: D:\Analyzer\CreateMetaDb\projects\sampleSrc\src\main\resources\mybatis\mapper\ImplicitJoinTestMapper.xml
2025-09-13 22:43:56,299 - SourceAnalyzer - WARNING - logger.py:72 - XML 파싱 오류: D:\Analyzer\CreateMetaDb\projects\sampleSrc\src\main\resources\mybatis\mapper\ImplicitJoinTestMapper.xml - not well-formed (invalid token): line 190, column 37
2025-09-13 22:43:56,299 - SourceAnalyzer - WARNING - logger.py:72 - XML 파싱 에러로 건너뜀: D:\Analyzer\CreateMetaDb\projects\sampleSrc\src\main\resources\mybatis\mapper\ImplicitJoinTestMapper.xml - XML 파싱 오류: not well-formed (invalid token): line 190, column 37
2025-09-13 22:43:56,299 - SourceAnalyzer - INFO - logger.py:68 - DOM 기반 파싱 시도: D:\Analyzer\CreateMetaDb\projects\sampleSrc\src\main\resources\mybatis\mapper\MixedErrorMapper.xml
2025-09-13 22:43:56,299 - SourceAnalyzer - WARNING - logger.py:72 - DOM 파싱 실패, Fallback 실행: D:\Analyzer\CreateMetaDb\projects\sampleSrc\src\main\resources\mybatis\mapper\MixedErrorMapper.xml - XmlParser._parse_with_dom() takes 2 positional arguments but 3 were given
2025-09-13 22:43:56,299 - SourceAnalyzer - WARNING - logger.py:72 - 데이터베이스 접근 실패: 'PathUtils' object has no attribute 'get_metadata_db_path'
2025-09-13 22:43:56,299 - SourceAnalyzer - WARNING - logger.py:72 - DOM 파싱 실패, Fallback 실행: D:\Analyzer\CreateMetaDb\projects\sampleSrc\src\main\resources\mybatis\mapper\MixedErrorMapper.xml - XmlParser._parse_with_dom() takes 2 positional arguments but 3 were given
2025-09-13 22:43:56,299 - SourceAnalyzer - WARNING - logger.py:72 - 데이터베이스 접근 실패: 'PathUtils' object has no attribute 'get_metadata_db_path'
2025-09-13 22:43:56,299 - SourceAnalyzer - WARNING - logger.py:72 - DOM 파싱 실패, Fallback 실행: D:\Analyzer\CreateMetaDb\projects\sampleSrc\src\main\resources\mybatis\mapper\MixedErrorMapper.xml - XmlParser._parse_with_dom() takes 2 positional arguments but 3 were given
2025-09-13 22:43:56,299 - SourceAnalyzer - WARNING - logger.py:72 - 데이터베이스 접근 실패: 'PathUtils' object has no attribute 'get_metadata_db_path'
2025-09-13 22:43:56,300 - SourceAnalyzer - WARNING - logger.py:72 - DOM 파싱 실패, Fallback 실행: D:\Analyzer\CreateMetaDb\projects\sampleSrc\src\main\resources\mybatis\mapper\MixedErrorMapper.xml - XmlParser._parse_with_dom() takes 2 positional arguments but 3 were given
2025-09-13 22:43:56,300 - SourceAnalyzer - WARNING - logger.py:72 - 데이터베이스 접근 실패: 'PathUtils' object has no attribute 'get_metadata_db_path'
2025-09-13 22:43:56,300 - SourceAnalyzer - WARNING - logger.py:72 - DOM 파싱 실패, Fallback 실행: D:\Analyzer\CreateMetaDb\projects\sampleSrc\src\main\resources\mybatis\mapper\MixedErrorMapper.xml - XmlParser._parse_with_dom() takes 2 positional arguments but 3 were given
2025-09-13 22:43:56,300 - SourceAnalyzer - WARNING - logger.py:72 - 데이터베이스 접근 실패: 'PathUtils' object has no attribute 'get_metadata_db_path'
2025-09-13 22:43:56,300 - SourceAnalyzer - WARNING - logger.py:72 - DOM 파싱 실패, Fallback 실행: D:\Analyzer\CreateMetaDb\projects\sampleSrc\src\main\resources\mybatis\mapper\MixedErrorMapper.xml - XmlParser._parse_with_dom() takes 2 positional arguments but 3 were given
2025-09-13 22:43:56,300 - SourceAnalyzer - WARNING - logger.py:72 - 데이터베이스 접근 실패: 'PathUtils' object has no attribute 'get_metadata_db_path'
2025-09-13 22:43:56,300 - SourceAnalyzer - WARNING - logger.py:72 - 데이터베이스 접근 실패: 'PathUtils' object has no attribute 'get_metadata_db_path'
2025-09-13 22:43:56,300 - SourceAnalyzer - WARNING - logger.py:72 - 데이터베이스 접근 실패: 'PathUtils' object has no attribute 'get_metadata_db_path'
2025-09-13 22:43:56,300 - SourceAnalyzer - WARNING - logger.py:72 - 데이터베이스 접근 실패: 'PathUtils' object has no attribute 'get_metadata_db_path'
2025-09-13 22:43:56,300 - SourceAnalyzer - WARNING - logger.py:72 - 데이터베이스 접근 실패: 'PathUtils' object has no attribute 'get_metadata_db_path'
2025-09-13 22:43:56,301 - SourceAnalyzer - WARNING - logger.py:72 - 데이터베이스 접근 실패: 'PathUtils' object has no attribute 'get_metadata_db_path'
2025-09-13 22:43:56,301 - SourceAnalyzer - WARNING - logger.py:72 - 데이터베이스 접근 실패: 'PathUtils' object has no attribute 'get_metadata_db_path'
2025-09-13 22:43:56,301 - SourceAnalyzer - WARNING - logger.py:72 - 데이터베이스 접근 실패: 'PathUtils' object has no attribute 'get_metadata_db_path'
2025-09-13 22:43:56,301 - SourceAnalyzer - WARNING - logger.py:72 - 데이터베이스 접근 실패: 'PathUtils' object has no attribute 'get_metadata_db_path'
2025-09-13 22:43:56,301 - SourceAnalyzer - WARNING - logger.py:72 - 데이터베이스 접근 실패: 'PathUtils' object has no attribute 'get_metadata_db_path'
2025-09-13 22:43:56,301 - SourceAnalyzer - WARNING - logger.py:72 - 데이터베이스 접근 실패: 'PathUtils' object has no attribute 'get_metadata_db_path'
2025-09-13 22:43:56,301 - SourceAnalyzer - WARNING - logger.py:72 - 데이터베이스 접근 실패: 'PathUtils' object has no attribute 'get_metadata_db_path'
2025-09-13 22:43:56,301 - SourceAnalyzer - WARNING - logger.py:72 - 데이터베이스 접근 실패: 'PathUtils' object has no attribute 'get_metadata_db_path'
2025-09-13 22:43:56,301 - SourceAnalyzer - WARNING - logger.py:72 - DOM 파싱 실패, Fallback 실행: D:\Analyzer\CreateMetaDb\projects\sampleSrc\src\main\resources\mybatis\mapper\MixedErrorMapper.xml - XmlParser._parse_with_dom() takes 2 positional arguments but 3 were given
2025-09-13 22:43:56,301 - SourceAnalyzer - WARNING - logger.py:72 - 데이터베이스 접근 실패: 'PathUtils' object has no attribute 'get_metadata_db_path'
2025-09-13 22:43:56,301 - SourceAnalyzer - WARNING - logger.py:72 - DOM 파싱 실패, Fallback 실행: D:\Analyzer\CreateMetaDb\projects\sampleSrc\src\main\resources\mybatis\mapper\MixedErrorMapper.xml - XmlParser._parse_with_dom() takes 2 positional arguments but 3 were given
2025-09-13 22:43:56,301 - SourceAnalyzer - WARNING - logger.py:72 - 데이터베이스 접근 실패: 'PathUtils' object has no attribute 'get_metadata_db_path'
2025-09-13 22:43:56,301 - SourceAnalyzer - WARNING - logger.py:72 - DOM 파싱 실패, Fallback 실행: D:\Analyzer\CreateMetaDb\projects\sampleSrc\src\main\resources\mybatis\mapper\MixedErrorMapper.xml - XmlParser._parse_with_dom() takes 2 positional arguments but 3 were given
2025-09-13 22:43:56,301 - SourceAnalyzer - WARNING - logger.py:72 - 데이터베이스 접근 실패: 'PathUtils' object has no attribute 'get_metadata_db_path'
2025-09-13 22:43:56,302 - SourceAnalyzer - WARNING - logger.py:72 - 데이터베이스 접근 실패: 'PathUtils' object has no attribute 'get_metadata_db_path'
2025-09-13 22:43:56,302 - SourceAnalyzer - WARNING - logger.py:72 - 데이터베이스 접근 실패: 'PathUtils' object has no attribute 'get_metadata_db_path'
2025-09-13 22:43:56,302 - SourceAnalyzer - WARNING - logger.py:72 - 데이터베이스 접근 실패: 'PathUtils' object has no attribute 'get_metadata_db_path'
2025-09-13 22:43:56,302 - SourceAnalyzer - WARNING - logger.py:72 - 데이터베이스 접근 실패: 'PathUtils' object has no attribute 'get_metadata_db_path'
2025-09-13 22:43:56,302 - SourceAnalyzer - WARNING - logger.py:72 - DOM 파싱 실패, Fallback 실행: D:\Analyzer\CreateMetaDb\projects\sampleSrc\src\main\resources\mybatis\mapper\MixedErrorMapper.xml - XmlParser._parse_with_dom() takes 2 positional arguments but 3 were given
2025-09-13 22:43:56,302 - SourceAnalyzer - WARNING - logger.py:72 - 데이터베이스 접근 실패: 'PathUtils' object has no attribute 'get_metadata_db_path'
2025-09-13 22:43:56,302 - SourceAnalyzer - WARNING - logger.py:72 - DOM 파싱 실패, Fallback 실행: D:\Analyzer\CreateMetaDb\projects\sampleSrc\src\main\resources\mybatis\mapper\MixedErrorMapper.xml - XmlParser._parse_with_dom() takes 2 positional arguments but 3 were given
2025-09-13 22:43:56,302 - SourceAnalyzer - WARNING - logger.py:72 - 데이터베이스 접근 실패: 'PathUtils' object has no attribute 'get_metadata_db_path'
2025-09-13 22:43:56,302 - SourceAnalyzer - WARNING - logger.py:72 - DOM 파싱 실패, Fallback 실행: D:\Analyzer\CreateMetaDb\projects\sampleSrc\src\main\resources\mybatis\mapper\MixedErrorMapper.xml - XmlParser._parse_with_dom() takes 2 positional arguments but 3 were given
2025-09-13 22:43:56,302 - SourceAnalyzer - WARNING - logger.py:72 - 데이터베이스 접근 실패: 'PathUtils' object has no attribute 'get_metadata_db_path'
2025-09-13 22:43:56,302 - SourceAnalyzer - INFO - logger.py:68 - DOM 기반 파싱 성공: D:\Analyzer\CreateMetaDb\projects\sampleSrc\src\main\resources\mybatis\mapper\MixedErrorMapper.xml
2025-09-13 22:43:56,302 - SourceAnalyzer - INFO - logger.py:68 - === XML 로딩 엔진: SQL 컴포넌트 저장 시작 ===
2025-09-13 22:43:56,302 - SourceAnalyzer - INFO - logger.py:68 - 전달받은 SQL 쿼리 수: 12개
2025-09-13 22:43:56,303 - SourceAnalyzer - INFO - logger.py:68 - XML에서 추출된 SQL 쿼리 타입별 통계: {'select': 9, 'insert': 1, 'update': 1, 'delete': 1}
2025-09-13 22:43:56,303 - SourceAnalyzer - INFO - logger.py:68 - 프로젝트 ID: 1
2025-09-13 22:43:56,303 - SourceAnalyzer - INFO - logger.py:68 - SQL Content Processor를 사용하여 처리 시작
2025-09-13 22:43:56,303 - SourceAnalyzer - INFO - logger.py:68 - process_sql_queries 호출 전: sql_queries=12, project_id=1
2025-09-13 22:43:56,303 - SourceAnalyzer - INFO - logger.py:68 - === SQL 쿼리 처리 시작 ===
2025-09-13 22:43:56,303 - SourceAnalyzer - INFO - logger.py:68 - 전달받은 SQL 쿼리 수: 12
2025-09-13 22:43:56,303 - SourceAnalyzer - INFO - logger.py:68 - 프로젝트 ID: 1
2025-09-13 22:43:56,303 - SourceAnalyzer - DEBUG - logger.py:64 - SQL 쿼리 리스트 검증 시작
2025-09-13 22:43:56,303 - SourceAnalyzer - DEBUG - logger.py:64 - SQL 쿼리 리스트 타입: <class 'list'>
2025-09-13 22:43:56,303 - SourceAnalyzer - DEBUG - logger.py:64 - SQL 쿼리 리스트 길이: 12
2025-09-13 22:43:56,303 - SourceAnalyzer - DEBUG - logger.py:64 - 첫 번째 쿼리: {'tag_name': 'select', 'query_id': 'selectAll', 'query_type': 'select', 'sql_content': '\n        SELECT id, name, email, create_date, update_date\n        FROM users\n        ORDER BY create_date DESC\n    ', 'file_path': 'D:\\Analyzer\\CreateMetaDb\\projects\\sampleSrc\\src\\main\\resources\\mybatis\\mapper\\MixedErrorMapper.xml', 'line_start': 1, 'line_end': 1, 'hash_value': '387694090ebf707cca1e61066e9fe091'}
2025-09-13 22:43:56,303 - SourceAnalyzer - DEBUG - logger.py:64 - SQL 쿼리 리스트 검증 완료
2025-09-13 22:43:56,303 - SourceAnalyzer - DEBUG - logger.py:64 - SQL 쿼리 타입별 통계 시작
2025-09-13 22:43:56,303 - SourceAnalyzer - INFO - logger.py:68 - SQL 쿼리 타입별 통계: {'select': 9, 'insert': 1, 'update': 1, 'delete': 1}
2025-09-13 22:43:56,303 - SourceAnalyzer - DEBUG - logger.py:64 - SQL 쿼리 타입별 통계 완료
2025-09-13 22:43:56,303 - SourceAnalyzer - DEBUG - logger.py:64 - SQL 쿼리 리스트 크기: 12
2025-09-13 22:43:56,303 - SourceAnalyzer - DEBUG - logger.py:64 - SQL 쿼리 리스트 타입: <class 'list'>
2025-09-13 22:43:56,303 - SourceAnalyzer - DEBUG - logger.py:64 - 첫 번째 쿼리 정보: {'tag_name': 'select', 'query_id': 'selectAll', 'query_type': 'select', 'sql_content': '\n        SELECT id, name, email, create_date, update_date\n        FROM users\n        ORDER BY create_date DESC\n    ', 'file_path': 'D:\\Analyzer\\CreateMetaDb\\projects\\sampleSrc\\src\\main\\resources\\mybatis\\mapper\\MixedErrorMapper.xml', 'line_start': 1, 'line_end': 1, 'hash_value': '387694090ebf707cca1e61066e9fe091'}
2025-09-13 22:43:56,303 - SourceAnalyzer - DEBUG - logger.py:64 - 모든 쿼리 정보: [{'tag_name': 'select', 'query_id': 'selectAll', 'query_type': 'select', 'sql_content': '\n        SELECT id, name, email, create_date, update_date\n        FROM users\n        ORDER BY create_date DESC\n    ', 'file_path': 'D:\\Analyzer\\CreateMetaDb\\projects\\sampleSrc\\src\\main\\resources\\mybatis\\mapper\\MixedErrorMapper.xml', 'line_start': 1, 'line_end': 1, 'hash_value': '387694090ebf707cca1e61066e9fe091'}, {'tag_name': 'select', 'query_id': 'selectById', 'query_type': 'select', 'sql_content': '\n        SELECT id, name, email, create_date, update_date\n        FROM users\n        WHERE id = #{id}\n    ', 'file_path': 'D:\\Analyzer\\CreateMetaDb\\projects\\sampleSrc\\src\\main\\resources\\mybatis\\mapper\\MixedErrorMapper.xml', 'line_start': 1, 'line_end': 1, 'hash_value': '519e309e09c2b8a5955d9821c50db76d'}, {'tag_name': 'select', 'query_id': 'selectByName', 'query_type': 'select', 'sql_content': "\n        SELECT id, name, email, create_date, update_date\n        FROM users\n        WHERE name LIKE #{name}\n        \n         \n            AND status = #{status}\n         \n        \n        AND active_flag = 'Y'  \n        ORDER BY name\n    ", 'file_path': 'D:\\Analyzer\\CreateMetaDb\\projects\\sampleSrc\\src\\main\\resources\\mybatis\\mapper\\MixedErrorMapper.xml', 'line_start': 1, 'line_end': 1, 'hash_value': 'e3fbb7ff3b612cb369a4822192157e4e'}, {'tag_name': 'select', 'query_id': 'searchUsers', 'query_type': 'select', 'sql_content': "\n        SELECT id, name, email, create_date, update_date\n        FROM users\n         \n            \n             \n                AND name LIKE CONCAT('%', #{name}, '%')\n             \n             \n                AND email LIKE CONCAT('%', #{email}, '%')\n             \n            \n             \n                AND dept_name = #{department}  \n             \n         \n        ORDER BY create_date DESC\n    ", 'file_path': 'D:\\Analyzer\\CreateMetaDb\\projects\\sampleSrc\\src\\main\\resources\\mybatis\\mapper\\MixedErrorMapper.xml', 'line_start': 1, 'line_end': 1, 'hash_value': 'da9815873a428c544d0428458928dc49'}, {'tag_name': 'select', 'query_id': 'countUsers', 'query_type': 'select', 'sql_content': '\n        SELECT COUNT(*) FROM users\n    ', 'file_path': 'D:\\Analyzer\\CreateMetaDb\\projects\\sampleSrc\\src\\main\\resources\\mybatis\\mapper\\MixedErrorMapper.xml', 'line_start': 1, 'line_end': 1, 'hash_value': 'e0f88e42edbeb9240cd7a3820cf11897'}, {'tag_name': 'select', 'query_id': 'getUserWithDetails', 'query_type': 'select', 'sql_content': '\n        SELECT u.id, u.name, u.email, u.create_date, u.update_date\n        FROM users u\n        \n        LEFT JOIN user_roles ur ON u.id = ur.user_id\n        LEFT JOIN roles r ON ur.role_id = r.id\n        \n        LEFT JOIN user_preferences up ON u.id = up.user_id  \n        WHERE u.id = #{id}\n        GROUP BY u.id, u.name, u.email, u.create_date, u.update_date\n    ', 'file_path': 'D:\\Analyzer\\CreateMetaDb\\projects\\sampleSrc\\src\\main\\resources\\mybatis\\mapper\\MixedErrorMapper.xml', 'line_start': 1, 'line_end': 1, 'hash_value': '5ac9c35a3ebdf3c14276b4ba35a00c40'}, {'tag_name': 'select', 'query_id': 'selectFromNonExistentTable', 'query_type': 'select', 'sql_content': '\n        SELECT id, name, email\n        FROM NONEXISTENT_TABLE  \n        WHERE id = #{id}\n    ', 'file_path': 'D:\\Analyzer\\CreateMetaDb\\projects\\sampleSrc\\src\\main\\resources\\mybatis\\mapper\\MixedErrorMapper.xml', 'line_start': 1, 'line_end': 1, 'hash_value': 'd3f57779102f203a42f221c8f14f566c'}, {'tag_name': 'select', 'query_id': 'selectWithNonExistentColumn', 'query_type': 'select', 'sql_content': '\n        SELECT id, name, email, NONEXISTENT_COLUMN  \n        FROM users\n        WHERE id = #{id}\n    ', 'file_path': 'D:\\Analyzer\\CreateMetaDb\\projects\\sampleSrc\\src\\main\\resources\\mybatis\\mapper\\MixedErrorMapper.xml', 'line_start': 1, 'line_end': 1, 'hash_value': 'ac789996d2003c43b343c09ae6d1514e'}, {'tag_name': 'select', 'query_id': 'selectComplexError', 'query_type': 'select', 'sql_content': '\n        SELECT u.id, u.name, u.email, nt.nonexistent_field\n        FROM users u\n        LEFT JOIN NONEXISTENT_TABLE nt ON u.id = nt.user_id  \n        WHERE u.NONEXISTENT_COLUMN = #{value}  \n    ', 'file_path': 'D:\\Analyzer\\CreateMetaDb\\projects\\sampleSrc\\src\\main\\resources\\mybatis\\mapper\\MixedErrorMapper.xml', 'line_start': 1, 'line_end': 1, 'hash_value': '6447b878a1323abb526cc6e8c0669eff'}, {'tag_name': 'insert', 'query_id': 'insert', 'query_type': 'insert', 'sql_content': '\n        INSERT INTO users (name, email, create_date)\n        VALUES (#{name}, #{email}, #{createDate})\n    ', 'file_path': 'D:\\Analyzer\\CreateMetaDb\\projects\\sampleSrc\\src\\main\\resources\\mybatis\\mapper\\MixedErrorMapper.xml', 'line_start': 1, 'line_end': 1, 'hash_value': 'a46290046e97792ea0e4e2c34a679a49'}, {'tag_name': 'update', 'query_id': 'update', 'query_type': 'update', 'sql_content': '\n        UPDATE users\n        SET name = #{name},\n            email = #{email},\n            update_date = #{updateDate}\n        WHERE id = #{id}\n        \n         \n            AND status = #{status}\n         \n        \n        AND EXISTS (SELECT 1 FROM user_profiles WHERE user_id = users.id)  \n    ', 'file_path': 'D:\\Analyzer\\CreateMetaDb\\projects\\sampleSrc\\src\\main\\resources\\mybatis\\mapper\\MixedErrorMapper.xml', 'line_start': 1, 'line_end': 1, 'hash_value': 'c5e5b3e9148b8407d1c992ef777d9039'}, {'tag_name': 'delete', 'query_id': 'delete', 'query_type': 'delete', 'sql_content': '\n        DELETE FROM users WHERE id = #{id}\n    ', 'file_path': 'D:\\Analyzer\\CreateMetaDb\\projects\\sampleSrc\\src\\main\\resources\\mybatis\\mapper\\MixedErrorMapper.xml', 'line_start': 1, 'line_end': 1, 'hash_value': '56e00ee3951ef38bb7e951ff6fa0dfae'}]
2025-09-13 22:43:56,303 - SourceAnalyzer - DEBUG - logger.py:64 - SQL 쿼리 처리 루프 시작 전
2025-09-13 22:43:56,303 - SourceAnalyzer - DEBUG - logger.py:64 - SQL 쿼리 처리 루프 시작: 1/12
2025-09-13 22:43:56,303 - SourceAnalyzer - DEBUG - logger.py:64 - SQL 쿼리 처리 시작: selectAll (select)
2025-09-13 22:43:56,303 - SourceAnalyzer - DEBUG - logger.py:64 - GET XML ID 조회: D:\Analyzer\CreateMetaDb\projects\sampleSrc\src\main\resources\mybatis\mapper\MixedErrorMapper.xml -> src/main/resources/mybatis/mapper/MixedErrorMapper.xml
2025-09-13 22:43:56,303 - SourceAnalyzer - DEBUG - logger.py:64 - 메모리 매핑 테이블 키들: ['src/com/example/dynamicquery/UserMapper.xml', 'src/main/resources/mybatis/mapper/ImplicitJoinMapper.xml', 'src/main/resources/mybatis/mapper/ImplicitJoinTestMapper.xml', 'src/main/resources/mybatis/mapper/MixedErrorMapper.xml', 'src/main/resources/mybatis/mapper/ProductMapper.xml', 'src/main/resources/mybatis/mapper/UserMapper.xml']
2025-09-13 22:43:56,303 - SourceAnalyzer - DEBUG - logger.py:64 - 메모리에서 file_id 조회 성공: src/main/resources/mybatis/mapper/MixedErrorMapper.xml -> 25
2025-09-13 22:43:56,303 - SourceAnalyzer - DEBUG - logger.py:64 - 파일 ID 조회 성공: 25
2025-09-13 22:43:56,303 - SourceAnalyzer - DEBUG - logger.py:64 - 컴포넌트 저장 시도: selectAll (select) -> SQL_SELECT
2025-09-13 22:43:56,304 - SourceAnalyzer - DEBUG - logger.py:64 - Upsert 실행: components
2025-09-13 22:43:56,304 - SourceAnalyzer - DEBUG - logger.py:64 - 데이터: {'project_id': 1, 'component_type': 'SQL_SELECT', 'component_name': 'selectAll', 'parent_id': None, 'layer': 'SQL', 'file_id': 25, 'line_start': 1, 'line_end': 1, 'hash_value': '387694090ebf707cca1e61066e9fe091', 'has_error': 'N', 'error_message': None, 'del_yn': 'N'}
2025-09-13 22:43:56,304 - SourceAnalyzer - DEBUG - logger.py:64 - Components upsert 시작: selectAll (SQL_SELECT)
2025-09-13 22:43:56,304 - SourceAnalyzer - DEBUG - logger.py:64 - 기존 레코드 확인 쿼리: 
                    SELECT component_id FROM components 
                    WHERE project_id = ? AND component_name = ? AND file_id = ?
                    
2025-09-13 22:43:56,304 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 파라미터: (1, 'selectAll', 25)
2025-09-13 22:43:56,304 - SourceAnalyzer - DEBUG - logger.py:64 - 기존 레코드 조회 결과: <sqlite3.Row object at 0x00000257905C5F90>
2025-09-13 22:43:56,304 - SourceAnalyzer - DEBUG - logger.py:64 - UPDATE 쿼리: 
                        UPDATE components SET component_type = ?, parent_id = ?, layer = ?, line_start = ?, line_end = ?, hash_value = ?, has_error = ?, error_message = ?, del_yn = ?
                        WHERE component_id = ?
                        
2025-09-13 22:43:56,304 - SourceAnalyzer - DEBUG - logger.py:64 - UPDATE 파라미터: ['SQL_SELECT', None, 'SQL', 1, 1, '387694090ebf707cca1e61066e9fe091', 'N', None, 'N', 568]
2025-09-13 22:43:56,304 - SourceAnalyzer - DEBUG - logger.py:64 - UPDATE 실행 완료: component_id = 568
2025-09-13 22:43:56,304 - SourceAnalyzer - DEBUG - logger.py:64 - 컴포넌트 저장 완료: selectAll (ID: 568)
2025-09-13 22:43:56,304 - SourceAnalyzer - DEBUG - logger.py:64 - 컴포넌트 저장 결과: component_id = 568
2025-09-13 22:43:56,304 - SourceAnalyzer - DEBUG - logger.py:64 - SQL Content 저장 시작: selectAll (component_id: 568)
2025-09-13 22:43:56,304 - SourceAnalyzer - DEBUG - logger.py:64 - SQL Content 상대경로: src/main/resources/mybatis/mapper
2025-09-13 22:43:56,304 - SourceAnalyzer - WARNING - logger.py:72 - SQL Content 저장 중 예외 발생 (무시하고 계속 진행): selectAll - 'sql_query'
2025-09-13 22:43:56,304 - SourceAnalyzer - DEBUG - logger.py:64 - SQL 쿼리 처리 완료: selectAll
2025-09-13 22:43:56,304 - SourceAnalyzer - DEBUG - logger.py:64 - SQL 쿼리 처리 루프 시작: 2/12
2025-09-13 22:43:56,304 - SourceAnalyzer - DEBUG - logger.py:64 - SQL 쿼리 처리 시작: selectById (select)
2025-09-13 22:43:56,304 - SourceAnalyzer - DEBUG - logger.py:64 - GET XML ID 조회: D:\Analyzer\CreateMetaDb\projects\sampleSrc\src\main\resources\mybatis\mapper\MixedErrorMapper.xml -> src/main/resources/mybatis/mapper/MixedErrorMapper.xml
2025-09-13 22:43:56,304 - SourceAnalyzer - DEBUG - logger.py:64 - 메모리 매핑 테이블 키들: ['src/com/example/dynamicquery/UserMapper.xml', 'src/main/resources/mybatis/mapper/ImplicitJoinMapper.xml', 'src/main/resources/mybatis/mapper/ImplicitJoinTestMapper.xml', 'src/main/resources/mybatis/mapper/MixedErrorMapper.xml', 'src/main/resources/mybatis/mapper/ProductMapper.xml', 'src/main/resources/mybatis/mapper/UserMapper.xml']
2025-09-13 22:43:56,304 - SourceAnalyzer - DEBUG - logger.py:64 - 메모리에서 file_id 조회 성공: src/main/resources/mybatis/mapper/MixedErrorMapper.xml -> 25
2025-09-13 22:43:56,304 - SourceAnalyzer - DEBUG - logger.py:64 - 파일 ID 조회 성공: 25
2025-09-13 22:43:56,304 - SourceAnalyzer - DEBUG - logger.py:64 - 컴포넌트 저장 시도: selectById (select) -> SQL_SELECT
2025-09-13 22:43:56,304 - SourceAnalyzer - DEBUG - logger.py:64 - Upsert 실행: components
2025-09-13 22:43:56,304 - SourceAnalyzer - DEBUG - logger.py:64 - 데이터: {'project_id': 1, 'component_type': 'SQL_SELECT', 'component_name': 'selectById', 'parent_id': None, 'layer': 'SQL', 'file_id': 25, 'line_start': 1, 'line_end': 1, 'hash_value': '519e309e09c2b8a5955d9821c50db76d', 'has_error': 'N', 'error_message': None, 'del_yn': 'N'}
2025-09-13 22:43:56,304 - SourceAnalyzer - DEBUG - logger.py:64 - Components upsert 시작: selectById (SQL_SELECT)
2025-09-13 22:43:56,304 - SourceAnalyzer - DEBUG - logger.py:64 - 기존 레코드 확인 쿼리: 
                    SELECT component_id FROM components 
                    WHERE project_id = ? AND component_name = ? AND file_id = ?
                    
2025-09-13 22:43:56,304 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 파라미터: (1, 'selectById', 25)
2025-09-13 22:43:56,305 - SourceAnalyzer - DEBUG - logger.py:64 - 기존 레코드 조회 결과: <sqlite3.Row object at 0x00000257905C5F90>
2025-09-13 22:43:56,305 - SourceAnalyzer - DEBUG - logger.py:64 - UPDATE 쿼리: 
                        UPDATE components SET component_type = ?, parent_id = ?, layer = ?, line_start = ?, line_end = ?, hash_value = ?, has_error = ?, error_message = ?, del_yn = ?
                        WHERE component_id = ?
                        
2025-09-13 22:43:56,305 - SourceAnalyzer - DEBUG - logger.py:64 - UPDATE 파라미터: ['SQL_SELECT', None, 'SQL', 1, 1, '519e309e09c2b8a5955d9821c50db76d', 'N', None, 'N', 569]
2025-09-13 22:43:56,305 - SourceAnalyzer - DEBUG - logger.py:64 - UPDATE 실행 완료: component_id = 569
2025-09-13 22:43:56,305 - SourceAnalyzer - DEBUG - logger.py:64 - 컴포넌트 저장 완료: selectById (ID: 569)
2025-09-13 22:43:56,305 - SourceAnalyzer - DEBUG - logger.py:64 - 컴포넌트 저장 결과: component_id = 569
2025-09-13 22:43:56,305 - SourceAnalyzer - DEBUG - logger.py:64 - SQL Content 저장 시작: selectById (component_id: 569)
2025-09-13 22:43:56,305 - SourceAnalyzer - DEBUG - logger.py:64 - SQL Content 상대경로: src/main/resources/mybatis/mapper
2025-09-13 22:43:56,305 - SourceAnalyzer - WARNING - logger.py:72 - SQL Content 저장 중 예외 발생 (무시하고 계속 진행): selectById - 'sql_query'
2025-09-13 22:43:56,305 - SourceAnalyzer - DEBUG - logger.py:64 - SQL 쿼리 처리 완료: selectById
2025-09-13 22:43:56,305 - SourceAnalyzer - DEBUG - logger.py:64 - SQL 쿼리 처리 루프 시작: 3/12
2025-09-13 22:43:56,305 - SourceAnalyzer - DEBUG - logger.py:64 - SQL 쿼리 처리 시작: selectByName (select)
2025-09-13 22:43:56,305 - SourceAnalyzer - DEBUG - logger.py:64 - GET XML ID 조회: D:\Analyzer\CreateMetaDb\projects\sampleSrc\src\main\resources\mybatis\mapper\MixedErrorMapper.xml -> src/main/resources/mybatis/mapper/MixedErrorMapper.xml
2025-09-13 22:43:56,305 - SourceAnalyzer - DEBUG - logger.py:64 - 메모리 매핑 테이블 키들: ['src/com/example/dynamicquery/UserMapper.xml', 'src/main/resources/mybatis/mapper/ImplicitJoinMapper.xml', 'src/main/resources/mybatis/mapper/ImplicitJoinTestMapper.xml', 'src/main/resources/mybatis/mapper/MixedErrorMapper.xml', 'src/main/resources/mybatis/mapper/ProductMapper.xml', 'src/main/resources/mybatis/mapper/UserMapper.xml']
2025-09-13 22:43:56,305 - SourceAnalyzer - DEBUG - logger.py:64 - 메모리에서 file_id 조회 성공: src/main/resources/mybatis/mapper/MixedErrorMapper.xml -> 25
2025-09-13 22:43:56,305 - SourceAnalyzer - DEBUG - logger.py:64 - 파일 ID 조회 성공: 25
2025-09-13 22:43:56,305 - SourceAnalyzer - DEBUG - logger.py:64 - 컴포넌트 저장 시도: selectByName (select) -> SQL_SELECT
2025-09-13 22:43:56,305 - SourceAnalyzer - DEBUG - logger.py:64 - Upsert 실행: components
2025-09-13 22:43:56,305 - SourceAnalyzer - DEBUG - logger.py:64 - 데이터: {'project_id': 1, 'component_type': 'SQL_SELECT', 'component_name': 'selectByName', 'parent_id': None, 'layer': 'SQL', 'file_id': 25, 'line_start': 1, 'line_end': 1, 'hash_value': 'e3fbb7ff3b612cb369a4822192157e4e', 'has_error': 'N', 'error_message': None, 'del_yn': 'N'}
2025-09-13 22:43:56,305 - SourceAnalyzer - DEBUG - logger.py:64 - Components upsert 시작: selectByName (SQL_SELECT)
2025-09-13 22:43:56,305 - SourceAnalyzer - DEBUG - logger.py:64 - 기존 레코드 확인 쿼리: 
                    SELECT component_id FROM components 
                    WHERE project_id = ? AND component_name = ? AND file_id = ?
                    
2025-09-13 22:43:56,305 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 파라미터: (1, 'selectByName', 25)
2025-09-13 22:43:56,305 - SourceAnalyzer - DEBUG - logger.py:64 - 기존 레코드 조회 결과: <sqlite3.Row object at 0x00000257905C6800>
2025-09-13 22:43:56,305 - SourceAnalyzer - DEBUG - logger.py:64 - UPDATE 쿼리: 
                        UPDATE components SET component_type = ?, parent_id = ?, layer = ?, line_start = ?, line_end = ?, hash_value = ?, has_error = ?, error_message = ?, del_yn = ?
                        WHERE component_id = ?
                        
2025-09-13 22:43:56,305 - SourceAnalyzer - DEBUG - logger.py:64 - UPDATE 파라미터: ['SQL_SELECT', None, 'SQL', 1, 1, 'e3fbb7ff3b612cb369a4822192157e4e', 'N', None, 'N', 570]
2025-09-13 22:43:56,305 - SourceAnalyzer - DEBUG - logger.py:64 - UPDATE 실행 완료: component_id = 570
2025-09-13 22:43:56,305 - SourceAnalyzer - DEBUG - logger.py:64 - 컴포넌트 저장 완료: selectByName (ID: 570)
2025-09-13 22:43:56,305 - SourceAnalyzer - DEBUG - logger.py:64 - 컴포넌트 저장 결과: component_id = 570
2025-09-13 22:43:56,305 - SourceAnalyzer - DEBUG - logger.py:64 - SQL Content 저장 시작: selectByName (component_id: 570)
2025-09-13 22:43:56,305 - SourceAnalyzer - DEBUG - logger.py:64 - SQL Content 상대경로: src/main/resources/mybatis/mapper
2025-09-13 22:43:56,306 - SourceAnalyzer - WARNING - logger.py:72 - SQL Content 저장 중 예외 발생 (무시하고 계속 진행): selectByName - 'sql_query'
2025-09-13 22:43:56,306 - SourceAnalyzer - DEBUG - logger.py:64 - SQL 쿼리 처리 완료: selectByName
2025-09-13 22:43:56,306 - SourceAnalyzer - DEBUG - logger.py:64 - SQL 쿼리 처리 루프 시작: 4/12
2025-09-13 22:43:56,306 - SourceAnalyzer - DEBUG - logger.py:64 - SQL 쿼리 처리 시작: searchUsers (select)
2025-09-13 22:43:56,306 - SourceAnalyzer - DEBUG - logger.py:64 - GET XML ID 조회: D:\Analyzer\CreateMetaDb\projects\sampleSrc\src\main\resources\mybatis\mapper\MixedErrorMapper.xml -> src/main/resources/mybatis/mapper/MixedErrorMapper.xml
2025-09-13 22:43:56,306 - SourceAnalyzer - DEBUG - logger.py:64 - 메모리 매핑 테이블 키들: ['src/com/example/dynamicquery/UserMapper.xml', 'src/main/resources/mybatis/mapper/ImplicitJoinMapper.xml', 'src/main/resources/mybatis/mapper/ImplicitJoinTestMapper.xml', 'src/main/resources/mybatis/mapper/MixedErrorMapper.xml', 'src/main/resources/mybatis/mapper/ProductMapper.xml', 'src/main/resources/mybatis/mapper/UserMapper.xml']
2025-09-13 22:43:56,306 - SourceAnalyzer - DEBUG - logger.py:64 - 메모리에서 file_id 조회 성공: src/main/resources/mybatis/mapper/MixedErrorMapper.xml -> 25
2025-09-13 22:43:56,306 - SourceAnalyzer - DEBUG - logger.py:64 - 파일 ID 조회 성공: 25
2025-09-13 22:43:56,306 - SourceAnalyzer - DEBUG - logger.py:64 - 컴포넌트 저장 시도: searchUsers (select) -> SQL_SELECT
2025-09-13 22:43:56,306 - SourceAnalyzer - DEBUG - logger.py:64 - Upsert 실행: components
2025-09-13 22:43:56,306 - SourceAnalyzer - DEBUG - logger.py:64 - 데이터: {'project_id': 1, 'component_type': 'SQL_SELECT', 'component_name': 'searchUsers', 'parent_id': None, 'layer': 'SQL', 'file_id': 25, 'line_start': 1, 'line_end': 1, 'hash_value': 'da9815873a428c544d0428458928dc49', 'has_error': 'N', 'error_message': None, 'del_yn': 'N'}
2025-09-13 22:43:56,306 - SourceAnalyzer - DEBUG - logger.py:64 - Components upsert 시작: searchUsers (SQL_SELECT)
2025-09-13 22:43:56,306 - SourceAnalyzer - DEBUG - logger.py:64 - 기존 레코드 확인 쿼리: 
                    SELECT component_id FROM components 
                    WHERE project_id = ? AND component_name = ? AND file_id = ?
                    
2025-09-13 22:43:56,306 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 파라미터: (1, 'searchUsers', 25)
2025-09-13 22:43:56,306 - SourceAnalyzer - DEBUG - logger.py:64 - 기존 레코드 조회 결과: <sqlite3.Row object at 0x00000257905C5480>
2025-09-13 22:43:56,306 - SourceAnalyzer - DEBUG - logger.py:64 - UPDATE 쿼리: 
                        UPDATE components SET component_type = ?, parent_id = ?, layer = ?, line_start = ?, line_end = ?, hash_value = ?, has_error = ?, error_message = ?, del_yn = ?
                        WHERE component_id = ?
                        
2025-09-13 22:43:56,306 - SourceAnalyzer - DEBUG - logger.py:64 - UPDATE 파라미터: ['SQL_SELECT', None, 'SQL', 1, 1, 'da9815873a428c544d0428458928dc49', 'N', None, 'N', 574]
2025-09-13 22:43:56,306 - SourceAnalyzer - DEBUG - logger.py:64 - UPDATE 실행 완료: component_id = 574
2025-09-13 22:43:56,306 - SourceAnalyzer - DEBUG - logger.py:64 - 컴포넌트 저장 완료: searchUsers (ID: 574)
2025-09-13 22:43:56,306 - SourceAnalyzer - DEBUG - logger.py:64 - 컴포넌트 저장 결과: component_id = 574
2025-09-13 22:43:56,306 - SourceAnalyzer - DEBUG - logger.py:64 - SQL Content 저장 시작: searchUsers (component_id: 574)
2025-09-13 22:43:56,306 - SourceAnalyzer - DEBUG - logger.py:64 - SQL Content 상대경로: src/main/resources/mybatis/mapper
2025-09-13 22:43:56,306 - SourceAnalyzer - WARNING - logger.py:72 - SQL Content 저장 중 예외 발생 (무시하고 계속 진행): searchUsers - 'sql_query'
2025-09-13 22:43:56,306 - SourceAnalyzer - DEBUG - logger.py:64 - SQL 쿼리 처리 완료: searchUsers
2025-09-13 22:43:56,306 - SourceAnalyzer - DEBUG - logger.py:64 - SQL 쿼리 처리 루프 시작: 5/12
2025-09-13 22:43:56,306 - SourceAnalyzer - DEBUG - logger.py:64 - SQL 쿼리 처리 시작: countUsers (select)
2025-09-13 22:43:56,306 - SourceAnalyzer - DEBUG - logger.py:64 - GET XML ID 조회: D:\Analyzer\CreateMetaDb\projects\sampleSrc\src\main\resources\mybatis\mapper\MixedErrorMapper.xml -> src/main/resources/mybatis/mapper/MixedErrorMapper.xml
2025-09-13 22:43:56,306 - SourceAnalyzer - DEBUG - logger.py:64 - 메모리 매핑 테이블 키들: ['src/com/example/dynamicquery/UserMapper.xml', 'src/main/resources/mybatis/mapper/ImplicitJoinMapper.xml', 'src/main/resources/mybatis/mapper/ImplicitJoinTestMapper.xml', 'src/main/resources/mybatis/mapper/MixedErrorMapper.xml', 'src/main/resources/mybatis/mapper/ProductMapper.xml', 'src/main/resources/mybatis/mapper/UserMapper.xml']
2025-09-13 22:43:56,306 - SourceAnalyzer - DEBUG - logger.py:64 - 메모리에서 file_id 조회 성공: src/main/resources/mybatis/mapper/MixedErrorMapper.xml -> 25
2025-09-13 22:43:56,307 - SourceAnalyzer - DEBUG - logger.py:64 - 파일 ID 조회 성공: 25
2025-09-13 22:43:56,307 - SourceAnalyzer - DEBUG - logger.py:64 - 컴포넌트 저장 시도: countUsers (select) -> SQL_SELECT
2025-09-13 22:43:56,307 - SourceAnalyzer - DEBUG - logger.py:64 - Upsert 실행: components
2025-09-13 22:43:56,307 - SourceAnalyzer - DEBUG - logger.py:64 - 데이터: {'project_id': 1, 'component_type': 'SQL_SELECT', 'component_name': 'countUsers', 'parent_id': None, 'layer': 'SQL', 'file_id': 25, 'line_start': 1, 'line_end': 1, 'hash_value': 'e0f88e42edbeb9240cd7a3820cf11897', 'has_error': 'N', 'error_message': None, 'del_yn': 'N'}
2025-09-13 22:43:56,307 - SourceAnalyzer - DEBUG - logger.py:64 - Components upsert 시작: countUsers (SQL_SELECT)
2025-09-13 22:43:56,307 - SourceAnalyzer - DEBUG - logger.py:64 - 기존 레코드 확인 쿼리: 
                    SELECT component_id FROM components 
                    WHERE project_id = ? AND component_name = ? AND file_id = ?
                    
2025-09-13 22:43:56,307 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 파라미터: (1, 'countUsers', 25)
2025-09-13 22:43:56,307 - SourceAnalyzer - DEBUG - logger.py:64 - 기존 레코드 조회 결과: <sqlite3.Row object at 0x00000257905C6B60>
2025-09-13 22:43:56,307 - SourceAnalyzer - DEBUG - logger.py:64 - UPDATE 쿼리: 
                        UPDATE components SET component_type = ?, parent_id = ?, layer = ?, line_start = ?, line_end = ?, hash_value = ?, has_error = ?, error_message = ?, del_yn = ?
                        WHERE component_id = ?
                        
2025-09-13 22:43:56,307 - SourceAnalyzer - DEBUG - logger.py:64 - UPDATE 파라미터: ['SQL_SELECT', None, 'SQL', 1, 1, 'e0f88e42edbeb9240cd7a3820cf11897', 'N', None, 'N', 575]
2025-09-13 22:43:56,307 - SourceAnalyzer - DEBUG - logger.py:64 - UPDATE 실행 완료: component_id = 575
2025-09-13 22:43:56,307 - SourceAnalyzer - DEBUG - logger.py:64 - 컴포넌트 저장 완료: countUsers (ID: 575)
2025-09-13 22:43:56,307 - SourceAnalyzer - DEBUG - logger.py:64 - 컴포넌트 저장 결과: component_id = 575
2025-09-13 22:43:56,307 - SourceAnalyzer - DEBUG - logger.py:64 - SQL Content 저장 시작: countUsers (component_id: 575)
2025-09-13 22:43:56,307 - SourceAnalyzer - DEBUG - logger.py:64 - SQL Content 상대경로: src/main/resources/mybatis/mapper
2025-09-13 22:43:56,307 - SourceAnalyzer - WARNING - logger.py:72 - SQL Content 저장 중 예외 발생 (무시하고 계속 진행): countUsers - 'sql_query'
2025-09-13 22:43:56,307 - SourceAnalyzer - DEBUG - logger.py:64 - SQL 쿼리 처리 완료: countUsers
2025-09-13 22:43:56,307 - SourceAnalyzer - DEBUG - logger.py:64 - SQL 쿼리 처리 루프 시작: 6/12
2025-09-13 22:43:56,307 - SourceAnalyzer - DEBUG - logger.py:64 - SQL 쿼리 처리 시작: getUserWithDetails (select)
2025-09-13 22:43:56,307 - SourceAnalyzer - DEBUG - logger.py:64 - GET XML ID 조회: D:\Analyzer\CreateMetaDb\projects\sampleSrc\src\main\resources\mybatis\mapper\MixedErrorMapper.xml -> src/main/resources/mybatis/mapper/MixedErrorMapper.xml
2025-09-13 22:43:56,307 - SourceAnalyzer - DEBUG - logger.py:64 - 메모리 매핑 테이블 키들: ['src/com/example/dynamicquery/UserMapper.xml', 'src/main/resources/mybatis/mapper/ImplicitJoinMapper.xml', 'src/main/resources/mybatis/mapper/ImplicitJoinTestMapper.xml', 'src/main/resources/mybatis/mapper/MixedErrorMapper.xml', 'src/main/resources/mybatis/mapper/ProductMapper.xml', 'src/main/resources/mybatis/mapper/UserMapper.xml']
2025-09-13 22:43:56,307 - SourceAnalyzer - DEBUG - logger.py:64 - 메모리에서 file_id 조회 성공: src/main/resources/mybatis/mapper/MixedErrorMapper.xml -> 25
2025-09-13 22:43:56,307 - SourceAnalyzer - DEBUG - logger.py:64 - 파일 ID 조회 성공: 25
2025-09-13 22:43:56,307 - SourceAnalyzer - DEBUG - logger.py:64 - 컴포넌트 저장 시도: getUserWithDetails (select) -> SQL_SELECT
2025-09-13 22:43:56,307 - SourceAnalyzer - DEBUG - logger.py:64 - Upsert 실행: components
2025-09-13 22:43:56,308 - SourceAnalyzer - DEBUG - logger.py:64 - 데이터: {'project_id': 1, 'component_type': 'SQL_SELECT', 'component_name': 'getUserWithDetails', 'parent_id': None, 'layer': 'SQL', 'file_id': 25, 'line_start': 1, 'line_end': 1, 'hash_value': '5ac9c35a3ebdf3c14276b4ba35a00c40', 'has_error': 'N', 'error_message': None, 'del_yn': 'N'}
2025-09-13 22:43:56,308 - SourceAnalyzer - DEBUG - logger.py:64 - Components upsert 시작: getUserWithDetails (SQL_SELECT)
2025-09-13 22:43:56,308 - SourceAnalyzer - DEBUG - logger.py:64 - 기존 레코드 확인 쿼리: 
                    SELECT component_id FROM components 
                    WHERE project_id = ? AND component_name = ? AND file_id = ?
                    
2025-09-13 22:43:56,308 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 파라미터: (1, 'getUserWithDetails', 25)
2025-09-13 22:43:56,308 - SourceAnalyzer - DEBUG - logger.py:64 - 기존 레코드 조회 결과: <sqlite3.Row object at 0x00000257905C58A0>
2025-09-13 22:43:56,308 - SourceAnalyzer - DEBUG - logger.py:64 - UPDATE 쿼리: 
                        UPDATE components SET component_type = ?, parent_id = ?, layer = ?, line_start = ?, line_end = ?, hash_value = ?, has_error = ?, error_message = ?, del_yn = ?
                        WHERE component_id = ?
                        
2025-09-13 22:43:56,308 - SourceAnalyzer - DEBUG - logger.py:64 - UPDATE 파라미터: ['SQL_SELECT', None, 'SQL', 1, 1, '5ac9c35a3ebdf3c14276b4ba35a00c40', 'N', None, 'N', 576]
2025-09-13 22:43:56,308 - SourceAnalyzer - DEBUG - logger.py:64 - UPDATE 실행 완료: component_id = 576
2025-09-13 22:43:56,308 - SourceAnalyzer - DEBUG - logger.py:64 - 컴포넌트 저장 완료: getUserWithDetails (ID: 576)
2025-09-13 22:43:56,308 - SourceAnalyzer - DEBUG - logger.py:64 - 컴포넌트 저장 결과: component_id = 576
2025-09-13 22:43:56,308 - SourceAnalyzer - DEBUG - logger.py:64 - SQL Content 저장 시작: getUserWithDetails (component_id: 576)
2025-09-13 22:43:56,308 - SourceAnalyzer - DEBUG - logger.py:64 - SQL Content 상대경로: src/main/resources/mybatis/mapper
2025-09-13 22:43:56,308 - SourceAnalyzer - WARNING - logger.py:72 - SQL Content 저장 중 예외 발생 (무시하고 계속 진행): getUserWithDetails - 'sql_query'
2025-09-13 22:43:56,308 - SourceAnalyzer - DEBUG - logger.py:64 - SQL 쿼리 처리 완료: getUserWithDetails
2025-09-13 22:43:56,308 - SourceAnalyzer - DEBUG - logger.py:64 - SQL 쿼리 처리 루프 시작: 7/12
2025-09-13 22:43:56,308 - SourceAnalyzer - DEBUG - logger.py:64 - SQL 쿼리 처리 시작: selectFromNonExistentTable (select)
2025-09-13 22:43:56,308 - SourceAnalyzer - DEBUG - logger.py:64 - GET XML ID 조회: D:\Analyzer\CreateMetaDb\projects\sampleSrc\src\main\resources\mybatis\mapper\MixedErrorMapper.xml -> src/main/resources/mybatis/mapper/MixedErrorMapper.xml
2025-09-13 22:43:56,308 - SourceAnalyzer - DEBUG - logger.py:64 - 메모리 매핑 테이블 키들: ['src/com/example/dynamicquery/UserMapper.xml', 'src/main/resources/mybatis/mapper/ImplicitJoinMapper.xml', 'src/main/resources/mybatis/mapper/ImplicitJoinTestMapper.xml', 'src/main/resources/mybatis/mapper/MixedErrorMapper.xml', 'src/main/resources/mybatis/mapper/ProductMapper.xml', 'src/main/resources/mybatis/mapper/UserMapper.xml']
2025-09-13 22:43:56,308 - SourceAnalyzer - DEBUG - logger.py:64 - 메모리에서 file_id 조회 성공: src/main/resources/mybatis/mapper/MixedErrorMapper.xml -> 25
2025-09-13 22:43:56,308 - SourceAnalyzer - DEBUG - logger.py:64 - 파일 ID 조회 성공: 25
2025-09-13 22:43:56,308 - SourceAnalyzer - DEBUG - logger.py:64 - 컴포넌트 저장 시도: selectFromNonExistentTable (select) -> SQL_SELECT
2025-09-13 22:43:56,308 - SourceAnalyzer - DEBUG - logger.py:64 - Upsert 실행: components
2025-09-13 22:43:56,308 - SourceAnalyzer - DEBUG - logger.py:64 - 데이터: {'project_id': 1, 'component_type': 'SQL_SELECT', 'component_name': 'selectFromNonExistentTable', 'parent_id': None, 'layer': 'SQL', 'file_id': 25, 'line_start': 1, 'line_end': 1, 'hash_value': 'd3f57779102f203a42f221c8f14f566c', 'has_error': 'N', 'error_message': None, 'del_yn': 'N'}
2025-09-13 22:43:56,308 - SourceAnalyzer - DEBUG - logger.py:64 - Components upsert 시작: selectFromNonExistentTable (SQL_SELECT)
2025-09-13 22:43:56,308 - SourceAnalyzer - DEBUG - logger.py:64 - 기존 레코드 확인 쿼리: 
                    SELECT component_id FROM components 
                    WHERE project_id = ? AND component_name = ? AND file_id = ?
                    
2025-09-13 22:43:56,309 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 파라미터: (1, 'selectFromNonExistentTable', 25)
2025-09-13 22:43:56,309 - SourceAnalyzer - DEBUG - logger.py:64 - 기존 레코드 조회 결과: <sqlite3.Row object at 0x00000257905C62F0>
2025-09-13 22:43:56,309 - SourceAnalyzer - DEBUG - logger.py:64 - UPDATE 쿼리: 
                        UPDATE components SET component_type = ?, parent_id = ?, layer = ?, line_start = ?, line_end = ?, hash_value = ?, has_error = ?, error_message = ?, del_yn = ?
                        WHERE component_id = ?
                        
2025-09-13 22:43:56,309 - SourceAnalyzer - DEBUG - logger.py:64 - UPDATE 파라미터: ['SQL_SELECT', None, 'SQL', 1, 1, 'd3f57779102f203a42f221c8f14f566c', 'N', None, 'N', 577]
2025-09-13 22:43:56,309 - SourceAnalyzer - DEBUG - logger.py:64 - UPDATE 실행 완료: component_id = 577
2025-09-13 22:43:56,309 - SourceAnalyzer - DEBUG - logger.py:64 - 컴포넌트 저장 완료: selectFromNonExistentTable (ID: 577)
2025-09-13 22:43:56,309 - SourceAnalyzer - DEBUG - logger.py:64 - 컴포넌트 저장 결과: component_id = 577
2025-09-13 22:43:56,309 - SourceAnalyzer - DEBUG - logger.py:64 - SQL Content 저장 시작: selectFromNonExistentTable (component_id: 577)
2025-09-13 22:43:56,309 - SourceAnalyzer - DEBUG - logger.py:64 - SQL Content 상대경로: src/main/resources/mybatis/mapper
2025-09-13 22:43:56,309 - SourceAnalyzer - WARNING - logger.py:72 - SQL Content 저장 중 예외 발생 (무시하고 계속 진행): selectFromNonExistentTable - 'sql_query'
2025-09-13 22:43:56,309 - SourceAnalyzer - DEBUG - logger.py:64 - SQL 쿼리 처리 완료: selectFromNonExistentTable
2025-09-13 22:43:56,309 - SourceAnalyzer - DEBUG - logger.py:64 - SQL 쿼리 처리 루프 시작: 8/12
2025-09-13 22:43:56,309 - SourceAnalyzer - DEBUG - logger.py:64 - SQL 쿼리 처리 시작: selectWithNonExistentColumn (select)
2025-09-13 22:43:56,309 - SourceAnalyzer - DEBUG - logger.py:64 - GET XML ID 조회: D:\Analyzer\CreateMetaDb\projects\sampleSrc\src\main\resources\mybatis\mapper\MixedErrorMapper.xml -> src/main/resources/mybatis/mapper/MixedErrorMapper.xml
2025-09-13 22:43:56,309 - SourceAnalyzer - DEBUG - logger.py:64 - 메모리 매핑 테이블 키들: ['src/com/example/dynamicquery/UserMapper.xml', 'src/main/resources/mybatis/mapper/ImplicitJoinMapper.xml', 'src/main/resources/mybatis/mapper/ImplicitJoinTestMapper.xml', 'src/main/resources/mybatis/mapper/MixedErrorMapper.xml', 'src/main/resources/mybatis/mapper/ProductMapper.xml', 'src/main/resources/mybatis/mapper/UserMapper.xml']
2025-09-13 22:43:56,309 - SourceAnalyzer - DEBUG - logger.py:64 - 메모리에서 file_id 조회 성공: src/main/resources/mybatis/mapper/MixedErrorMapper.xml -> 25
2025-09-13 22:43:56,309 - SourceAnalyzer - DEBUG - logger.py:64 - 파일 ID 조회 성공: 25
2025-09-13 22:43:56,309 - SourceAnalyzer - DEBUG - logger.py:64 - 컴포넌트 저장 시도: selectWithNonExistentColumn (select) -> SQL_SELECT
2025-09-13 22:43:56,309 - SourceAnalyzer - DEBUG - logger.py:64 - Upsert 실행: components
2025-09-13 22:43:56,309 - SourceAnalyzer - DEBUG - logger.py:64 - 데이터: {'project_id': 1, 'component_type': 'SQL_SELECT', 'component_name': 'selectWithNonExistentColumn', 'parent_id': None, 'layer': 'SQL', 'file_id': 25, 'line_start': 1, 'line_end': 1, 'hash_value': 'ac789996d2003c43b343c09ae6d1514e', 'has_error': 'N', 'error_message': None, 'del_yn': 'N'}
2025-09-13 22:43:56,309 - SourceAnalyzer - DEBUG - logger.py:64 - Components upsert 시작: selectWithNonExistentColumn (SQL_SELECT)
2025-09-13 22:43:56,309 - SourceAnalyzer - DEBUG - logger.py:64 - 기존 레코드 확인 쿼리: 
                    SELECT component_id FROM components 
                    WHERE project_id = ? AND component_name = ? AND file_id = ?
                    
2025-09-13 22:43:56,309 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 파라미터: (1, 'selectWithNonExistentColumn', 25)
2025-09-13 22:43:56,309 - SourceAnalyzer - DEBUG - logger.py:64 - 기존 레코드 조회 결과: <sqlite3.Row object at 0x00000257905C5F90>
2025-09-13 22:43:56,309 - SourceAnalyzer - DEBUG - logger.py:64 - UPDATE 쿼리: 
                        UPDATE components SET component_type = ?, parent_id = ?, layer = ?, line_start = ?, line_end = ?, hash_value = ?, has_error = ?, error_message = ?, del_yn = ?
                        WHERE component_id = ?
                        
2025-09-13 22:43:56,309 - SourceAnalyzer - DEBUG - logger.py:64 - UPDATE 파라미터: ['SQL_SELECT', None, 'SQL', 1, 1, 'ac789996d2003c43b343c09ae6d1514e', 'N', None, 'N', 578]
2025-09-13 22:43:56,309 - SourceAnalyzer - DEBUG - logger.py:64 - UPDATE 실행 완료: component_id = 578
2025-09-13 22:43:56,309 - SourceAnalyzer - DEBUG - logger.py:64 - 컴포넌트 저장 완료: selectWithNonExistentColumn (ID: 578)
2025-09-13 22:43:56,309 - SourceAnalyzer - DEBUG - logger.py:64 - 컴포넌트 저장 결과: component_id = 578
2025-09-13 22:43:56,310 - SourceAnalyzer - DEBUG - logger.py:64 - SQL Content 저장 시작: selectWithNonExistentColumn (component_id: 578)
2025-09-13 22:43:56,310 - SourceAnalyzer - DEBUG - logger.py:64 - SQL Content 상대경로: src/main/resources/mybatis/mapper
2025-09-13 22:43:56,310 - SourceAnalyzer - WARNING - logger.py:72 - SQL Content 저장 중 예외 발생 (무시하고 계속 진행): selectWithNonExistentColumn - 'sql_query'
2025-09-13 22:43:56,310 - SourceAnalyzer - DEBUG - logger.py:64 - SQL 쿼리 처리 완료: selectWithNonExistentColumn
2025-09-13 22:43:56,310 - SourceAnalyzer - DEBUG - logger.py:64 - SQL 쿼리 처리 루프 시작: 9/12
2025-09-13 22:43:56,310 - SourceAnalyzer - DEBUG - logger.py:64 - SQL 쿼리 처리 시작: selectComplexError (select)
2025-09-13 22:43:56,310 - SourceAnalyzer - DEBUG - logger.py:64 - GET XML ID 조회: D:\Analyzer\CreateMetaDb\projects\sampleSrc\src\main\resources\mybatis\mapper\MixedErrorMapper.xml -> src/main/resources/mybatis/mapper/MixedErrorMapper.xml
2025-09-13 22:43:56,310 - SourceAnalyzer - DEBUG - logger.py:64 - 메모리 매핑 테이블 키들: ['src/com/example/dynamicquery/UserMapper.xml', 'src/main/resources/mybatis/mapper/ImplicitJoinMapper.xml', 'src/main/resources/mybatis/mapper/ImplicitJoinTestMapper.xml', 'src/main/resources/mybatis/mapper/MixedErrorMapper.xml', 'src/main/resources/mybatis/mapper/ProductMapper.xml', 'src/main/resources/mybatis/mapper/UserMapper.xml']
2025-09-13 22:43:56,310 - SourceAnalyzer - DEBUG - logger.py:64 - 메모리에서 file_id 조회 성공: src/main/resources/mybatis/mapper/MixedErrorMapper.xml -> 25
2025-09-13 22:43:56,310 - SourceAnalyzer - DEBUG - logger.py:64 - 파일 ID 조회 성공: 25
2025-09-13 22:43:56,310 - SourceAnalyzer - DEBUG - logger.py:64 - 컴포넌트 저장 시도: selectComplexError (select) -> SQL_SELECT
2025-09-13 22:43:56,310 - SourceAnalyzer - DEBUG - logger.py:64 - Upsert 실행: components
2025-09-13 22:43:56,310 - SourceAnalyzer - DEBUG - logger.py:64 - 데이터: {'project_id': 1, 'component_type': 'SQL_SELECT', 'component_name': 'selectComplexError', 'parent_id': None, 'layer': 'SQL', 'file_id': 25, 'line_start': 1, 'line_end': 1, 'hash_value': '6447b878a1323abb526cc6e8c0669eff', 'has_error': 'N', 'error_message': None, 'del_yn': 'N'}
2025-09-13 22:43:56,310 - SourceAnalyzer - DEBUG - logger.py:64 - Components upsert 시작: selectComplexError (SQL_SELECT)
2025-09-13 22:43:56,310 - SourceAnalyzer - DEBUG - logger.py:64 - 기존 레코드 확인 쿼리: 
                    SELECT component_id FROM components 
                    WHERE project_id = ? AND component_name = ? AND file_id = ?
                    
2025-09-13 22:43:56,310 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 파라미터: (1, 'selectComplexError', 25)
2025-09-13 22:43:56,310 - SourceAnalyzer - DEBUG - logger.py:64 - 기존 레코드 조회 결과: <sqlite3.Row object at 0x00000257905C6800>
2025-09-13 22:43:56,310 - SourceAnalyzer - DEBUG - logger.py:64 - UPDATE 쿼리: 
                        UPDATE components SET component_type = ?, parent_id = ?, layer = ?, line_start = ?, line_end = ?, hash_value = ?, has_error = ?, error_message = ?, del_yn = ?
                        WHERE component_id = ?
                        
2025-09-13 22:43:56,310 - SourceAnalyzer - DEBUG - logger.py:64 - UPDATE 파라미터: ['SQL_SELECT', None, 'SQL', 1, 1, '6447b878a1323abb526cc6e8c0669eff', 'N', None, 'N', 579]
2025-09-13 22:43:56,310 - SourceAnalyzer - DEBUG - logger.py:64 - UPDATE 실행 완료: component_id = 579
2025-09-13 22:43:56,310 - SourceAnalyzer - DEBUG - logger.py:64 - 컴포넌트 저장 완료: selectComplexError (ID: 579)
2025-09-13 22:43:56,310 - SourceAnalyzer - DEBUG - logger.py:64 - 컴포넌트 저장 결과: component_id = 579
2025-09-13 22:43:56,310 - SourceAnalyzer - DEBUG - logger.py:64 - SQL Content 저장 시작: selectComplexError (component_id: 579)
2025-09-13 22:43:56,310 - SourceAnalyzer - DEBUG - logger.py:64 - SQL Content 상대경로: src/main/resources/mybatis/mapper
2025-09-13 22:43:56,310 - SourceAnalyzer - WARNING - logger.py:72 - SQL Content 저장 중 예외 발생 (무시하고 계속 진행): selectComplexError - 'sql_query'
2025-09-13 22:43:56,310 - SourceAnalyzer - DEBUG - logger.py:64 - SQL 쿼리 처리 완료: selectComplexError
2025-09-13 22:43:56,310 - SourceAnalyzer - DEBUG - logger.py:64 - SQL 쿼리 처리 루프 시작: 10/12
2025-09-13 22:43:56,310 - SourceAnalyzer - DEBUG - logger.py:64 - SQL 쿼리 처리 시작: insert (insert)
2025-09-13 22:43:56,311 - SourceAnalyzer - DEBUG - logger.py:64 - GET XML ID 조회: D:\Analyzer\CreateMetaDb\projects\sampleSrc\src\main\resources\mybatis\mapper\MixedErrorMapper.xml -> src/main/resources/mybatis/mapper/MixedErrorMapper.xml
2025-09-13 22:43:56,311 - SourceAnalyzer - DEBUG - logger.py:64 - 메모리 매핑 테이블 키들: ['src/com/example/dynamicquery/UserMapper.xml', 'src/main/resources/mybatis/mapper/ImplicitJoinMapper.xml', 'src/main/resources/mybatis/mapper/ImplicitJoinTestMapper.xml', 'src/main/resources/mybatis/mapper/MixedErrorMapper.xml', 'src/main/resources/mybatis/mapper/ProductMapper.xml', 'src/main/resources/mybatis/mapper/UserMapper.xml']
2025-09-13 22:43:56,311 - SourceAnalyzer - DEBUG - logger.py:64 - 메모리에서 file_id 조회 성공: src/main/resources/mybatis/mapper/MixedErrorMapper.xml -> 25
2025-09-13 22:43:56,311 - SourceAnalyzer - DEBUG - logger.py:64 - 파일 ID 조회 성공: 25
2025-09-13 22:43:56,311 - SourceAnalyzer - DEBUG - logger.py:64 - 컴포넌트 저장 시도: insert (insert) -> SQL_INSERT
2025-09-13 22:43:56,311 - SourceAnalyzer - DEBUG - logger.py:64 - Upsert 실행: components
2025-09-13 22:43:56,311 - SourceAnalyzer - DEBUG - logger.py:64 - 데이터: {'project_id': 1, 'component_type': 'SQL_INSERT', 'component_name': 'insert', 'parent_id': None, 'layer': 'SQL', 'file_id': 25, 'line_start': 1, 'line_end': 1, 'hash_value': 'a46290046e97792ea0e4e2c34a679a49', 'has_error': 'N', 'error_message': None, 'del_yn': 'N'}
2025-09-13 22:43:56,311 - SourceAnalyzer - DEBUG - logger.py:64 - Components upsert 시작: insert (SQL_INSERT)
2025-09-13 22:43:56,311 - SourceAnalyzer - DEBUG - logger.py:64 - 기존 레코드 확인 쿼리: 
                    SELECT component_id FROM components 
                    WHERE project_id = ? AND component_name = ? AND file_id = ?
                    
2025-09-13 22:43:56,311 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 파라미터: (1, 'insert', 25)
2025-09-13 22:43:56,311 - SourceAnalyzer - DEBUG - logger.py:64 - 기존 레코드 조회 결과: <sqlite3.Row object at 0x00000257905C5480>
2025-09-13 22:43:56,311 - SourceAnalyzer - DEBUG - logger.py:64 - UPDATE 쿼리: 
                        UPDATE components SET component_type = ?, parent_id = ?, layer = ?, line_start = ?, line_end = ?, hash_value = ?, has_error = ?, error_message = ?, del_yn = ?
                        WHERE component_id = ?
                        
2025-09-13 22:43:56,311 - SourceAnalyzer - DEBUG - logger.py:64 - UPDATE 파라미터: ['SQL_INSERT', None, 'SQL', 1, 1, 'a46290046e97792ea0e4e2c34a679a49', 'N', None, 'N', 571]
2025-09-13 22:43:56,311 - SourceAnalyzer - DEBUG - logger.py:64 - UPDATE 실행 완료: component_id = 571
2025-09-13 22:43:56,311 - SourceAnalyzer - DEBUG - logger.py:64 - 컴포넌트 저장 완료: insert (ID: 571)
2025-09-13 22:43:56,311 - SourceAnalyzer - DEBUG - logger.py:64 - 컴포넌트 저장 결과: component_id = 571
2025-09-13 22:43:56,311 - SourceAnalyzer - DEBUG - logger.py:64 - SQL Content 저장 시작: insert (component_id: 571)
2025-09-13 22:43:56,311 - SourceAnalyzer - DEBUG - logger.py:64 - SQL Content 상대경로: src/main/resources/mybatis/mapper
2025-09-13 22:43:56,311 - SourceAnalyzer - WARNING - logger.py:72 - SQL Content 저장 중 예외 발생 (무시하고 계속 진행): insert - 'sql_query'
2025-09-13 22:43:56,311 - SourceAnalyzer - DEBUG - logger.py:64 - SQL 쿼리 처리 완료: insert
2025-09-13 22:43:56,311 - SourceAnalyzer - DEBUG - logger.py:64 - SQL 쿼리 처리 루프 시작: 11/12
2025-09-13 22:43:56,311 - SourceAnalyzer - DEBUG - logger.py:64 - SQL 쿼리 처리 시작: update (update)
2025-09-13 22:43:56,311 - SourceAnalyzer - DEBUG - logger.py:64 - GET XML ID 조회: D:\Analyzer\CreateMetaDb\projects\sampleSrc\src\main\resources\mybatis\mapper\MixedErrorMapper.xml -> src/main/resources/mybatis/mapper/MixedErrorMapper.xml
2025-09-13 22:43:56,311 - SourceAnalyzer - DEBUG - logger.py:64 - 메모리 매핑 테이블 키들: ['src/com/example/dynamicquery/UserMapper.xml', 'src/main/resources/mybatis/mapper/ImplicitJoinMapper.xml', 'src/main/resources/mybatis/mapper/ImplicitJoinTestMapper.xml', 'src/main/resources/mybatis/mapper/MixedErrorMapper.xml', 'src/main/resources/mybatis/mapper/ProductMapper.xml', 'src/main/resources/mybatis/mapper/UserMapper.xml']
2025-09-13 22:43:56,311 - SourceAnalyzer - DEBUG - logger.py:64 - 메모리에서 file_id 조회 성공: src/main/resources/mybatis/mapper/MixedErrorMapper.xml -> 25
2025-09-13 22:43:56,311 - SourceAnalyzer - DEBUG - logger.py:64 - 파일 ID 조회 성공: 25
2025-09-13 22:43:56,311 - SourceAnalyzer - DEBUG - logger.py:64 - 컴포넌트 저장 시도: update (update) -> SQL_UPDATE
2025-09-13 22:43:56,311 - SourceAnalyzer - DEBUG - logger.py:64 - Upsert 실행: components
2025-09-13 22:43:56,311 - SourceAnalyzer - DEBUG - logger.py:64 - 데이터: {'project_id': 1, 'component_type': 'SQL_UPDATE', 'component_name': 'update', 'parent_id': None, 'layer': 'SQL', 'file_id': 25, 'line_start': 1, 'line_end': 1, 'hash_value': 'c5e5b3e9148b8407d1c992ef777d9039', 'has_error': 'N', 'error_message': None, 'del_yn': 'N'}
2025-09-13 22:43:56,311 - SourceAnalyzer - DEBUG - logger.py:64 - Components upsert 시작: update (SQL_UPDATE)
2025-09-13 22:43:56,311 - SourceAnalyzer - DEBUG - logger.py:64 - 기존 레코드 확인 쿼리: 
                    SELECT component_id FROM components 
                    WHERE project_id = ? AND component_name = ? AND file_id = ?
                    
2025-09-13 22:43:56,312 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 파라미터: (1, 'update', 25)
2025-09-13 22:43:56,312 - SourceAnalyzer - DEBUG - logger.py:64 - 기존 레코드 조회 결과: <sqlite3.Row object at 0x00000257905C6B60>
2025-09-13 22:43:56,312 - SourceAnalyzer - DEBUG - logger.py:64 - UPDATE 쿼리: 
                        UPDATE components SET component_type = ?, parent_id = ?, layer = ?, line_start = ?, line_end = ?, hash_value = ?, has_error = ?, error_message = ?, del_yn = ?
                        WHERE component_id = ?
                        
2025-09-13 22:43:56,312 - SourceAnalyzer - DEBUG - logger.py:64 - UPDATE 파라미터: ['SQL_UPDATE', None, 'SQL', 1, 1, 'c5e5b3e9148b8407d1c992ef777d9039', 'N', None, 'N', 572]
2025-09-13 22:43:56,312 - SourceAnalyzer - DEBUG - logger.py:64 - UPDATE 실행 완료: component_id = 572
2025-09-13 22:43:56,312 - SourceAnalyzer - DEBUG - logger.py:64 - 컴포넌트 저장 완료: update (ID: 572)
2025-09-13 22:43:56,312 - SourceAnalyzer - DEBUG - logger.py:64 - 컴포넌트 저장 결과: component_id = 572
2025-09-13 22:43:56,312 - SourceAnalyzer - DEBUG - logger.py:64 - SQL Content 저장 시작: update (component_id: 572)
2025-09-13 22:43:56,312 - SourceAnalyzer - DEBUG - logger.py:64 - SQL Content 상대경로: src/main/resources/mybatis/mapper
2025-09-13 22:43:56,312 - SourceAnalyzer - WARNING - logger.py:72 - SQL Content 저장 중 예외 발생 (무시하고 계속 진행): update - 'sql_query'
2025-09-13 22:43:56,312 - SourceAnalyzer - DEBUG - logger.py:64 - SQL 쿼리 처리 완료: update
2025-09-13 22:43:56,312 - SourceAnalyzer - DEBUG - logger.py:64 - SQL 쿼리 처리 루프 시작: 12/12
2025-09-13 22:43:56,312 - SourceAnalyzer - DEBUG - logger.py:64 - SQL 쿼리 처리 시작: delete (delete)
2025-09-13 22:43:56,312 - SourceAnalyzer - DEBUG - logger.py:64 - GET XML ID 조회: D:\Analyzer\CreateMetaDb\projects\sampleSrc\src\main\resources\mybatis\mapper\MixedErrorMapper.xml -> src/main/resources/mybatis/mapper/MixedErrorMapper.xml
2025-09-13 22:43:56,312 - SourceAnalyzer - DEBUG - logger.py:64 - 메모리 매핑 테이블 키들: ['src/com/example/dynamicquery/UserMapper.xml', 'src/main/resources/mybatis/mapper/ImplicitJoinMapper.xml', 'src/main/resources/mybatis/mapper/ImplicitJoinTestMapper.xml', 'src/main/resources/mybatis/mapper/MixedErrorMapper.xml', 'src/main/resources/mybatis/mapper/ProductMapper.xml', 'src/main/resources/mybatis/mapper/UserMapper.xml']
2025-09-13 22:43:56,312 - SourceAnalyzer - DEBUG - logger.py:64 - 메모리에서 file_id 조회 성공: src/main/resources/mybatis/mapper/MixedErrorMapper.xml -> 25
2025-09-13 22:43:56,312 - SourceAnalyzer - DEBUG - logger.py:64 - 파일 ID 조회 성공: 25
2025-09-13 22:43:56,312 - SourceAnalyzer - DEBUG - logger.py:64 - 컴포넌트 저장 시도: delete (delete) -> SQL_DELETE
2025-09-13 22:43:56,312 - SourceAnalyzer - DEBUG - logger.py:64 - Upsert 실행: components
2025-09-13 22:43:56,312 - SourceAnalyzer - DEBUG - logger.py:64 - 데이터: {'project_id': 1, 'component_type': 'SQL_DELETE', 'component_name': 'delete', 'parent_id': None, 'layer': 'SQL', 'file_id': 25, 'line_start': 1, 'line_end': 1, 'hash_value': '56e00ee3951ef38bb7e951ff6fa0dfae', 'has_error': 'N', 'error_message': None, 'del_yn': 'N'}
2025-09-13 22:43:56,312 - SourceAnalyzer - DEBUG - logger.py:64 - Components upsert 시작: delete (SQL_DELETE)
2025-09-13 22:43:56,312 - SourceAnalyzer - DEBUG - logger.py:64 - 기존 레코드 확인 쿼리: 
                    SELECT component_id FROM components 
                    WHERE project_id = ? AND component_name = ? AND file_id = ?
                    
2025-09-13 22:43:56,312 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 파라미터: (1, 'delete', 25)
2025-09-13 22:43:56,312 - SourceAnalyzer - DEBUG - logger.py:64 - 기존 레코드 조회 결과: <sqlite3.Row object at 0x00000257905C58A0>
2025-09-13 22:43:56,312 - SourceAnalyzer - DEBUG - logger.py:64 - UPDATE 쿼리: 
                        UPDATE components SET component_type = ?, parent_id = ?, layer = ?, line_start = ?, line_end = ?, hash_value = ?, has_error = ?, error_message = ?, del_yn = ?
                        WHERE component_id = ?
                        
2025-09-13 22:43:56,312 - SourceAnalyzer - DEBUG - logger.py:64 - UPDATE 파라미터: ['SQL_DELETE', None, 'SQL', 1, 1, '56e00ee3951ef38bb7e951ff6fa0dfae', 'N', None, 'N', 573]
2025-09-13 22:43:56,312 - SourceAnalyzer - DEBUG - logger.py:64 - UPDATE 실행 완료: component_id = 573
2025-09-13 22:43:56,312 - SourceAnalyzer - DEBUG - logger.py:64 - 컴포넌트 저장 완료: delete (ID: 573)
2025-09-13 22:43:56,312 - SourceAnalyzer - DEBUG - logger.py:64 - 컴포넌트 저장 결과: component_id = 573
2025-09-13 22:43:56,313 - SourceAnalyzer - DEBUG - logger.py:64 - SQL Content 저장 시작: delete (component_id: 573)
2025-09-13 22:43:56,313 - SourceAnalyzer - DEBUG - logger.py:64 - SQL Content 상대경로: src/main/resources/mybatis/mapper
2025-09-13 22:43:56,313 - SourceAnalyzer - WARNING - logger.py:72 - SQL Content 저장 중 예외 발생 (무시하고 계속 진행): delete - 'sql_query'
2025-09-13 22:43:56,313 - SourceAnalyzer - DEBUG - logger.py:64 - SQL 쿼리 처리 완료: delete
2025-09-13 22:43:56,313 - SourceAnalyzer - INFO - logger.py:68 - === SQL 쿼리 처리 완료 ===
2025-09-13 22:43:56,313 - SourceAnalyzer - INFO - logger.py:68 - 처리된 쿼리 수: 12
2025-09-13 22:43:56,313 - SourceAnalyzer - INFO - logger.py:68 - 건너뜀 쿼리 수: 0
2025-09-13 22:43:56,313 - SourceAnalyzer - INFO - logger.py:68 - 컴포넌트 ID 매핑 크기: 12
2025-09-13 22:43:56,313 - SourceAnalyzer - INFO - logger.py:68 - SQL 컴포넌트 저장 완료: 12개 (건너뜀: 0개)
2025-09-13 22:43:56,313 - SourceAnalyzer - INFO - logger.py:68 - process_sql_queries 호출 후: result=True
2025-09-13 22:43:56,313 - SourceAnalyzer - INFO - logger.py:68 - SQL Content Processor 처리 결과: True
2025-09-13 22:43:56,313 - SourceAnalyzer - INFO - logger.py:68 - === XML 로딩 엔진: SQL 컴포넌트 저장 완료 ===
2025-09-13 22:43:56,313 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 실행 성공: 
                SELECT c.component_id 
          ...
2025-09-13 22:43:56,313 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 실행 성공: 
                SELECT c.component_id 
          ...
2025-09-13 22:43:56,313 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 실행 성공: 
                SELECT c.component_id 
          ...
2025-09-13 22:43:56,313 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 실행 성공: 
                SELECT c.component_id 
          ...
2025-09-13 22:43:56,313 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 실행 성공: 
                SELECT c.component_id 
          ...
2025-09-13 22:43:56,313 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 실행 성공: 
                SELECT c.component_id 
          ...
2025-09-13 22:43:56,313 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 실행 성공: 
                SELECT c.component_id 
          ...
2025-09-13 22:43:56,313 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 실행 성공: 
                SELECT c.component_id 
          ...
2025-09-13 22:43:56,314 - SourceAnalyzer - DEBUG - logger.py:64 - 배치 쿼리 실행 성공: 
            INSERT OR IGNORE INTO relationships (..., 처리된 행: 4
2025-09-13 22:43:56,314 - SourceAnalyzer - INFO - logger.py:68 - JOIN 관계 저장 완료: 4개
2025-09-13 22:43:56,314 - SourceAnalyzer - INFO - logger.py:68 - DOM 기반 파싱 시도: D:\Analyzer\CreateMetaDb\projects\sampleSrc\src\main\resources\mybatis\mapper\ProductMapper.xml
2025-09-13 22:43:56,314 - SourceAnalyzer - WARNING - logger.py:72 - DOM 파싱 실패, Fallback 실행: D:\Analyzer\CreateMetaDb\projects\sampleSrc\src\main\resources\mybatis\mapper\ProductMapper.xml - XmlParser._parse_with_dom() takes 2 positional arguments but 3 were given
2025-09-13 22:43:56,314 - SourceAnalyzer - WARNING - logger.py:72 - 데이터베이스 접근 실패: 'PathUtils' object has no attribute 'get_metadata_db_path'
2025-09-13 22:43:56,314 - SourceAnalyzer - WARNING - logger.py:72 - DOM 파싱 실패, Fallback 실행: D:\Analyzer\CreateMetaDb\projects\sampleSrc\src\main\resources\mybatis\mapper\ProductMapper.xml - XmlParser._parse_with_dom() takes 2 positional arguments but 3 were given
2025-09-13 22:43:56,315 - SourceAnalyzer - WARNING - logger.py:72 - 데이터베이스 접근 실패: 'PathUtils' object has no attribute 'get_metadata_db_path'
2025-09-13 22:43:56,315 - SourceAnalyzer - WARNING - logger.py:72 - DOM 파싱 실패, Fallback 실행: D:\Analyzer\CreateMetaDb\projects\sampleSrc\src\main\resources\mybatis\mapper\ProductMapper.xml - XmlParser._parse_with_dom() takes 2 positional arguments but 3 were given
2025-09-13 22:43:56,315 - SourceAnalyzer - WARNING - logger.py:72 - 데이터베이스 접근 실패: 'PathUtils' object has no attribute 'get_metadata_db_path'
2025-09-13 22:43:56,315 - SourceAnalyzer - WARNING - logger.py:72 - 데이터베이스 접근 실패: 'PathUtils' object has no attribute 'get_metadata_db_path'
2025-09-13 22:43:56,315 - SourceAnalyzer - WARNING - logger.py:72 - XML 파싱 에러 감지: D:\Analyzer\CreateMetaDb\projects\sampleSrc\src\main\resources\mybatis\mapper\ProductMapper.xml - XML 태그 불일치: 열림태그 1개, 닫힘태그 0개
2025-09-13 22:43:56,315 - SourceAnalyzer - WARNING - logger.py:72 - 데이터베이스 접근 실패: 'PathUtils' object has no attribute 'get_metadata_db_path'
2025-09-13 22:43:56,315 - SourceAnalyzer - WARNING - logger.py:72 - 데이터베이스 접근 실패: 'PathUtils' object has no attribute 'get_metadata_db_path'
2025-09-13 22:43:56,315 - SourceAnalyzer - WARNING - logger.py:72 - 데이터베이스 접근 실패: 'PathUtils' object has no attribute 'get_metadata_db_path'
2025-09-13 22:43:56,315 - SourceAnalyzer - WARNING - logger.py:72 - 데이터베이스 접근 실패: 'PathUtils' object has no attribute 'get_metadata_db_path'
2025-09-13 22:43:56,315 - SourceAnalyzer - WARNING - logger.py:72 - 데이터베이스 접근 실패: 'PathUtils' object has no attribute 'get_metadata_db_path'
2025-09-13 22:43:56,315 - SourceAnalyzer - WARNING - logger.py:72 - 데이터베이스 접근 실패: 'PathUtils' object has no attribute 'get_metadata_db_path'
2025-09-13 22:43:56,315 - SourceAnalyzer - WARNING - logger.py:72 - 데이터베이스 접근 실패: 'PathUtils' object has no attribute 'get_metadata_db_path'
2025-09-13 22:43:56,316 - SourceAnalyzer - WARNING - logger.py:72 - 데이터베이스 접근 실패: 'PathUtils' object has no attribute 'get_metadata_db_path'
2025-09-13 22:43:56,316 - SourceAnalyzer - WARNING - logger.py:72 - DOM 파싱 실패, Fallback 실행: D:\Analyzer\CreateMetaDb\projects\sampleSrc\src\main\resources\mybatis\mapper\ProductMapper.xml - XmlParser._parse_with_dom() takes 2 positional arguments but 3 were given
2025-09-13 22:43:56,316 - SourceAnalyzer - WARNING - logger.py:72 - 데이터베이스 접근 실패: 'PathUtils' object has no attribute 'get_metadata_db_path'
2025-09-13 22:43:56,316 - SourceAnalyzer - WARNING - logger.py:72 - DOM 파싱 실패, Fallback 실행: D:\Analyzer\CreateMetaDb\projects\sampleSrc\src\main\resources\mybatis\mapper\ProductMapper.xml - XmlParser._parse_with_dom() takes 2 positional arguments but 3 were given
2025-09-13 22:43:56,316 - SourceAnalyzer - WARNING - logger.py:72 - 데이터베이스 접근 실패: 'PathUtils' object has no attribute 'get_metadata_db_path'
2025-09-13 22:43:56,316 - SourceAnalyzer - WARNING - logger.py:72 - DOM 파싱 실패, Fallback 실행: D:\Analyzer\CreateMetaDb\projects\sampleSrc\src\main\resources\mybatis\mapper\ProductMapper.xml - XmlParser._parse_with_dom() takes 2 positional arguments but 3 were given
2025-09-13 22:43:56,316 - SourceAnalyzer - WARNING - logger.py:72 - 데이터베이스 접근 실패: 'PathUtils' object has no attribute 'get_metadata_db_path'
2025-09-13 22:43:56,316 - SourceAnalyzer - WARNING - logger.py:72 - DOM 파싱 실패, Fallback 실행: D:\Analyzer\CreateMetaDb\projects\sampleSrc\src\main\resources\mybatis\mapper\ProductMapper.xml - XmlParser._parse_with_dom() takes 2 positional arguments but 3 were given
2025-09-13 22:43:56,316 - SourceAnalyzer - WARNING - logger.py:72 - 데이터베이스 접근 실패: 'PathUtils' object has no attribute 'get_metadata_db_path'
2025-09-13 22:43:56,316 - SourceAnalyzer - WARNING - logger.py:72 - DOM 파싱 실패, Fallback 실행: D:\Analyzer\CreateMetaDb\projects\sampleSrc\src\main\resources\mybatis\mapper\ProductMapper.xml - XmlParser._parse_with_dom() takes 2 positional arguments but 3 were given
2025-09-13 22:43:56,316 - SourceAnalyzer - WARNING - logger.py:72 - 데이터베이스 접근 실패: 'PathUtils' object has no attribute 'get_metadata_db_path'
2025-09-13 22:43:56,317 - SourceAnalyzer - WARNING - logger.py:72 - DOM 파싱 실패, Fallback 실행: D:\Analyzer\CreateMetaDb\projects\sampleSrc\src\main\resources\mybatis\mapper\ProductMapper.xml - XmlParser._parse_with_dom() takes 2 positional arguments but 3 were given
2025-09-13 22:43:56,317 - SourceAnalyzer - WARNING - logger.py:72 - 데이터베이스 접근 실패: 'PathUtils' object has no attribute 'get_metadata_db_path'
2025-09-13 22:43:56,317 - SourceAnalyzer - INFO - logger.py:68 - DOM 기반 파싱 성공: D:\Analyzer\CreateMetaDb\projects\sampleSrc\src\main\resources\mybatis\mapper\ProductMapper.xml
2025-09-13 22:43:56,317 - SourceAnalyzer - INFO - logger.py:68 - === XML 로딩 엔진: SQL 컴포넌트 저장 시작 ===
2025-09-13 22:43:56,317 - SourceAnalyzer - INFO - logger.py:68 - 전달받은 SQL 쿼리 수: 9개
2025-09-13 22:43:56,317 - SourceAnalyzer - INFO - logger.py:68 - XML에서 추출된 SQL 쿼리 타입별 통계: {'select': 5, 'insert': 1, 'update': 2, 'delete': 1}
2025-09-13 22:43:56,317 - SourceAnalyzer - INFO - logger.py:68 - 프로젝트 ID: 1
2025-09-13 22:43:56,317 - SourceAnalyzer - INFO - logger.py:68 - SQL Content Processor를 사용하여 처리 시작
2025-09-13 22:43:56,317 - SourceAnalyzer - INFO - logger.py:68 - process_sql_queries 호출 전: sql_queries=9, project_id=1
2025-09-13 22:43:56,317 - SourceAnalyzer - INFO - logger.py:68 - === SQL 쿼리 처리 시작 ===
2025-09-13 22:43:56,317 - SourceAnalyzer - INFO - logger.py:68 - 전달받은 SQL 쿼리 수: 9
2025-09-13 22:43:56,317 - SourceAnalyzer - INFO - logger.py:68 - 프로젝트 ID: 1
2025-09-13 22:43:56,317 - SourceAnalyzer - DEBUG - logger.py:64 - SQL 쿼리 리스트 검증 시작
2025-09-13 22:43:56,317 - SourceAnalyzer - DEBUG - logger.py:64 - SQL 쿼리 리스트 타입: <class 'list'>
2025-09-13 22:43:56,317 - SourceAnalyzer - DEBUG - logger.py:64 - SQL 쿼리 리스트 길이: 9
2025-09-13 22:43:56,317 - SourceAnalyzer - DEBUG - logger.py:64 - 첫 번째 쿼리: {'tag_name': 'select', 'query_id': 'selectProductById', 'query_type': 'select', 'sql_content': '\n        SELECT * FROM products WHERE product_id = #{productId}\n    ', 'file_path': 'D:\\Analyzer\\CreateMetaDb\\projects\\sampleSrc\\src\\main\\resources\\mybatis\\mapper\\ProductMapper.xml', 'line_start': 1, 'line_end': 1, 'hash_value': '6a4932643f328a9c50536ebc2f744a31'}
2025-09-13 22:43:56,317 - SourceAnalyzer - DEBUG - logger.py:64 - SQL 쿼리 리스트 검증 완료
2025-09-13 22:43:56,317 - SourceAnalyzer - DEBUG - logger.py:64 - SQL 쿼리 타입별 통계 시작
2025-09-13 22:43:56,317 - SourceAnalyzer - INFO - logger.py:68 - SQL 쿼리 타입별 통계: {'select': 5, 'insert': 1, 'update': 2, 'delete': 1}
2025-09-13 22:43:56,317 - SourceAnalyzer - DEBUG - logger.py:64 - SQL 쿼리 타입별 통계 완료
2025-09-13 22:43:56,318 - SourceAnalyzer - DEBUG - logger.py:64 - SQL 쿼리 리스트 크기: 9
2025-09-13 22:43:56,318 - SourceAnalyzer - DEBUG - logger.py:64 - SQL 쿼리 리스트 타입: <class 'list'>
2025-09-13 22:43:56,318 - SourceAnalyzer - DEBUG - logger.py:64 - 첫 번째 쿼리 정보: {'tag_name': 'select', 'query_id': 'selectProductById', 'query_type': 'select', 'sql_content': '\n        SELECT * FROM products WHERE product_id = #{productId}\n    ', 'file_path': 'D:\\Analyzer\\CreateMetaDb\\projects\\sampleSrc\\src\\main\\resources\\mybatis\\mapper\\ProductMapper.xml', 'line_start': 1, 'line_end': 1, 'hash_value': '6a4932643f328a9c50536ebc2f744a31'}
2025-09-13 22:43:56,318 - SourceAnalyzer - DEBUG - logger.py:64 - 모든 쿼리 정보: [{'tag_name': 'select', 'query_id': 'selectProductById', 'query_type': 'select', 'sql_content': '\n        SELECT * FROM products WHERE product_id = #{productId}\n    ', 'file_path': 'D:\\Analyzer\\CreateMetaDb\\projects\\sampleSrc\\src\\main\\resources\\mybatis\\mapper\\ProductMapper.xml', 'line_start': 1, 'line_end': 1, 'hash_value': '6a4932643f328a9c50536ebc2f744a31'}, {'tag_name': 'select', 'query_id': 'selectProductsByCondition', 'query_type': 'select', 'sql_content': '\n        SELECT * FROM products\n         \n             \n                AND product_name LIKE #{name}\n             \n             \n                AND category_id = #{category}\n             \n             \n                AND status = #{status}\n             \n             \n                AND del_yn = #{delYn}\n             \n         \n        ORDER BY created_date DESC\n    ', 'file_path': 'D:\\Analyzer\\CreateMetaDb\\projects\\sampleSrc\\src\\main\\resources\\mybatis\\mapper\\ProductMapper.xml', 'line_start': 1, 'line_end': 1, 'hash_value': '5820ef256c767a95019efc2b5dc0b0e0'}, {'tag_name': 'select', 'query_id': 'selectProductsByAdvancedCondition', 'query_type': 'select', 'sql_content': '\n        SELECT p.*, c.category_name, b.brand_name\n        FROM products p\n        LEFT JOIN categories c ON p.category_id = c.category_id\n        LEFT JOIN brands b ON p.brand_id = b.brand_id\n         \n             \n                AND p.category_id = #{categoryId}\n             \n             \n                AND p.brand_id = #{brandId}\n             \n             \n                AND p.price >= #{minPrice}\n             \n             \n                AND p.price <= #{maxPrice}\n             \n             \n                AND p.stock_quantity >= #{minStock}\n             \n             \n                AND p.stock_quantity <= #{maxStock}\n             \n             \n                AND p.status IN\n                 \n                    #{status}\n                 \n             \n         \n        ORDER BY p.created_date DESC\n    ', 'file_path': 'D:\\Analyzer\\CreateMetaDb\\projects\\sampleSrc\\src\\main\\resources\\mybatis\\mapper\\ProductMapper.xml', 'line_start': 1, 'line_end': 1, 'hash_value': '5e903ccff19ffe312d9fb5c657658f69'}, {'tag_name': 'select', 'query_id': 'selectProductsByCategory', 'query_type': 'select', 'sql_content': '\n        SELECT * FROM products \n        WHERE category_id = #{categoryId}\n        ORDER BY product_name\n    ', 'file_path': 'D:\\Analyzer\\CreateMetaDb\\projects\\sampleSrc\\src\\main\\resources\\mybatis\\mapper\\ProductMapper.xml', 'line_start': 1, 'line_end': 1, 'hash_value': '18067a5afc58523e14af0b23b11fdd2d'}, {'tag_name': 'select', 'query_id': 'countProductsByCondition', 'query_type': 'select', 'sql_content': '\n        SELECT COUNT(*)\n        FROM products\n         \n             \n                AND category_id = #{categoryId}\n             \n             \n                AND status = #{status}\n             \n             \n                AND price >= #{minPrice}\n             \n             \n                AND price <= #{maxPrice}\n             \n             \n                AND del_yn = #{delYn}\n             \n         \n    ', 'file_path': 'D:\\Analyzer\\CreateMetaDb\\projects\\sampleSrc\\src\\main\\resources\\mybatis\\mapper\\ProductMapper.xml', 'line_start': 1, 'line_end': 1, 'hash_value': '4447c11379408904008015c7a71655b0'}, {'tag_name': 'insert', 'query_id': 'insertProductDynamic', 'query_type': 'insert', 'sql_content': "\n        INSERT INTO products (\n             \n                 product_id, \n                 product_name, \n                 description, \n                 price, \n                 stock_quantity, \n                 status, \n                 category_id, \n                 brand_id, \n                 supplier_id, \n                 warehouse_id, \n                created_date,\n                updated_date,\n                del_yn\n             \n        ) VALUES (\n             \n                 #{productId}, \n                 #{productName}, \n                 #{description}, \n                 #{price}, \n                 #{stockQuantity}, \n                 #{status}, \n                 #{categoryId}, \n                 #{brandId}, \n                 #{supplierId}, \n                 #{warehouseId}, \n                SYSDATE,\n                SYSDATE,\n                'N'\n             \n        )\n    ", 'file_path': 'D:\\Analyzer\\CreateMetaDb\\projects\\sampleSrc\\src\\main\\resources\\mybatis\\mapper\\ProductMapper.xml', 'line_start': 1, 'line_end': 1, 'hash_value': '2ab61e1ba16bcaa37978b67b6281478d'}, {'tag_name': 'update', 'query_id': 'updateProductStock', 'query_type': 'update', 'sql_content': '\n        UPDATE products \n        SET stock_quantity = stock_quantity + #{quantity},\n            updated_date = SYSDATE\n        WHERE product_id = #{productId}\n    ', 'file_path': 'D:\\Analyzer\\CreateMetaDb\\projects\\sampleSrc\\src\\main\\resources\\mybatis\\mapper\\ProductMapper.xml', 'line_start': 1, 'line_end': 1, 'hash_value': 'a670a6b13e17b9ee87fbe7546a0781b8'}, {'tag_name': 'update', 'query_id': 'updateProductDynamic', 'query_type': 'update', 'sql_content': '\n        UPDATE products\n         \n             \n                product_name = #{productName},\n             \n             \n                description = #{description},\n             \n             \n                price = #{price},\n             \n             \n                stock_quantity = #{stockQuantity},\n             \n             \n                status = #{status},\n             \n             \n                category_id = #{categoryId},\n             \n             \n                brand_id = #{brandId},\n             \n             \n                supplier_id = #{supplierId},\n             \n             \n                warehouse_id = #{warehouseId},\n             \n            updated_date = SYSDATE\n         \n        WHERE product_id = #{productId}\n    ', 'file_path': 'D:\\Analyzer\\CreateMetaDb\\projects\\sampleSrc\\src\\main\\resources\\mybatis\\mapper\\ProductMapper.xml', 'line_start': 1, 'line_end': 1, 'hash_value': 'd8067faba458446b7f85b0727caf33ac'}, {'tag_name': 'delete', 'query_id': 'deleteProductsByCondition', 'query_type': 'delete', 'sql_content': "\n        UPDATE products \n        SET del_yn = 'Y', updated_date = SYSDATE\n         \n             \n                AND status = #{status}\n             \n             \n                AND category_id = #{categoryId}\n             \n             \n                AND created_date < TO_DATE(#{beforeDate}, 'YYYY-MM-DD')\n             \n         \n    ", 'file_path': 'D:\\Analyzer\\CreateMetaDb\\projects\\sampleSrc\\src\\main\\resources\\mybatis\\mapper\\ProductMapper.xml', 'line_start': 1, 'line_end': 1, 'hash_value': 'dacc8e8efda64187deefa2524e66621f'}]
2025-09-13 22:43:56,318 - SourceAnalyzer - DEBUG - logger.py:64 - SQL 쿼리 처리 루프 시작 전
2025-09-13 22:43:56,318 - SourceAnalyzer - DEBUG - logger.py:64 - SQL 쿼리 처리 루프 시작: 1/9
2025-09-13 22:43:56,318 - SourceAnalyzer - DEBUG - logger.py:64 - SQL 쿼리 처리 시작: selectProductById (select)
2025-09-13 22:43:56,318 - SourceAnalyzer - DEBUG - logger.py:64 - GET XML ID 조회: D:\Analyzer\CreateMetaDb\projects\sampleSrc\src\main\resources\mybatis\mapper\ProductMapper.xml -> src/main/resources/mybatis/mapper/ProductMapper.xml
2025-09-13 22:43:56,318 - SourceAnalyzer - DEBUG - logger.py:64 - 메모리 매핑 테이블 키들: ['src/com/example/dynamicquery/UserMapper.xml', 'src/main/resources/mybatis/mapper/ImplicitJoinMapper.xml', 'src/main/resources/mybatis/mapper/ImplicitJoinTestMapper.xml', 'src/main/resources/mybatis/mapper/MixedErrorMapper.xml', 'src/main/resources/mybatis/mapper/ProductMapper.xml', 'src/main/resources/mybatis/mapper/UserMapper.xml']
2025-09-13 22:43:56,318 - SourceAnalyzer - DEBUG - logger.py:64 - 메모리에서 file_id 조회 성공: src/main/resources/mybatis/mapper/ProductMapper.xml -> 26
2025-09-13 22:43:56,318 - SourceAnalyzer - DEBUG - logger.py:64 - 파일 ID 조회 성공: 26
2025-09-13 22:43:56,318 - SourceAnalyzer - DEBUG - logger.py:64 - 컴포넌트 저장 시도: selectProductById (select) -> SQL_SELECT
2025-09-13 22:43:56,318 - SourceAnalyzer - DEBUG - logger.py:64 - Upsert 실행: components
2025-09-13 22:43:56,318 - SourceAnalyzer - DEBUG - logger.py:64 - 데이터: {'project_id': 1, 'component_type': 'SQL_SELECT', 'component_name': 'selectProductById', 'parent_id': None, 'layer': 'SQL', 'file_id': 26, 'line_start': 1, 'line_end': 1, 'hash_value': '6a4932643f328a9c50536ebc2f744a31', 'has_error': 'N', 'error_message': None, 'del_yn': 'N'}
2025-09-13 22:43:56,318 - SourceAnalyzer - DEBUG - logger.py:64 - Components upsert 시작: selectProductById (SQL_SELECT)
2025-09-13 22:43:56,318 - SourceAnalyzer - DEBUG - logger.py:64 - 기존 레코드 확인 쿼리: 
                    SELECT component_id FROM components 
                    WHERE project_id = ? AND component_name = ? AND file_id = ?
                    
2025-09-13 22:43:56,318 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 파라미터: (1, 'selectProductById', 26)
2025-09-13 22:43:56,318 - SourceAnalyzer - DEBUG - logger.py:64 - 기존 레코드 조회 결과: <sqlite3.Row object at 0x00000257905C6770>
2025-09-13 22:43:56,318 - SourceAnalyzer - DEBUG - logger.py:64 - UPDATE 쿼리: 
                        UPDATE components SET component_type = ?, parent_id = ?, layer = ?, line_start = ?, line_end = ?, hash_value = ?, has_error = ?, error_message = ?, del_yn = ?
                        WHERE component_id = ?
                        
2025-09-13 22:43:56,318 - SourceAnalyzer - DEBUG - logger.py:64 - UPDATE 파라미터: ['SQL_SELECT', None, 'SQL', 1, 1, '6a4932643f328a9c50536ebc2f744a31', 'N', None, 'N', 582]
2025-09-13 22:43:56,318 - SourceAnalyzer - DEBUG - logger.py:64 - UPDATE 실행 완료: component_id = 582
2025-09-13 22:43:56,318 - SourceAnalyzer - DEBUG - logger.py:64 - 컴포넌트 저장 완료: selectProductById (ID: 582)
2025-09-13 22:43:56,318 - SourceAnalyzer - DEBUG - logger.py:64 - 컴포넌트 저장 결과: component_id = 582
2025-09-13 22:43:56,318 - SourceAnalyzer - DEBUG - logger.py:64 - SQL Content 저장 시작: selectProductById (component_id: 582)
2025-09-13 22:43:56,318 - SourceAnalyzer - DEBUG - logger.py:64 - SQL Content 상대경로: src/main/resources/mybatis/mapper
2025-09-13 22:43:56,318 - SourceAnalyzer - WARNING - logger.py:72 - SQL Content 저장 중 예외 발생 (무시하고 계속 진행): selectProductById - 'sql_query'
2025-09-13 22:43:56,319 - SourceAnalyzer - DEBUG - logger.py:64 - SQL 쿼리 처리 완료: selectProductById
2025-09-13 22:43:56,319 - SourceAnalyzer - DEBUG - logger.py:64 - SQL 쿼리 처리 루프 시작: 2/9
2025-09-13 22:43:56,319 - SourceAnalyzer - DEBUG - logger.py:64 - SQL 쿼리 처리 시작: selectProductsByCondition (select)
2025-09-13 22:43:56,319 - SourceAnalyzer - DEBUG - logger.py:64 - GET XML ID 조회: D:\Analyzer\CreateMetaDb\projects\sampleSrc\src\main\resources\mybatis\mapper\ProductMapper.xml -> src/main/resources/mybatis/mapper/ProductMapper.xml
2025-09-13 22:43:56,319 - SourceAnalyzer - DEBUG - logger.py:64 - 메모리 매핑 테이블 키들: ['src/com/example/dynamicquery/UserMapper.xml', 'src/main/resources/mybatis/mapper/ImplicitJoinMapper.xml', 'src/main/resources/mybatis/mapper/ImplicitJoinTestMapper.xml', 'src/main/resources/mybatis/mapper/MixedErrorMapper.xml', 'src/main/resources/mybatis/mapper/ProductMapper.xml', 'src/main/resources/mybatis/mapper/UserMapper.xml']
2025-09-13 22:43:56,319 - SourceAnalyzer - DEBUG - logger.py:64 - 메모리에서 file_id 조회 성공: src/main/resources/mybatis/mapper/ProductMapper.xml -> 26
2025-09-13 22:43:56,319 - SourceAnalyzer - DEBUG - logger.py:64 - 파일 ID 조회 성공: 26
2025-09-13 22:43:56,319 - SourceAnalyzer - DEBUG - logger.py:64 - 컴포넌트 저장 시도: selectProductsByCondition (select) -> SQL_SELECT
2025-09-13 22:43:56,319 - SourceAnalyzer - DEBUG - logger.py:64 - Upsert 실행: components
2025-09-13 22:43:56,319 - SourceAnalyzer - DEBUG - logger.py:64 - 데이터: {'project_id': 1, 'component_type': 'SQL_SELECT', 'component_name': 'selectProductsByCondition', 'parent_id': None, 'layer': 'SQL', 'file_id': 26, 'line_start': 1, 'line_end': 1, 'hash_value': '5820ef256c767a95019efc2b5dc0b0e0', 'has_error': 'N', 'error_message': None, 'del_yn': 'N'}
2025-09-13 22:43:56,319 - SourceAnalyzer - DEBUG - logger.py:64 - Components upsert 시작: selectProductsByCondition (SQL_SELECT)
2025-09-13 22:43:56,319 - SourceAnalyzer - DEBUG - logger.py:64 - 기존 레코드 확인 쿼리: 
                    SELECT component_id FROM components 
                    WHERE project_id = ? AND component_name = ? AND file_id = ?
                    
2025-09-13 22:43:56,319 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 파라미터: (1, 'selectProductsByCondition', 26)
2025-09-13 22:43:56,319 - SourceAnalyzer - DEBUG - logger.py:64 - 기존 레코드 조회 결과: <sqlite3.Row object at 0x00000257905C6770>
2025-09-13 22:43:56,319 - SourceAnalyzer - DEBUG - logger.py:64 - UPDATE 쿼리: 
                        UPDATE components SET component_type = ?, parent_id = ?, layer = ?, line_start = ?, line_end = ?, hash_value = ?, has_error = ?, error_message = ?, del_yn = ?
                        WHERE component_id = ?
                        
2025-09-13 22:43:56,319 - SourceAnalyzer - DEBUG - logger.py:64 - UPDATE 파라미터: ['SQL_SELECT', None, 'SQL', 1, 1, '5820ef256c767a95019efc2b5dc0b0e0', 'N', None, 'N', 583]
2025-09-13 22:43:56,319 - SourceAnalyzer - DEBUG - logger.py:64 - UPDATE 실행 완료: component_id = 583
2025-09-13 22:43:56,319 - SourceAnalyzer - DEBUG - logger.py:64 - 컴포넌트 저장 완료: selectProductsByCondition (ID: 583)
2025-09-13 22:43:56,319 - SourceAnalyzer - DEBUG - logger.py:64 - 컴포넌트 저장 결과: component_id = 583
2025-09-13 22:43:56,319 - SourceAnalyzer - DEBUG - logger.py:64 - SQL Content 저장 시작: selectProductsByCondition (component_id: 583)
2025-09-13 22:43:56,319 - SourceAnalyzer - DEBUG - logger.py:64 - SQL Content 상대경로: src/main/resources/mybatis/mapper
2025-09-13 22:43:56,319 - SourceAnalyzer - WARNING - logger.py:72 - SQL Content 저장 중 예외 발생 (무시하고 계속 진행): selectProductsByCondition - 'sql_query'
2025-09-13 22:43:56,319 - SourceAnalyzer - DEBUG - logger.py:64 - SQL 쿼리 처리 완료: selectProductsByCondition
2025-09-13 22:43:56,319 - SourceAnalyzer - DEBUG - logger.py:64 - SQL 쿼리 처리 루프 시작: 3/9
2025-09-13 22:43:56,319 - SourceAnalyzer - DEBUG - logger.py:64 - SQL 쿼리 처리 시작: selectProductsByAdvancedCondition (select)
2025-09-13 22:43:56,319 - SourceAnalyzer - DEBUG - logger.py:64 - GET XML ID 조회: D:\Analyzer\CreateMetaDb\projects\sampleSrc\src\main\resources\mybatis\mapper\ProductMapper.xml -> src/main/resources/mybatis/mapper/ProductMapper.xml
2025-09-13 22:43:56,319 - SourceAnalyzer - DEBUG - logger.py:64 - 메모리 매핑 테이블 키들: ['src/com/example/dynamicquery/UserMapper.xml', 'src/main/resources/mybatis/mapper/ImplicitJoinMapper.xml', 'src/main/resources/mybatis/mapper/ImplicitJoinTestMapper.xml', 'src/main/resources/mybatis/mapper/MixedErrorMapper.xml', 'src/main/resources/mybatis/mapper/ProductMapper.xml', 'src/main/resources/mybatis/mapper/UserMapper.xml']
2025-09-13 22:43:56,319 - SourceAnalyzer - DEBUG - logger.py:64 - 메모리에서 file_id 조회 성공: src/main/resources/mybatis/mapper/ProductMapper.xml -> 26
2025-09-13 22:43:56,320 - SourceAnalyzer - DEBUG - logger.py:64 - 파일 ID 조회 성공: 26
2025-09-13 22:43:56,320 - SourceAnalyzer - DEBUG - logger.py:64 - 컴포넌트 저장 시도: selectProductsByAdvancedCondition (select) -> SQL_SELECT
2025-09-13 22:43:56,320 - SourceAnalyzer - DEBUG - logger.py:64 - Upsert 실행: components
2025-09-13 22:43:56,320 - SourceAnalyzer - DEBUG - logger.py:64 - 데이터: {'project_id': 1, 'component_type': 'SQL_SELECT', 'component_name': 'selectProductsByAdvancedCondition', 'parent_id': None, 'layer': 'SQL', 'file_id': 26, 'line_start': 1, 'line_end': 1, 'hash_value': '5e903ccff19ffe312d9fb5c657658f69', 'has_error': 'N', 'error_message': None, 'del_yn': 'N'}
2025-09-13 22:43:56,320 - SourceAnalyzer - DEBUG - logger.py:64 - Components upsert 시작: selectProductsByAdvancedCondition (SQL_SELECT)
2025-09-13 22:43:56,320 - SourceAnalyzer - DEBUG - logger.py:64 - 기존 레코드 확인 쿼리: 
                    SELECT component_id FROM components 
                    WHERE project_id = ? AND component_name = ? AND file_id = ?
                    
2025-09-13 22:43:56,320 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 파라미터: (1, 'selectProductsByAdvancedCondition', 26)
2025-09-13 22:43:56,320 - SourceAnalyzer - DEBUG - logger.py:64 - 기존 레코드 조회 결과: <sqlite3.Row object at 0x00000257905C6C80>
2025-09-13 22:43:56,320 - SourceAnalyzer - DEBUG - logger.py:64 - UPDATE 쿼리: 
                        UPDATE components SET component_type = ?, parent_id = ?, layer = ?, line_start = ?, line_end = ?, hash_value = ?, has_error = ?, error_message = ?, del_yn = ?
                        WHERE component_id = ?
                        
2025-09-13 22:43:56,320 - SourceAnalyzer - DEBUG - logger.py:64 - UPDATE 파라미터: ['SQL_SELECT', None, 'SQL', 1, 1, '5e903ccff19ffe312d9fb5c657658f69', 'N', None, 'N', 584]
2025-09-13 22:43:56,320 - SourceAnalyzer - DEBUG - logger.py:64 - UPDATE 실행 완료: component_id = 584
2025-09-13 22:43:56,320 - SourceAnalyzer - DEBUG - logger.py:64 - 컴포넌트 저장 완료: selectProductsByAdvancedCondition (ID: 584)
2025-09-13 22:43:56,320 - SourceAnalyzer - DEBUG - logger.py:64 - 컴포넌트 저장 결과: component_id = 584
2025-09-13 22:43:56,320 - SourceAnalyzer - DEBUG - logger.py:64 - SQL Content 저장 시작: selectProductsByAdvancedCondition (component_id: 584)
2025-09-13 22:43:56,320 - SourceAnalyzer - DEBUG - logger.py:64 - SQL Content 상대경로: src/main/resources/mybatis/mapper
2025-09-13 22:43:56,320 - SourceAnalyzer - WARNING - logger.py:72 - SQL Content 저장 중 예외 발생 (무시하고 계속 진행): selectProductsByAdvancedCondition - 'sql_query'
2025-09-13 22:43:56,320 - SourceAnalyzer - DEBUG - logger.py:64 - SQL 쿼리 처리 완료: selectProductsByAdvancedCondition
2025-09-13 22:43:56,320 - SourceAnalyzer - DEBUG - logger.py:64 - SQL 쿼리 처리 루프 시작: 4/9
2025-09-13 22:43:56,320 - SourceAnalyzer - DEBUG - logger.py:64 - SQL 쿼리 처리 시작: selectProductsByCategory (select)
2025-09-13 22:43:56,320 - SourceAnalyzer - DEBUG - logger.py:64 - GET XML ID 조회: D:\Analyzer\CreateMetaDb\projects\sampleSrc\src\main\resources\mybatis\mapper\ProductMapper.xml -> src/main/resources/mybatis/mapper/ProductMapper.xml
2025-09-13 22:43:56,320 - SourceAnalyzer - DEBUG - logger.py:64 - 메모리 매핑 테이블 키들: ['src/com/example/dynamicquery/UserMapper.xml', 'src/main/resources/mybatis/mapper/ImplicitJoinMapper.xml', 'src/main/resources/mybatis/mapper/ImplicitJoinTestMapper.xml', 'src/main/resources/mybatis/mapper/MixedErrorMapper.xml', 'src/main/resources/mybatis/mapper/ProductMapper.xml', 'src/main/resources/mybatis/mapper/UserMapper.xml']
2025-09-13 22:43:56,320 - SourceAnalyzer - DEBUG - logger.py:64 - 메모리에서 file_id 조회 성공: src/main/resources/mybatis/mapper/ProductMapper.xml -> 26
2025-09-13 22:43:56,320 - SourceAnalyzer - DEBUG - logger.py:64 - 파일 ID 조회 성공: 26
2025-09-13 22:43:56,320 - SourceAnalyzer - DEBUG - logger.py:64 - 컴포넌트 저장 시도: selectProductsByCategory (select) -> SQL_SELECT
2025-09-13 22:43:56,320 - SourceAnalyzer - DEBUG - logger.py:64 - Upsert 실행: components
2025-09-13 22:43:56,320 - SourceAnalyzer - DEBUG - logger.py:64 - 데이터: {'project_id': 1, 'component_type': 'SQL_SELECT', 'component_name': 'selectProductsByCategory', 'parent_id': None, 'layer': 'SQL', 'file_id': 26, 'line_start': 1, 'line_end': 1, 'hash_value': '18067a5afc58523e14af0b23b11fdd2d', 'has_error': 'N', 'error_message': None, 'del_yn': 'N'}
2025-09-13 22:43:56,320 - SourceAnalyzer - DEBUG - logger.py:64 - Components upsert 시작: selectProductsByCategory (SQL_SELECT)
2025-09-13 22:43:56,320 - SourceAnalyzer - DEBUG - logger.py:64 - 기존 레코드 확인 쿼리: 
                    SELECT component_id FROM components 
                    WHERE project_id = ? AND component_name = ? AND file_id = ?
                    
2025-09-13 22:43:56,320 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 파라미터: (1, 'selectProductsByCategory', 26)
2025-09-13 22:43:56,320 - SourceAnalyzer - DEBUG - logger.py:64 - 기존 레코드 조회 결과: <sqlite3.Row object at 0x00000257905C6E30>
2025-09-13 22:43:56,321 - SourceAnalyzer - DEBUG - logger.py:64 - UPDATE 쿼리: 
                        UPDATE components SET component_type = ?, parent_id = ?, layer = ?, line_start = ?, line_end = ?, hash_value = ?, has_error = ?, error_message = ?, del_yn = ?
                        WHERE component_id = ?
                        
2025-09-13 22:43:56,321 - SourceAnalyzer - DEBUG - logger.py:64 - UPDATE 파라미터: ['SQL_SELECT', None, 'SQL', 1, 1, '18067a5afc58523e14af0b23b11fdd2d', 'N', None, 'N', 585]
2025-09-13 22:43:56,321 - SourceAnalyzer - DEBUG - logger.py:64 - UPDATE 실행 완료: component_id = 585
2025-09-13 22:43:56,321 - SourceAnalyzer - DEBUG - logger.py:64 - 컴포넌트 저장 완료: selectProductsByCategory (ID: 585)
2025-09-13 22:43:56,321 - SourceAnalyzer - DEBUG - logger.py:64 - 컴포넌트 저장 결과: component_id = 585
2025-09-13 22:43:56,321 - SourceAnalyzer - DEBUG - logger.py:64 - SQL Content 저장 시작: selectProductsByCategory (component_id: 585)
2025-09-13 22:43:56,321 - SourceAnalyzer - DEBUG - logger.py:64 - SQL Content 상대경로: src/main/resources/mybatis/mapper
2025-09-13 22:43:56,321 - SourceAnalyzer - WARNING - logger.py:72 - SQL Content 저장 중 예외 발생 (무시하고 계속 진행): selectProductsByCategory - 'sql_query'
2025-09-13 22:43:56,321 - SourceAnalyzer - DEBUG - logger.py:64 - SQL 쿼리 처리 완료: selectProductsByCategory
2025-09-13 22:43:56,321 - SourceAnalyzer - DEBUG - logger.py:64 - SQL 쿼리 처리 루프 시작: 5/9
2025-09-13 22:43:56,321 - SourceAnalyzer - DEBUG - logger.py:64 - SQL 쿼리 처리 시작: countProductsByCondition (select)
2025-09-13 22:43:56,321 - SourceAnalyzer - DEBUG - logger.py:64 - GET XML ID 조회: D:\Analyzer\CreateMetaDb\projects\sampleSrc\src\main\resources\mybatis\mapper\ProductMapper.xml -> src/main/resources/mybatis/mapper/ProductMapper.xml
2025-09-13 22:43:56,321 - SourceAnalyzer - DEBUG - logger.py:64 - 메모리 매핑 테이블 키들: ['src/com/example/dynamicquery/UserMapper.xml', 'src/main/resources/mybatis/mapper/ImplicitJoinMapper.xml', 'src/main/resources/mybatis/mapper/ImplicitJoinTestMapper.xml', 'src/main/resources/mybatis/mapper/MixedErrorMapper.xml', 'src/main/resources/mybatis/mapper/ProductMapper.xml', 'src/main/resources/mybatis/mapper/UserMapper.xml']
2025-09-13 22:43:56,321 - SourceAnalyzer - DEBUG - logger.py:64 - 메모리에서 file_id 조회 성공: src/main/resources/mybatis/mapper/ProductMapper.xml -> 26
2025-09-13 22:43:56,321 - SourceAnalyzer - DEBUG - logger.py:64 - 파일 ID 조회 성공: 26
2025-09-13 22:43:56,321 - SourceAnalyzer - DEBUG - logger.py:64 - 컴포넌트 저장 시도: countProductsByCondition (select) -> SQL_SELECT
2025-09-13 22:43:56,321 - SourceAnalyzer - DEBUG - logger.py:64 - Upsert 실행: components
2025-09-13 22:43:56,321 - SourceAnalyzer - DEBUG - logger.py:64 - 데이터: {'project_id': 1, 'component_type': 'SQL_SELECT', 'component_name': 'countProductsByCondition', 'parent_id': None, 'layer': 'SQL', 'file_id': 26, 'line_start': 1, 'line_end': 1, 'hash_value': '4447c11379408904008015c7a71655b0', 'has_error': 'N', 'error_message': None, 'del_yn': 'N'}
2025-09-13 22:43:56,321 - SourceAnalyzer - DEBUG - logger.py:64 - Components upsert 시작: countProductsByCondition (SQL_SELECT)
2025-09-13 22:43:56,321 - SourceAnalyzer - DEBUG - logger.py:64 - 기존 레코드 확인 쿼리: 
                    SELECT component_id FROM components 
                    WHERE project_id = ? AND component_name = ? AND file_id = ?
                    
2025-09-13 22:43:56,321 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 파라미터: (1, 'countProductsByCondition', 26)
2025-09-13 22:43:56,321 - SourceAnalyzer - DEBUG - logger.py:64 - 기존 레코드 조회 결과: <sqlite3.Row object at 0x00000257905C6230>
2025-09-13 22:43:56,321 - SourceAnalyzer - DEBUG - logger.py:64 - UPDATE 쿼리: 
                        UPDATE components SET component_type = ?, parent_id = ?, layer = ?, line_start = ?, line_end = ?, hash_value = ?, has_error = ?, error_message = ?, del_yn = ?
                        WHERE component_id = ?
                        
2025-09-13 22:43:56,321 - SourceAnalyzer - DEBUG - logger.py:64 - UPDATE 파라미터: ['SQL_SELECT', None, 'SQL', 1, 1, '4447c11379408904008015c7a71655b0', 'N', None, 'N', 590]
2025-09-13 22:43:56,321 - SourceAnalyzer - DEBUG - logger.py:64 - UPDATE 실행 완료: component_id = 590
2025-09-13 22:43:56,321 - SourceAnalyzer - DEBUG - logger.py:64 - 컴포넌트 저장 완료: countProductsByCondition (ID: 590)
2025-09-13 22:43:56,321 - SourceAnalyzer - DEBUG - logger.py:64 - 컴포넌트 저장 결과: component_id = 590
2025-09-13 22:43:56,321 - SourceAnalyzer - DEBUG - logger.py:64 - SQL Content 저장 시작: countProductsByCondition (component_id: 590)
2025-09-13 22:43:56,321 - SourceAnalyzer - DEBUG - logger.py:64 - SQL Content 상대경로: src/main/resources/mybatis/mapper
2025-09-13 22:43:56,322 - SourceAnalyzer - WARNING - logger.py:72 - SQL Content 저장 중 예외 발생 (무시하고 계속 진행): countProductsByCondition - 'sql_query'
2025-09-13 22:43:56,322 - SourceAnalyzer - DEBUG - logger.py:64 - SQL 쿼리 처리 완료: countProductsByCondition
2025-09-13 22:43:56,322 - SourceAnalyzer - DEBUG - logger.py:64 - SQL 쿼리 처리 루프 시작: 6/9
2025-09-13 22:43:56,322 - SourceAnalyzer - DEBUG - logger.py:64 - SQL 쿼리 처리 시작: insertProductDynamic (insert)
2025-09-13 22:43:56,322 - SourceAnalyzer - DEBUG - logger.py:64 - GET XML ID 조회: D:\Analyzer\CreateMetaDb\projects\sampleSrc\src\main\resources\mybatis\mapper\ProductMapper.xml -> src/main/resources/mybatis/mapper/ProductMapper.xml
2025-09-13 22:43:56,322 - SourceAnalyzer - DEBUG - logger.py:64 - 메모리 매핑 테이블 키들: ['src/com/example/dynamicquery/UserMapper.xml', 'src/main/resources/mybatis/mapper/ImplicitJoinMapper.xml', 'src/main/resources/mybatis/mapper/ImplicitJoinTestMapper.xml', 'src/main/resources/mybatis/mapper/MixedErrorMapper.xml', 'src/main/resources/mybatis/mapper/ProductMapper.xml', 'src/main/resources/mybatis/mapper/UserMapper.xml']
2025-09-13 22:43:56,322 - SourceAnalyzer - DEBUG - logger.py:64 - 메모리에서 file_id 조회 성공: src/main/resources/mybatis/mapper/ProductMapper.xml -> 26
2025-09-13 22:43:56,322 - SourceAnalyzer - DEBUG - logger.py:64 - 파일 ID 조회 성공: 26
2025-09-13 22:43:56,322 - SourceAnalyzer - DEBUG - logger.py:64 - 컴포넌트 저장 시도: insertProductDynamic (insert) -> SQL_INSERT
2025-09-13 22:43:56,322 - SourceAnalyzer - DEBUG - logger.py:64 - Upsert 실행: components
2025-09-13 22:43:56,322 - SourceAnalyzer - DEBUG - logger.py:64 - 데이터: {'project_id': 1, 'component_type': 'SQL_INSERT', 'component_name': 'insertProductDynamic', 'parent_id': None, 'layer': 'SQL', 'file_id': 26, 'line_start': 1, 'line_end': 1, 'hash_value': '2ab61e1ba16bcaa37978b67b6281478d', 'has_error': 'N', 'error_message': None, 'del_yn': 'N'}
2025-09-13 22:43:56,322 - SourceAnalyzer - DEBUG - logger.py:64 - Components upsert 시작: insertProductDynamic (SQL_INSERT)
2025-09-13 22:43:56,322 - SourceAnalyzer - DEBUG - logger.py:64 - 기존 레코드 확인 쿼리: 
                    SELECT component_id FROM components 
                    WHERE project_id = ? AND component_name = ? AND file_id = ?
                    
2025-09-13 22:43:56,322 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 파라미터: (1, 'insertProductDynamic', 26)
2025-09-13 22:43:56,322 - SourceAnalyzer - DEBUG - logger.py:64 - 기존 레코드 조회 결과: <sqlite3.Row object at 0x00000257905C5C90>
2025-09-13 22:43:56,322 - SourceAnalyzer - DEBUG - logger.py:64 - UPDATE 쿼리: 
                        UPDATE components SET component_type = ?, parent_id = ?, layer = ?, line_start = ?, line_end = ?, hash_value = ?, has_error = ?, error_message = ?, del_yn = ?
                        WHERE component_id = ?
                        
2025-09-13 22:43:56,322 - SourceAnalyzer - DEBUG - logger.py:64 - UPDATE 파라미터: ['SQL_INSERT', None, 'SQL', 1, 1, '2ab61e1ba16bcaa37978b67b6281478d', 'N', None, 'N', 588]
2025-09-13 22:43:56,322 - SourceAnalyzer - DEBUG - logger.py:64 - UPDATE 실행 완료: component_id = 588
2025-09-13 22:43:56,322 - SourceAnalyzer - DEBUG - logger.py:64 - 컴포넌트 저장 완료: insertProductDynamic (ID: 588)
2025-09-13 22:43:56,322 - SourceAnalyzer - DEBUG - logger.py:64 - 컴포넌트 저장 결과: component_id = 588
2025-09-13 22:43:56,322 - SourceAnalyzer - DEBUG - logger.py:64 - SQL Content 저장 시작: insertProductDynamic (component_id: 588)
2025-09-13 22:43:56,322 - SourceAnalyzer - DEBUG - logger.py:64 - SQL Content 상대경로: src/main/resources/mybatis/mapper
2025-09-13 22:43:56,322 - SourceAnalyzer - WARNING - logger.py:72 - SQL Content 저장 중 예외 발생 (무시하고 계속 진행): insertProductDynamic - 'sql_query'
2025-09-13 22:43:56,322 - SourceAnalyzer - DEBUG - logger.py:64 - SQL 쿼리 처리 완료: insertProductDynamic
2025-09-13 22:43:56,322 - SourceAnalyzer - DEBUG - logger.py:64 - SQL 쿼리 처리 루프 시작: 7/9
2025-09-13 22:43:56,322 - SourceAnalyzer - DEBUG - logger.py:64 - SQL 쿼리 처리 시작: updateProductStock (update)
2025-09-13 22:43:56,322 - SourceAnalyzer - DEBUG - logger.py:64 - GET XML ID 조회: D:\Analyzer\CreateMetaDb\projects\sampleSrc\src\main\resources\mybatis\mapper\ProductMapper.xml -> src/main/resources/mybatis/mapper/ProductMapper.xml
2025-09-13 22:43:56,322 - SourceAnalyzer - DEBUG - logger.py:64 - 메모리 매핑 테이블 키들: ['src/com/example/dynamicquery/UserMapper.xml', 'src/main/resources/mybatis/mapper/ImplicitJoinMapper.xml', 'src/main/resources/mybatis/mapper/ImplicitJoinTestMapper.xml', 'src/main/resources/mybatis/mapper/MixedErrorMapper.xml', 'src/main/resources/mybatis/mapper/ProductMapper.xml', 'src/main/resources/mybatis/mapper/UserMapper.xml']
2025-09-13 22:43:56,323 - SourceAnalyzer - DEBUG - logger.py:64 - 메모리에서 file_id 조회 성공: src/main/resources/mybatis/mapper/ProductMapper.xml -> 26
2025-09-13 22:43:56,323 - SourceAnalyzer - DEBUG - logger.py:64 - 파일 ID 조회 성공: 26
2025-09-13 22:43:56,323 - SourceAnalyzer - DEBUG - logger.py:64 - 컴포넌트 저장 시도: updateProductStock (update) -> SQL_UPDATE
2025-09-13 22:43:56,323 - SourceAnalyzer - DEBUG - logger.py:64 - Upsert 실행: components
2025-09-13 22:43:56,323 - SourceAnalyzer - DEBUG - logger.py:64 - 데이터: {'project_id': 1, 'component_type': 'SQL_UPDATE', 'component_name': 'updateProductStock', 'parent_id': None, 'layer': 'SQL', 'file_id': 26, 'line_start': 1, 'line_end': 1, 'hash_value': 'a670a6b13e17b9ee87fbe7546a0781b8', 'has_error': 'N', 'error_message': None, 'del_yn': 'N'}
2025-09-13 22:43:56,323 - SourceAnalyzer - DEBUG - logger.py:64 - Components upsert 시작: updateProductStock (SQL_UPDATE)
2025-09-13 22:43:56,323 - SourceAnalyzer - DEBUG - logger.py:64 - 기존 레코드 확인 쿼리: 
                    SELECT component_id FROM components 
                    WHERE project_id = ? AND component_name = ? AND file_id = ?
                    
2025-09-13 22:43:56,323 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 파라미터: (1, 'updateProductStock', 26)
2025-09-13 22:43:56,323 - SourceAnalyzer - DEBUG - logger.py:64 - 기존 레코드 조회 결과: <sqlite3.Row object at 0x00000257905C6770>
2025-09-13 22:43:56,323 - SourceAnalyzer - DEBUG - logger.py:64 - UPDATE 쿼리: 
                        UPDATE components SET component_type = ?, parent_id = ?, layer = ?, line_start = ?, line_end = ?, hash_value = ?, has_error = ?, error_message = ?, del_yn = ?
                        WHERE component_id = ?
                        
2025-09-13 22:43:56,323 - SourceAnalyzer - DEBUG - logger.py:64 - UPDATE 파라미터: ['SQL_UPDATE', None, 'SQL', 1, 1, 'a670a6b13e17b9ee87fbe7546a0781b8', 'N', None, 'N', 586]
2025-09-13 22:43:56,323 - SourceAnalyzer - DEBUG - logger.py:64 - UPDATE 실행 완료: component_id = 586
2025-09-13 22:43:56,323 - SourceAnalyzer - DEBUG - logger.py:64 - 컴포넌트 저장 완료: updateProductStock (ID: 586)
2025-09-13 22:43:56,323 - SourceAnalyzer - DEBUG - logger.py:64 - 컴포넌트 저장 결과: component_id = 586
2025-09-13 22:43:56,323 - SourceAnalyzer - DEBUG - logger.py:64 - SQL Content 저장 시작: updateProductStock (component_id: 586)
2025-09-13 22:43:56,323 - SourceAnalyzer - DEBUG - logger.py:64 - SQL Content 상대경로: src/main/resources/mybatis/mapper
2025-09-13 22:43:56,323 - SourceAnalyzer - WARNING - logger.py:72 - SQL Content 저장 중 예외 발생 (무시하고 계속 진행): updateProductStock - 'sql_query'
2025-09-13 22:43:56,323 - SourceAnalyzer - DEBUG - logger.py:64 - SQL 쿼리 처리 완료: updateProductStock
2025-09-13 22:43:56,323 - SourceAnalyzer - DEBUG - logger.py:64 - SQL 쿼리 처리 루프 시작: 8/9
2025-09-13 22:43:56,323 - SourceAnalyzer - DEBUG - logger.py:64 - SQL 쿼리 처리 시작: updateProductDynamic (update)
2025-09-13 22:43:56,323 - SourceAnalyzer - DEBUG - logger.py:64 - GET XML ID 조회: D:\Analyzer\CreateMetaDb\projects\sampleSrc\src\main\resources\mybatis\mapper\ProductMapper.xml -> src/main/resources/mybatis/mapper/ProductMapper.xml
2025-09-13 22:43:56,323 - SourceAnalyzer - DEBUG - logger.py:64 - 메모리 매핑 테이블 키들: ['src/com/example/dynamicquery/UserMapper.xml', 'src/main/resources/mybatis/mapper/ImplicitJoinMapper.xml', 'src/main/resources/mybatis/mapper/ImplicitJoinTestMapper.xml', 'src/main/resources/mybatis/mapper/MixedErrorMapper.xml', 'src/main/resources/mybatis/mapper/ProductMapper.xml', 'src/main/resources/mybatis/mapper/UserMapper.xml']
2025-09-13 22:43:56,323 - SourceAnalyzer - DEBUG - logger.py:64 - 메모리에서 file_id 조회 성공: src/main/resources/mybatis/mapper/ProductMapper.xml -> 26
2025-09-13 22:43:56,323 - SourceAnalyzer - DEBUG - logger.py:64 - 파일 ID 조회 성공: 26
2025-09-13 22:43:56,323 - SourceAnalyzer - DEBUG - logger.py:64 - 컴포넌트 저장 시도: updateProductDynamic (update) -> SQL_UPDATE
2025-09-13 22:43:56,323 - SourceAnalyzer - DEBUG - logger.py:64 - Upsert 실행: components
2025-09-13 22:43:56,323 - SourceAnalyzer - DEBUG - logger.py:64 - 데이터: {'project_id': 1, 'component_type': 'SQL_UPDATE', 'component_name': 'updateProductDynamic', 'parent_id': None, 'layer': 'SQL', 'file_id': 26, 'line_start': 1, 'line_end': 1, 'hash_value': 'd8067faba458446b7f85b0727caf33ac', 'has_error': 'N', 'error_message': None, 'del_yn': 'N'}
2025-09-13 22:43:56,324 - SourceAnalyzer - DEBUG - logger.py:64 - Components upsert 시작: updateProductDynamic (SQL_UPDATE)
2025-09-13 22:43:56,324 - SourceAnalyzer - DEBUG - logger.py:64 - 기존 레코드 확인 쿼리: 
                    SELECT component_id FROM components 
                    WHERE project_id = ? AND component_name = ? AND file_id = ?
                    
2025-09-13 22:43:56,324 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 파라미터: (1, 'updateProductDynamic', 26)
2025-09-13 22:43:56,324 - SourceAnalyzer - DEBUG - logger.py:64 - 기존 레코드 조회 결과: <sqlite3.Row object at 0x00000257905C6C80>
2025-09-13 22:43:56,324 - SourceAnalyzer - DEBUG - logger.py:64 - UPDATE 쿼리: 
                        UPDATE components SET component_type = ?, parent_id = ?, layer = ?, line_start = ?, line_end = ?, hash_value = ?, has_error = ?, error_message = ?, del_yn = ?
                        WHERE component_id = ?
                        
2025-09-13 22:43:56,324 - SourceAnalyzer - DEBUG - logger.py:64 - UPDATE 파라미터: ['SQL_UPDATE', None, 'SQL', 1, 1, 'd8067faba458446b7f85b0727caf33ac', 'N', None, 'N', 587]
2025-09-13 22:43:56,324 - SourceAnalyzer - DEBUG - logger.py:64 - UPDATE 실행 완료: component_id = 587
2025-09-13 22:43:56,324 - SourceAnalyzer - DEBUG - logger.py:64 - 컴포넌트 저장 완료: updateProductDynamic (ID: 587)
2025-09-13 22:43:56,324 - SourceAnalyzer - DEBUG - logger.py:64 - 컴포넌트 저장 결과: component_id = 587
2025-09-13 22:43:56,324 - SourceAnalyzer - DEBUG - logger.py:64 - SQL Content 저장 시작: updateProductDynamic (component_id: 587)
2025-09-13 22:43:56,324 - SourceAnalyzer - DEBUG - logger.py:64 - SQL Content 상대경로: src/main/resources/mybatis/mapper
2025-09-13 22:43:56,324 - SourceAnalyzer - WARNING - logger.py:72 - SQL Content 저장 중 예외 발생 (무시하고 계속 진행): updateProductDynamic - 'sql_query'
2025-09-13 22:43:56,324 - SourceAnalyzer - DEBUG - logger.py:64 - SQL 쿼리 처리 완료: updateProductDynamic
2025-09-13 22:43:56,324 - SourceAnalyzer - DEBUG - logger.py:64 - SQL 쿼리 처리 루프 시작: 9/9
2025-09-13 22:43:56,324 - SourceAnalyzer - DEBUG - logger.py:64 - SQL 쿼리 처리 시작: deleteProductsByCondition (delete)
2025-09-13 22:43:56,324 - SourceAnalyzer - DEBUG - logger.py:64 - GET XML ID 조회: D:\Analyzer\CreateMetaDb\projects\sampleSrc\src\main\resources\mybatis\mapper\ProductMapper.xml -> src/main/resources/mybatis/mapper/ProductMapper.xml
2025-09-13 22:43:56,324 - SourceAnalyzer - DEBUG - logger.py:64 - 메모리 매핑 테이블 키들: ['src/com/example/dynamicquery/UserMapper.xml', 'src/main/resources/mybatis/mapper/ImplicitJoinMapper.xml', 'src/main/resources/mybatis/mapper/ImplicitJoinTestMapper.xml', 'src/main/resources/mybatis/mapper/MixedErrorMapper.xml', 'src/main/resources/mybatis/mapper/ProductMapper.xml', 'src/main/resources/mybatis/mapper/UserMapper.xml']
2025-09-13 22:43:56,324 - SourceAnalyzer - DEBUG - logger.py:64 - 메모리에서 file_id 조회 성공: src/main/resources/mybatis/mapper/ProductMapper.xml -> 26
2025-09-13 22:43:56,324 - SourceAnalyzer - DEBUG - logger.py:64 - 파일 ID 조회 성공: 26
2025-09-13 22:43:56,324 - SourceAnalyzer - DEBUG - logger.py:64 - 컴포넌트 저장 시도: deleteProductsByCondition (delete) -> SQL_DELETE
2025-09-13 22:43:56,324 - SourceAnalyzer - DEBUG - logger.py:64 - Upsert 실행: components
2025-09-13 22:43:56,324 - SourceAnalyzer - DEBUG - logger.py:64 - 데이터: {'project_id': 1, 'component_type': 'SQL_DELETE', 'component_name': 'deleteProductsByCondition', 'parent_id': None, 'layer': 'SQL', 'file_id': 26, 'line_start': 1, 'line_end': 1, 'hash_value': 'dacc8e8efda64187deefa2524e66621f', 'has_error': 'N', 'error_message': None, 'del_yn': 'N'}
2025-09-13 22:43:56,324 - SourceAnalyzer - DEBUG - logger.py:64 - Components upsert 시작: deleteProductsByCondition (SQL_DELETE)
2025-09-13 22:43:56,324 - SourceAnalyzer - DEBUG - logger.py:64 - 기존 레코드 확인 쿼리: 
                    SELECT component_id FROM components 
                    WHERE project_id = ? AND component_name = ? AND file_id = ?
                    
2025-09-13 22:43:56,324 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 파라미터: (1, 'deleteProductsByCondition', 26)
2025-09-13 22:43:56,325 - SourceAnalyzer - DEBUG - logger.py:64 - 기존 레코드 조회 결과: <sqlite3.Row object at 0x00000257905C6E30>
2025-09-13 22:43:56,325 - SourceAnalyzer - DEBUG - logger.py:64 - UPDATE 쿼리: 
                        UPDATE components SET component_type = ?, parent_id = ?, layer = ?, line_start = ?, line_end = ?, hash_value = ?, has_error = ?, error_message = ?, del_yn = ?
                        WHERE component_id = ?
                        
2025-09-13 22:43:56,325 - SourceAnalyzer - DEBUG - logger.py:64 - UPDATE 파라미터: ['SQL_DELETE', None, 'SQL', 1, 1, 'dacc8e8efda64187deefa2524e66621f', 'N', None, 'N', 589]
2025-09-13 22:43:56,325 - SourceAnalyzer - DEBUG - logger.py:64 - UPDATE 실행 완료: component_id = 589
2025-09-13 22:43:56,325 - SourceAnalyzer - DEBUG - logger.py:64 - 컴포넌트 저장 완료: deleteProductsByCondition (ID: 589)
2025-09-13 22:43:56,325 - SourceAnalyzer - DEBUG - logger.py:64 - 컴포넌트 저장 결과: component_id = 589
2025-09-13 22:43:56,325 - SourceAnalyzer - DEBUG - logger.py:64 - SQL Content 저장 시작: deleteProductsByCondition (component_id: 589)
2025-09-13 22:43:56,325 - SourceAnalyzer - DEBUG - logger.py:64 - SQL Content 상대경로: src/main/resources/mybatis/mapper
2025-09-13 22:43:56,325 - SourceAnalyzer - WARNING - logger.py:72 - SQL Content 저장 중 예외 발생 (무시하고 계속 진행): deleteProductsByCondition - 'sql_query'
2025-09-13 22:43:56,325 - SourceAnalyzer - DEBUG - logger.py:64 - SQL 쿼리 처리 완료: deleteProductsByCondition
2025-09-13 22:43:56,325 - SourceAnalyzer - INFO - logger.py:68 - === SQL 쿼리 처리 완료 ===
2025-09-13 22:43:56,325 - SourceAnalyzer - INFO - logger.py:68 - 처리된 쿼리 수: 9
2025-09-13 22:43:56,325 - SourceAnalyzer - INFO - logger.py:68 - 건너뜀 쿼리 수: 0
2025-09-13 22:43:56,325 - SourceAnalyzer - INFO - logger.py:68 - 컴포넌트 ID 매핑 크기: 9
2025-09-13 22:43:56,325 - SourceAnalyzer - INFO - logger.py:68 - SQL 컴포넌트 저장 완료: 9개 (건너뜀: 0개)
2025-09-13 22:43:56,325 - SourceAnalyzer - INFO - logger.py:68 - process_sql_queries 호출 후: result=True
2025-09-13 22:43:56,325 - SourceAnalyzer - INFO - logger.py:68 - SQL Content Processor 처리 결과: True
2025-09-13 22:43:56,325 - SourceAnalyzer - INFO - logger.py:68 - === XML 로딩 엔진: SQL 컴포넌트 저장 완료 ===
2025-09-13 22:43:56,325 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 실행 성공: 
                SELECT c.component_id 
          ...
2025-09-13 22:43:56,326 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 실행 성공: 
                SELECT c.component_id 
          ...
2025-09-13 22:43:56,326 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 실행 성공: 
                SELECT c.component_id 
          ...
2025-09-13 22:43:56,326 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 실행 성공: 
                SELECT c.component_id 
          ...
2025-09-13 22:43:56,326 - SourceAnalyzer - DEBUG - logger.py:64 - 배치 쿼리 실행 성공: 
            INSERT OR IGNORE INTO relationships (..., 처리된 행: 2
2025-09-13 22:43:56,326 - SourceAnalyzer - INFO - logger.py:68 - JOIN 관계 저장 완료: 2개
2025-09-13 22:43:56,326 - SourceAnalyzer - INFO - logger.py:68 - DOM 기반 파싱 시도: D:\Analyzer\CreateMetaDb\projects\sampleSrc\src\main\resources\mybatis\mapper\UserMapper.xml
2025-09-13 22:43:56,327 - SourceAnalyzer - WARNING - logger.py:72 - DOM 파싱 실패, Fallback 실행: D:\Analyzer\CreateMetaDb\projects\sampleSrc\src\main\resources\mybatis\mapper\UserMapper.xml - XmlParser._parse_with_dom() takes 2 positional arguments but 3 were given
2025-09-13 22:43:56,327 - SourceAnalyzer - WARNING - logger.py:72 - 데이터베이스 접근 실패: 'PathUtils' object has no attribute 'get_metadata_db_path'
2025-09-13 22:43:56,327 - SourceAnalyzer - WARNING - logger.py:72 - DOM 파싱 실패, Fallback 실행: D:\Analyzer\CreateMetaDb\projects\sampleSrc\src\main\resources\mybatis\mapper\UserMapper.xml - XmlParser._parse_with_dom() takes 2 positional arguments but 3 were given
2025-09-13 22:43:56,327 - SourceAnalyzer - WARNING - logger.py:72 - 데이터베이스 접근 실패: 'PathUtils' object has no attribute 'get_metadata_db_path'
2025-09-13 22:43:56,327 - SourceAnalyzer - WARNING - logger.py:72 - DOM 파싱 실패, Fallback 실행: D:\Analyzer\CreateMetaDb\projects\sampleSrc\src\main\resources\mybatis\mapper\UserMapper.xml - XmlParser._parse_with_dom() takes 2 positional arguments but 3 were given
2025-09-13 22:43:56,327 - SourceAnalyzer - WARNING - logger.py:72 - 데이터베이스 접근 실패: 'PathUtils' object has no attribute 'get_metadata_db_path'
2025-09-13 22:43:56,328 - SourceAnalyzer - WARNING - logger.py:72 - 데이터베이스 접근 실패: 'PathUtils' object has no attribute 'get_metadata_db_path'
2025-09-13 22:43:56,328 - SourceAnalyzer - WARNING - logger.py:72 - XML 파싱 에러 감지: D:\Analyzer\CreateMetaDb\projects\sampleSrc\src\main\resources\mybatis\mapper\UserMapper.xml - XML 태그 불일치: 열림태그 1개, 닫힘태그 0개
2025-09-13 22:43:56,328 - SourceAnalyzer - WARNING - logger.py:72 - 데이터베이스 접근 실패: 'PathUtils' object has no attribute 'get_metadata_db_path'
2025-09-13 22:43:56,328 - SourceAnalyzer - WARNING - logger.py:72 - 데이터베이스 접근 실패: 'PathUtils' object has no attribute 'get_metadata_db_path'
2025-09-13 22:43:56,328 - SourceAnalyzer - WARNING - logger.py:72 - 데이터베이스 접근 실패: 'PathUtils' object has no attribute 'get_metadata_db_path'
2025-09-13 22:43:56,328 - SourceAnalyzer - WARNING - logger.py:72 - 데이터베이스 접근 실패: 'PathUtils' object has no attribute 'get_metadata_db_path'
2025-09-13 22:43:56,328 - SourceAnalyzer - WARNING - logger.py:72 - DOM 파싱 실패, Fallback 실행: D:\Analyzer\CreateMetaDb\projects\sampleSrc\src\main\resources\mybatis\mapper\UserMapper.xml - XmlParser._parse_with_dom() takes 2 positional arguments but 3 were given
2025-09-13 22:43:56,328 - SourceAnalyzer - WARNING - logger.py:72 - 데이터베이스 접근 실패: 'PathUtils' object has no attribute 'get_metadata_db_path'
2025-09-13 22:43:56,328 - SourceAnalyzer - WARNING - logger.py:72 - DOM 파싱 실패, Fallback 실행: D:\Analyzer\CreateMetaDb\projects\sampleSrc\src\main\resources\mybatis\mapper\UserMapper.xml - XmlParser._parse_with_dom() takes 2 positional arguments but 3 were given
2025-09-13 22:43:56,328 - SourceAnalyzer - WARNING - logger.py:72 - 데이터베이스 접근 실패: 'PathUtils' object has no attribute 'get_metadata_db_path'
2025-09-13 22:43:56,328 - SourceAnalyzer - WARNING - logger.py:72 - DOM 파싱 실패, Fallback 실행: D:\Analyzer\CreateMetaDb\projects\sampleSrc\src\main\resources\mybatis\mapper\UserMapper.xml - XmlParser._parse_with_dom() takes 2 positional arguments but 3 were given
2025-09-13 22:43:56,329 - SourceAnalyzer - WARNING - logger.py:72 - 데이터베이스 접근 실패: 'PathUtils' object has no attribute 'get_metadata_db_path'
2025-09-13 22:43:56,329 - SourceAnalyzer - WARNING - logger.py:72 - DOM 파싱 실패, Fallback 실행: D:\Analyzer\CreateMetaDb\projects\sampleSrc\src\main\resources\mybatis\mapper\UserMapper.xml - XmlParser._parse_with_dom() takes 2 positional arguments but 3 were given
2025-09-13 22:43:56,329 - SourceAnalyzer - WARNING - logger.py:72 - 데이터베이스 접근 실패: 'PathUtils' object has no attribute 'get_metadata_db_path'
2025-09-13 22:43:56,329 - SourceAnalyzer - WARNING - logger.py:72 - DOM 파싱 실패, Fallback 실행: D:\Analyzer\CreateMetaDb\projects\sampleSrc\src\main\resources\mybatis\mapper\UserMapper.xml - XmlParser._parse_with_dom() takes 2 positional arguments but 3 were given
2025-09-13 22:43:56,329 - SourceAnalyzer - WARNING - logger.py:72 - 데이터베이스 접근 실패: 'PathUtils' object has no attribute 'get_metadata_db_path'
2025-09-13 22:43:56,330 - SourceAnalyzer - WARNING - logger.py:72 - DOM 파싱 실패, Fallback 실행: D:\Analyzer\CreateMetaDb\projects\sampleSrc\src\main\resources\mybatis\mapper\UserMapper.xml - XmlParser._parse_with_dom() takes 2 positional arguments but 3 were given
2025-09-13 22:43:56,330 - SourceAnalyzer - WARNING - logger.py:72 - 데이터베이스 접근 실패: 'PathUtils' object has no attribute 'get_metadata_db_path'
2025-09-13 22:43:56,330 - SourceAnalyzer - WARNING - logger.py:72 - 데이터베이스 접근 실패: 'PathUtils' object has no attribute 'get_metadata_db_path'
2025-09-13 22:43:56,330 - SourceAnalyzer - WARNING - logger.py:72 - 데이터베이스 접근 실패: 'PathUtils' object has no attribute 'get_metadata_db_path'
2025-09-13 22:43:56,330 - SourceAnalyzer - WARNING - logger.py:72 - 데이터베이스 접근 실패: 'PathUtils' object has no attribute 'get_metadata_db_path'
2025-09-13 22:43:56,330 - SourceAnalyzer - WARNING - logger.py:72 - 데이터베이스 접근 실패: 'PathUtils' object has no attribute 'get_metadata_db_path'
2025-09-13 22:43:56,330 - SourceAnalyzer - WARNING - logger.py:72 - DOM 파싱 실패, Fallback 실행: D:\Analyzer\CreateMetaDb\projects\sampleSrc\src\main\resources\mybatis\mapper\UserMapper.xml - XmlParser._parse_with_dom() takes 2 positional arguments but 3 were given
2025-09-13 22:43:56,330 - SourceAnalyzer - WARNING - logger.py:72 - 데이터베이스 접근 실패: 'PathUtils' object has no attribute 'get_metadata_db_path'
2025-09-13 22:43:56,330 - SourceAnalyzer - WARNING - logger.py:72 - DOM 파싱 실패, Fallback 실행: D:\Analyzer\CreateMetaDb\projects\sampleSrc\src\main\resources\mybatis\mapper\UserMapper.xml - XmlParser._parse_with_dom() takes 2 positional arguments but 3 were given
2025-09-13 22:43:56,331 - SourceAnalyzer - WARNING - logger.py:72 - 데이터베이스 접근 실패: 'PathUtils' object has no attribute 'get_metadata_db_path'
2025-09-13 22:43:56,331 - SourceAnalyzer - WARNING - logger.py:72 - 데이터베이스 접근 실패: 'PathUtils' object has no attribute 'get_metadata_db_path'
2025-09-13 22:43:56,331 - SourceAnalyzer - WARNING - logger.py:72 - 데이터베이스 접근 실패: 'PathUtils' object has no attribute 'get_metadata_db_path'
2025-09-13 22:43:56,331 - SourceAnalyzer - WARNING - logger.py:72 - 데이터베이스 접근 실패: 'PathUtils' object has no attribute 'get_metadata_db_path'
2025-09-13 22:43:56,331 - SourceAnalyzer - WARNING - logger.py:72 - 데이터베이스 접근 실패: 'PathUtils' object has no attribute 'get_metadata_db_path'
2025-09-13 22:43:56,331 - SourceAnalyzer - WARNING - logger.py:72 - DOM 파싱 실패, Fallback 실행: D:\Analyzer\CreateMetaDb\projects\sampleSrc\src\main\resources\mybatis\mapper\UserMapper.xml - XmlParser._parse_with_dom() takes 2 positional arguments but 3 were given
2025-09-13 22:43:56,331 - SourceAnalyzer - WARNING - logger.py:72 - 데이터베이스 접근 실패: 'PathUtils' object has no attribute 'get_metadata_db_path'
2025-09-13 22:43:56,331 - SourceAnalyzer - WARNING - logger.py:72 - 데이터베이스 접근 실패: 'PathUtils' object has no attribute 'get_metadata_db_path'
2025-09-13 22:43:56,331 - SourceAnalyzer - WARNING - logger.py:72 - 데이터베이스 접근 실패: 'PathUtils' object has no attribute 'get_metadata_db_path'
2025-09-13 22:43:56,331 - SourceAnalyzer - WARNING - logger.py:72 - 데이터베이스 접근 실패: 'PathUtils' object has no attribute 'get_metadata_db_path'
2025-09-13 22:43:56,331 - SourceAnalyzer - WARNING - logger.py:72 - 데이터베이스 접근 실패: 'PathUtils' object has no attribute 'get_metadata_db_path'
2025-09-13 22:43:56,332 - SourceAnalyzer - WARNING - logger.py:72 - 데이터베이스 접근 실패: 'PathUtils' object has no attribute 'get_metadata_db_path'
2025-09-13 22:43:56,332 - SourceAnalyzer - WARNING - logger.py:72 - 데이터베이스 접근 실패: 'PathUtils' object has no attribute 'get_metadata_db_path'
2025-09-13 22:43:56,332 - SourceAnalyzer - WARNING - logger.py:72 - 데이터베이스 접근 실패: 'PathUtils' object has no attribute 'get_metadata_db_path'
2025-09-13 22:43:56,332 - SourceAnalyzer - WARNING - logger.py:72 - 데이터베이스 접근 실패: 'PathUtils' object has no attribute 'get_metadata_db_path'
2025-09-13 22:43:56,332 - SourceAnalyzer - WARNING - logger.py:72 - DOM 파싱 실패, Fallback 실행: D:\Analyzer\CreateMetaDb\projects\sampleSrc\src\main\resources\mybatis\mapper\UserMapper.xml - XmlParser._parse_with_dom() takes 2 positional arguments but 3 were given
2025-09-13 22:43:56,332 - SourceAnalyzer - WARNING - logger.py:72 - 데이터베이스 접근 실패: 'PathUtils' object has no attribute 'get_metadata_db_path'
2025-09-13 22:43:56,332 - SourceAnalyzer - WARNING - logger.py:72 - 데이터베이스 접근 실패: 'PathUtils' object has no attribute 'get_metadata_db_path'
2025-09-13 22:43:56,332 - SourceAnalyzer - WARNING - logger.py:72 - 데이터베이스 접근 실패: 'PathUtils' object has no attribute 'get_metadata_db_path'
2025-09-13 22:43:56,332 - SourceAnalyzer - WARNING - logger.py:72 - 데이터베이스 접근 실패: 'PathUtils' object has no attribute 'get_metadata_db_path'
2025-09-13 22:43:56,332 - SourceAnalyzer - WARNING - logger.py:72 - 데이터베이스 접근 실패: 'PathUtils' object has no attribute 'get_metadata_db_path'
2025-09-13 22:43:56,332 - SourceAnalyzer - WARNING - logger.py:72 - DOM 파싱 실패, Fallback 실행: D:\Analyzer\CreateMetaDb\projects\sampleSrc\src\main\resources\mybatis\mapper\UserMapper.xml - XmlParser._parse_with_dom() takes 2 positional arguments but 3 were given
2025-09-13 22:43:56,332 - SourceAnalyzer - WARNING - logger.py:72 - 데이터베이스 접근 실패: 'PathUtils' object has no attribute 'get_metadata_db_path'
2025-09-13 22:43:56,332 - SourceAnalyzer - WARNING - logger.py:72 - 데이터베이스 접근 실패: 'PathUtils' object has no attribute 'get_metadata_db_path'
2025-09-13 22:43:56,333 - SourceAnalyzer - WARNING - logger.py:72 - 데이터베이스 접근 실패: 'PathUtils' object has no attribute 'get_metadata_db_path'
2025-09-13 22:43:56,333 - SourceAnalyzer - WARNING - logger.py:72 - 데이터베이스 접근 실패: 'PathUtils' object has no attribute 'get_metadata_db_path'
2025-09-13 22:43:56,333 - SourceAnalyzer - WARNING - logger.py:72 - 데이터베이스 접근 실패: 'PathUtils' object has no attribute 'get_metadata_db_path'
2025-09-13 22:43:56,333 - SourceAnalyzer - WARNING - logger.py:72 - DOM 파싱 실패, Fallback 실행: D:\Analyzer\CreateMetaDb\projects\sampleSrc\src\main\resources\mybatis\mapper\UserMapper.xml - XmlParser._parse_with_dom() takes 2 positional arguments but 3 were given
2025-09-13 22:43:56,333 - SourceAnalyzer - WARNING - logger.py:72 - 데이터베이스 접근 실패: 'PathUtils' object has no attribute 'get_metadata_db_path'
2025-09-13 22:43:56,333 - SourceAnalyzer - WARNING - logger.py:72 - 데이터베이스 접근 실패: 'PathUtils' object has no attribute 'get_metadata_db_path'
2025-09-13 22:43:56,333 - SourceAnalyzer - WARNING - logger.py:72 - 데이터베이스 접근 실패: 'PathUtils' object has no attribute 'get_metadata_db_path'
2025-09-13 22:43:56,333 - SourceAnalyzer - WARNING - logger.py:72 - 데이터베이스 접근 실패: 'PathUtils' object has no attribute 'get_metadata_db_path'
2025-09-13 22:43:56,333 - SourceAnalyzer - WARNING - logger.py:72 - 데이터베이스 접근 실패: 'PathUtils' object has no attribute 'get_metadata_db_path'
2025-09-13 22:43:56,333 - SourceAnalyzer - WARNING - logger.py:72 - DOM 파싱 실패, Fallback 실행: D:\Analyzer\CreateMetaDb\projects\sampleSrc\src\main\resources\mybatis\mapper\UserMapper.xml - XmlParser._parse_with_dom() takes 2 positional arguments but 3 were given
2025-09-13 22:43:56,333 - SourceAnalyzer - WARNING - logger.py:72 - 데이터베이스 접근 실패: 'PathUtils' object has no attribute 'get_metadata_db_path'
2025-09-13 22:43:56,333 - SourceAnalyzer - WARNING - logger.py:72 - DOM 파싱 실패, Fallback 실행: D:\Analyzer\CreateMetaDb\projects\sampleSrc\src\main\resources\mybatis\mapper\UserMapper.xml - XmlParser._parse_with_dom() takes 2 positional arguments but 3 were given
2025-09-13 22:43:56,333 - SourceAnalyzer - WARNING - logger.py:72 - 데이터베이스 접근 실패: 'PathUtils' object has no attribute 'get_metadata_db_path'
2025-09-13 22:43:56,333 - SourceAnalyzer - WARNING - logger.py:72 - DOM 파싱 실패, Fallback 실행: D:\Analyzer\CreateMetaDb\projects\sampleSrc\src\main\resources\mybatis\mapper\UserMapper.xml - XmlParser._parse_with_dom() takes 2 positional arguments but 3 were given
2025-09-13 22:43:56,334 - SourceAnalyzer - WARNING - logger.py:72 - 데이터베이스 접근 실패: 'PathUtils' object has no attribute 'get_metadata_db_path'
2025-09-13 22:43:56,334 - SourceAnalyzer - WARNING - logger.py:72 - DOM 파싱 실패, Fallback 실행: D:\Analyzer\CreateMetaDb\projects\sampleSrc\src\main\resources\mybatis\mapper\UserMapper.xml - XmlParser._parse_with_dom() takes 2 positional arguments but 3 were given
2025-09-13 22:43:56,334 - SourceAnalyzer - WARNING - logger.py:72 - 데이터베이스 접근 실패: 'PathUtils' object has no attribute 'get_metadata_db_path'
2025-09-13 22:43:56,334 - SourceAnalyzer - WARNING - logger.py:72 - DOM 파싱 실패, Fallback 실행: D:\Analyzer\CreateMetaDb\projects\sampleSrc\src\main\resources\mybatis\mapper\UserMapper.xml - XmlParser._parse_with_dom() takes 2 positional arguments but 3 were given
2025-09-13 22:43:56,334 - SourceAnalyzer - WARNING - logger.py:72 - 데이터베이스 접근 실패: 'PathUtils' object has no attribute 'get_metadata_db_path'
2025-09-13 22:43:56,334 - SourceAnalyzer - INFO - logger.py:68 - DOM 기반 파싱 성공: D:\Analyzer\CreateMetaDb\projects\sampleSrc\src\main\resources\mybatis\mapper\UserMapper.xml
2025-09-13 22:43:56,334 - SourceAnalyzer - INFO - logger.py:68 - === XML 로딩 엔진: SQL 컴포넌트 저장 시작 ===
2025-09-13 22:43:56,334 - SourceAnalyzer - INFO - logger.py:68 - 전달받은 SQL 쿼리 수: 20개
2025-09-13 22:43:56,334 - SourceAnalyzer - INFO - logger.py:68 - XML에서 추출된 SQL 쿼리 타입별 통계: {'select': 15, 'insert': 2, 'update': 2, 'delete': 1}
2025-09-13 22:43:56,334 - SourceAnalyzer - INFO - logger.py:68 - 프로젝트 ID: 1
2025-09-13 22:43:56,334 - SourceAnalyzer - INFO - logger.py:68 - SQL Content Processor를 사용하여 처리 시작
2025-09-13 22:43:56,334 - SourceAnalyzer - INFO - logger.py:68 - process_sql_queries 호출 전: sql_queries=20, project_id=1
2025-09-13 22:43:56,334 - SourceAnalyzer - INFO - logger.py:68 - === SQL 쿼리 처리 시작 ===
2025-09-13 22:43:56,334 - SourceAnalyzer - INFO - logger.py:68 - 전달받은 SQL 쿼리 수: 20
2025-09-13 22:43:56,334 - SourceAnalyzer - INFO - logger.py:68 - 프로젝트 ID: 1
2025-09-13 22:43:56,335 - SourceAnalyzer - DEBUG - logger.py:64 - SQL 쿼리 리스트 검증 시작
2025-09-13 22:43:56,335 - SourceAnalyzer - DEBUG - logger.py:64 - SQL 쿼리 리스트 타입: <class 'list'>
2025-09-13 22:43:56,335 - SourceAnalyzer - DEBUG - logger.py:64 - SQL 쿼리 리스트 길이: 20
2025-09-13 22:43:56,335 - SourceAnalyzer - DEBUG - logger.py:64 - 첫 번째 쿼리: {'tag_name': 'select', 'query_id': 'selectUserById', 'query_type': 'select', 'sql_content': '\n        SELECT * FROM users WHERE id = #{id}\n    ', 'file_path': 'D:\\Analyzer\\CreateMetaDb\\projects\\sampleSrc\\src\\main\\resources\\mybatis\\mapper\\UserMapper.xml', 'line_start': 1, 'line_end': 1, 'hash_value': 'd7e6d6ba0dfdfeac586535a7f75b9731'}
2025-09-13 22:43:56,335 - SourceAnalyzer - DEBUG - logger.py:64 - SQL 쿼리 리스트 검증 완료
2025-09-13 22:43:56,335 - SourceAnalyzer - DEBUG - logger.py:64 - SQL 쿼리 타입별 통계 시작
2025-09-13 22:43:56,335 - SourceAnalyzer - INFO - logger.py:68 - SQL 쿼리 타입별 통계: {'select': 15, 'insert': 2, 'update': 2, 'delete': 1}
2025-09-13 22:43:56,335 - SourceAnalyzer - DEBUG - logger.py:64 - SQL 쿼리 타입별 통계 완료
2025-09-13 22:43:56,335 - SourceAnalyzer - DEBUG - logger.py:64 - SQL 쿼리 리스트 크기: 20
2025-09-13 22:43:56,335 - SourceAnalyzer - DEBUG - logger.py:64 - SQL 쿼리 리스트 타입: <class 'list'>
2025-09-13 22:43:56,335 - SourceAnalyzer - DEBUG - logger.py:64 - 첫 번째 쿼리 정보: {'tag_name': 'select', 'query_id': 'selectUserById', 'query_type': 'select', 'sql_content': '\n        SELECT * FROM users WHERE id = #{id}\n    ', 'file_path': 'D:\\Analyzer\\CreateMetaDb\\projects\\sampleSrc\\src\\main\\resources\\mybatis\\mapper\\UserMapper.xml', 'line_start': 1, 'line_end': 1, 'hash_value': 'd7e6d6ba0dfdfeac586535a7f75b9731'}
2025-09-13 22:43:56,335 - SourceAnalyzer - DEBUG - logger.py:64 - 모든 쿼리 정보: [{'tag_name': 'select', 'query_id': 'selectUserById', 'query_type': 'select', 'sql_content': '\n        SELECT * FROM users WHERE id = #{id}\n    ', 'file_path': 'D:\\Analyzer\\CreateMetaDb\\projects\\sampleSrc\\src\\main\\resources\\mybatis\\mapper\\UserMapper.xml', 'line_start': 1, 'line_end': 1, 'hash_value': 'd7e6d6ba0dfdfeac586535a7f75b9731'}, {'tag_name': 'select', 'query_id': 'selectUsersByCondition', 'query_type': 'select', 'sql_content': '\n        SELECT * FROM users\n         \n             \n                AND name LIKE #{name}\n             \n             \n                AND email LIKE #{email}\n             \n             \n                AND status = #{status}\n             \n         \n        ORDER BY created_date DESC\n    ', 'file_path': 'D:\\Analyzer\\CreateMetaDb\\projects\\sampleSrc\\src\\main\\resources\\mybatis\\mapper\\UserMapper.xml', 'line_start': 1, 'line_end': 1, 'hash_value': 'ecf7ccb35b920d87c98b8b3e41af5b68'}, {'tag_name': 'select', 'query_id': 'selectUsersByAdvancedCondition', 'query_type': 'select', 'sql_content': "\n        SELECT u.*, ut.type_name\n        FROM users u\n        LEFT JOIN user_types ut ON u.user_type = ut.type_code\n         \n             \n                AND u.user_type = #{userType}\n             \n             \n                AND u.age >= #{minAge}\n             \n             \n                AND u.age <= #{maxAge}\n             \n             \n                AND u.created_date >= TO_DATE(#{startDate}, 'YYYY-MM-DD')\n             \n             \n                AND u.created_date <= TO_DATE(#{endDate}, 'YYYY-MM-DD')\n             \n             \n                AND u.status IN\n                 \n                    #{status}\n                 \n             \n         \n        ORDER BY u.created_date DESC\n    ", 'file_path': 'D:\\Analyzer\\CreateMetaDb\\projects\\sampleSrc\\src\\main\\resources\\mybatis\\mapper\\UserMapper.xml', 'line_start': 1, 'line_end': 1, 'hash_value': '474e4bcefb6534d97bf488b3ebac934e'}, {'tag_name': 'select', 'query_id': 'selectUsersByType', 'query_type': 'select', 'sql_content': '\n        SELECT * FROM users \n        WHERE user_type = #{type}\n        ORDER BY name\n    ', 'file_path': 'D:\\Analyzer\\CreateMetaDb\\projects\\sampleSrc\\src\\main\\resources\\mybatis\\mapper\\UserMapper.xml', 'line_start': 1, 'line_end': 1, 'hash_value': '54d2accd33d2d0e73500c229f3d7aa48'}, {'tag_name': 'select', 'query_id': 'countUsersByCondition', 'query_type': 'select', 'sql_content': '\n        SELECT COUNT(*)\n        FROM users\n         \n             \n                AND user_type = #{userType}\n             \n             \n                AND status = #{status}\n             \n             \n                AND age >= #{minAge}\n             \n             \n                AND age <= #{maxAge}\n             \n         \n    ', 'file_path': 'D:\\Analyzer\\CreateMetaDb\\projects\\sampleSrc\\src\\main\\resources\\mybatis\\mapper\\UserMapper.xml', 'line_start': 1, 'line_end': 1, 'hash_value': '2d5b765855ec023f746fc0aa1fa9f7a0'}, {'tag_name': 'select', 'query_id': 'getUserStatistics', 'query_type': 'select', 'sql_content': "\n        SELECT \n            COUNT(*) as total_users,\n            COUNT(CASE WHEN status = 'ACTIVE' THEN 1 END) as active_users,\n            COUNT(CASE WHEN status = 'INACTIVE' THEN 1 END) as inactive_users,\n            COUNT(CASE WHEN user_type = 'ADMIN' THEN 1 END) as admin_users,\n            COUNT(CASE WHEN user_type = 'PREMIUM' THEN 1 END) as premium_users,\n            AVG(age) as average_age,\n            MIN(age) as min_age,\n            MAX(age) as max_age,\n            COUNT(CASE WHEN created_date >= TRUNC(SYSDATE - 30) THEN 1 END) as new_users_last_30_days,\n            COUNT(CASE WHEN updated_date >= TRUNC(SYSDATE - 7) THEN 1 END) as updated_users_last_7_days\n        FROM users\n         \n             \n                AND user_type = #{userType}\n             \n             \n                AND status = #{status}\n             \n             \n                AND created_date >= TO_DATE(#{startDate}, 'YYYY-MM-DD')\n             \n             \n                AND created_date <= TO_DATE(#{endDate}, 'YYYY-MM-DD')\n             \n         \n    ", 'file_path': 'D:\\Analyzer\\CreateMetaDb\\projects\\sampleSrc\\src\\main\\resources\\mybatis\\mapper\\UserMapper.xml', 'line_start': 1, 'line_end': 1, 'hash_value': 'd0f8f3c60919b3c7665f21461e143ddf'}, {'tag_name': 'select', 'query_id': 'getUserAgeDistribution', 'query_type': 'select', 'sql_content': "\n        SELECT \n            CASE \n                WHEN age < 20 THEN '10대'\n                WHEN age < 30 THEN '20대'\n                WHEN age < 40 THEN '30대'\n                WHEN age < 50 THEN '40대'\n                WHEN age < 60 THEN '50대'\n                ELSE '60대 이상'\n            END as age_group,\n            COUNT(*) as user_count,\n            ROUND(COUNT(*) * 100.0 / (SELECT COUNT(*) FROM users), 2) as percentage\n        FROM users\n         \n            age IS NOT NULL\n             \n                AND status = #{status}\n             \n         \n        GROUP BY \n            CASE \n                WHEN age < 20 THEN '10대'\n                WHEN age < 30 THEN '20대'\n                WHEN age < 40 THEN '30대'\n                WHEN age < 50 THEN '40대'\n                WHEN age < 60 THEN '50대'\n                ELSE '60대 이상'\n            END\n        ORDER BY \n            CASE \n                WHEN age < 20 THEN 1\n                WHEN age < 30 THEN 2\n                WHEN age < 40 THEN 3\n                WHEN age < 50 THEN 4\n                WHEN age < 60 THEN 5\n                ELSE 6\n            END\n    ", 'file_path': 'D:\\Analyzer\\CreateMetaDb\\projects\\sampleSrc\\src\\main\\resources\\mybatis\\mapper\\UserMapper.xml', 'line_start': 1, 'line_end': 1, 'hash_value': '86534b900f3ff5c4c3935335b1a68dc5'}, {'tag_name': 'select', 'query_id': 'getUserActivityAnalysis', 'query_type': 'select', 'sql_content': "\n        SELECT \n            u.user_id,\n            u.username,\n            u.name,\n            u.status,\n            u.user_type,\n            u.created_date,\n            u.updated_date,\n            DATEDIFF(day, u.created_date, SYSDATE) as account_age_days,\n            DATEDIFF(day, u.updated_date, SYSDATE) as days_since_last_update,\n            CASE \n                WHEN u.updated_date IS NULL THEN 'Never Updated'\n                WHEN DATEDIFF(day, u.updated_date, SYSDATE) <= 7 THEN 'Active'\n                WHEN DATEDIFF(day, u.updated_date, SYSDATE) <= 30 THEN 'Moderate'\n                ELSE 'Inactive'\n            END as activity_level\n        FROM users u\n         \n             \n                AND u.user_type = #{userType}\n             \n             \n                AND u.status = #{status}\n             \n             \n                AND CASE \n                    WHEN u.updated_date IS NULL THEN 'Never Updated'\n                    WHEN DATEDIFF(day, u.updated_date, SYSDATE) <= 7 THEN 'Active'\n                    WHEN DATEDIFF(day, u.updated_date, SYSDATE) <= 30 THEN 'Moderate'\n                    ELSE 'Inactive'\n                END = #{activityLevel}\n             \n         \n        ORDER BY u.updated_date DESC NULLS LAST\n    ", 'file_path': 'D:\\Analyzer\\CreateMetaDb\\projects\\sampleSrc\\src\\main\\resources\\mybatis\\mapper\\UserMapper.xml', 'line_start': 1, 'line_end': 1, 'hash_value': '84cedac45f22b63747ce01c5da813398'}, {'tag_name': 'select', 'query_id': 'searchUsersAdvanced', 'query_type': 'select', 'sql_content': "\n        SELECT \n            u.id,\n            u.username,\n            u.email,\n            u.password,\n            u.name,\n            u.age,\n            u.status,\n            u.user_type,\n            u.phone,\n            u.address,\n            u.created_date,\n            u.updated_date,\n            ut.type_name,\n            ut.description as type_description\n        FROM users u\n        LEFT JOIN user_types ut ON u.user_type = ut.type_code\n         \n             \n                AND (\n                    UPPER(u.username) LIKE UPPER('%' || #{searchText} || '%')\n                    OR UPPER(u.name) LIKE UPPER('%' || #{searchText} || '%')\n                    OR UPPER(u.email) LIKE UPPER('%' || #{searchText} || '%')\n                )\n             \n             \n                AND u.user_type IN\n                 \n                    #{type}\n                 \n             \n             \n                AND u.status IN\n                 \n                    #{status}\n                 \n             \n             \n                AND u.age BETWEEN #{ageRange.minAge} AND #{ageRange.maxAge}\n             \n             \n                AND u.created_date BETWEEN \n                    TO_DATE(#{dateRange.startDate}, 'YYYY-MM-DD') \n                    AND TO_DATE(#{dateRange.endDate}, 'YYYY-MM-DD')\n             \n             \n                 \n                     \n                        AND u.phone IS NOT NULL AND u.phone != ''\n                     \n                     \n                        AND (u.phone IS NULL OR u.phone = '')\n                     \n                 \n             \n             \n                 \n                     \n                        AND u.address IS NOT NULL AND u.address != ''\n                     \n                     \n                        AND (u.address IS NULL OR u.address = '')\n                     \n                 \n             \n         \n         \n             \n                 \n                     \n                        ORDER BY u.name\n                         DESC \n                     \n                     \n                        ORDER BY u.age\n                         DESC \n                     \n                     \n                        ORDER BY u.created_date\n                         DESC \n                     \n                     \n                        ORDER BY u.updated_date\n                         DESC \n                     \n                     \n                        ORDER BY u.created_date DESC\n                     \n                 \n             \n             \n                ORDER BY u.created_date DESC\n             \n         \n         \n            LIMIT #{limit} OFFSET #{offset}\n         \n    ", 'file_path': 'D:\\Analyzer\\CreateMetaDb\\projects\\sampleSrc\\src\\main\\resources\\mybatis\\mapper\\UserMapper.xml', 'line_start': 1, 'line_end': 1, 'hash_value': 'a719dca1cd796e7b4930b665cef5ea19'}, {'tag_name': 'select', 'query_id': 'getUserGroupStatistics', 'query_type': 'select', 'sql_content': "\n        SELECT \n            user_type,\n            status,\n            COUNT(*) as user_count,\n            AVG(age) as avg_age,\n            MIN(created_date) as first_created,\n            MAX(created_date) as last_created,\n            COUNT(CASE WHEN updated_date IS NOT NULL THEN 1 END) as updated_count\n        FROM users\n         \n             \n                AND created_date >= TO_DATE(#{startDate}, 'YYYY-MM-DD')\n             \n             \n                AND created_date <= TO_DATE(#{endDate}, 'YYYY-MM-DD')\n             \n         \n        GROUP BY user_type, status\n        ORDER BY user_type, status\n    ", 'file_path': 'D:\\Analyzer\\CreateMetaDb\\projects\\sampleSrc\\src\\main\\resources\\mybatis\\mapper\\UserMapper.xml', 'line_start': 1, 'line_end': 1, 'hash_value': '1efc423ae43c36ab7549247425f9e749'}, {'tag_name': 'select', 'query_id': 'getUserWithPreferences', 'query_type': 'select', 'sql_content': '\n        SELECT \n            u.id,\n            u.username,\n            u.name,\n            u.email,\n            u.user_type,\n            up.theme,\n            up.language,\n            up.timezone,\n            up.notification_email,\n            up.notification_sms,\n            up.created_date as user_created,\n            up.updated_date as pref_updated\n        FROM users u\n        LEFT JOIN user_preferences up ON u.id = up.user_id\n        WHERE u.id = #{userId}\n    ', 'file_path': 'D:\\Analyzer\\CreateMetaDb\\projects\\sampleSrc\\src\\main\\resources\\mybatis\\mapper\\UserMapper.xml', 'line_start': 1, 'line_end': 1, 'hash_value': 'b3141c4b476875b9d03bb6505c044cc7'}, {'tag_name': 'select', 'query_id': 'getUserWithPreferencesAndType', 'query_type': 'select', 'sql_content': '\n        SELECT \n            u.id,\n            u.username,\n            u.name,\n            u.email,\n            u.user_type,\n            ut.type_name,\n            ut.description as type_description,\n            up.theme,\n            up.language,\n            up.timezone,\n            up.notification_email,\n            up.notification_sms\n        FROM users u\n        LEFT JOIN user_types ut ON u.user_type = ut.type_code\n        LEFT JOIN user_preferences up ON u.id = up.user_id\n        WHERE u.id = #{userId}\n    ', 'file_path': 'D:\\Analyzer\\CreateMetaDb\\projects\\sampleSrc\\src\\main\\resources\\mybatis\\mapper\\UserMapper.xml', 'line_start': 1, 'line_end': 1, 'hash_value': '7c4ad7f3890026dd9b4175d999afd2cb'}, {'tag_name': 'select', 'query_id': 'getUserActivityLog', 'query_type': 'select', 'sql_content': '\n        SELECT \n            usr.id,\n            usr.username,\n            usr.name,\n            act.activity_type,\n            act.activity_date,\n            act.description\n        FROM users usr\n        LEFT JOIN user_activity_log act ON usr.id = act.user_id\n        WHERE usr.id = #{userId}\n        ORDER BY act.activity_date DESC\n    ', 'file_path': 'D:\\Analyzer\\CreateMetaDb\\projects\\sampleSrc\\src\\main\\resources\\mybatis\\mapper\\UserMapper.xml', 'line_start': 1, 'line_end': 1, 'hash_value': '844c695c4874dc915641622e5b2b125a'}, {'tag_name': 'select', 'query_id': 'getUserSettings', 'query_type': 'select', 'sql_content': '\n        SELECT \n            u.id,\n            u.username,\n            settings.setting_key,\n            settings.setting_value,\n            settings.updated_date\n        FROM users u\n        LEFT JOIN user_settings settings ON u.id = settings.user_id\n        WHERE u.id = #{userId}\n    ', 'file_path': 'D:\\Analyzer\\CreateMetaDb\\projects\\sampleSrc\\src\\main\\resources\\mybatis\\mapper\\UserMapper.xml', 'line_start': 1, 'line_end': 1, 'hash_value': 'a69d5994050f14e975f1e2759a68adbc'}, {'tag_name': 'select', 'query_id': 'getUserWithNewTable', 'query_type': 'select', 'sql_content': '\n        SELECT \n            u.id,\n            u.username,\n            u.name,\n            nt.new_field1,\n            nt.new_field2\n        FROM users u\n        LEFT JOIN new_test_table nt ON u.id = nt.user_id\n        WHERE u.id = #{userId}\n    ', 'file_path': 'D:\\Analyzer\\CreateMetaDb\\projects\\sampleSrc\\src\\main\\resources\\mybatis\\mapper\\UserMapper.xml', 'line_start': 1, 'line_end': 1, 'hash_value': '6821eed9badfb9faec65f9b432c81c64'}, {'tag_name': 'insert', 'query_id': 'insertUserDynamic', 'query_type': 'insert', 'sql_content': '\n        INSERT INTO users (\n             \n                 username, \n                 email, \n                 password, \n                 name, \n                 age, \n                 status, \n                 user_type, \n                 phone, \n                 address, \n                created_date,\n                updated_date\n             \n        ) VALUES (\n             \n                 #{username}, \n                 #{email}, \n                 #{password}, \n                 #{name}, \n                 #{age}, \n                 #{status}, \n                 #{userType}, \n                 #{phone}, \n                 #{address}, \n                SYSDATE,\n                SYSDATE\n             \n        )\n    ', 'file_path': 'D:\\Analyzer\\CreateMetaDb\\projects\\sampleSrc\\src\\main\\resources\\mybatis\\mapper\\UserMapper.xml', 'line_start': 1, 'line_end': 1, 'hash_value': '431803c67f8397af66112fbeb6fc054b'}, {'tag_name': 'insert', 'query_id': 'insertUserPreferences', 'query_type': 'insert', 'sql_content': '\n        INSERT INTO user_preferences (\n            user_id,\n            theme,\n            language,\n            timezone,\n            notification_email,\n            notification_sms,\n            created_date,\n            updated_date\n        ) VALUES (\n            #{userId},\n            #{theme},\n            #{language},\n            #{timezone},\n            #{notificationEmail},\n            #{notificationSms},\n            SYSDATE,\n            SYSDATE\n        )\n    ', 'file_path': 'D:\\Analyzer\\CreateMetaDb\\projects\\sampleSrc\\src\\main\\resources\\mybatis\\mapper\\UserMapper.xml', 'line_start': 1, 'line_end': 1, 'hash_value': '23e8c4a1a6f8860414fc2f78bbc492d3'}, {'tag_name': 'update', 'query_id': 'updateUserDynamic', 'query_type': 'update', 'sql_content': '\n        UPDATE users\n         \n             \n                username = #{username},\n             \n             \n                email = #{email},\n             \n             \n                name = #{name},\n             \n             \n                age = #{age},\n             \n             \n                status = #{status},\n             \n             \n                phone = #{phone},\n             \n             \n                address = #{address},\n             \n            updated_date = SYSDATE\n         \n        WHERE id = #{id}\n    ', 'file_path': 'D:\\Analyzer\\CreateMetaDb\\projects\\sampleSrc\\src\\main\\resources\\mybatis\\mapper\\UserMapper.xml', 'line_start': 1, 'line_end': 1, 'hash_value': '0251d581016f96487f2bd9196804080b'}, {'tag_name': 'update', 'query_id': 'updateUserPreferences', 'query_type': 'update', 'sql_content': '\n        UPDATE user_preferences\n        SET \n            theme = #{theme},\n            language = #{language},\n            timezone = #{timezone},\n            notification_email = #{notificationEmail},\n            notification_sms = #{notificationSms},\n            updated_date = SYSDATE\n        WHERE user_id = #{userId}\n    ', 'file_path': 'D:\\Analyzer\\CreateMetaDb\\projects\\sampleSrc\\src\\main\\resources\\mybatis\\mapper\\UserMapper.xml', 'line_start': 1, 'line_end': 1, 'hash_value': '2c243cff67aa14183fa02bdfe2206dad'}, {'tag_name': 'delete', 'query_id': 'deleteUsersByCondition', 'query_type': 'delete', 'sql_content': "\n        DELETE FROM users\n         \n             \n                AND status = #{status}\n             \n             \n                AND user_type = #{userType}\n             \n             \n                AND created_date < TO_DATE(#{beforeDate}, 'YYYY-MM-DD')\n             \n         \n    ", 'file_path': 'D:\\Analyzer\\CreateMetaDb\\projects\\sampleSrc\\src\\main\\resources\\mybatis\\mapper\\UserMapper.xml', 'line_start': 1, 'line_end': 1, 'hash_value': '4fd8b5a65fc409d88076a0d241391c0c'}]
2025-09-13 22:43:56,335 - SourceAnalyzer - DEBUG - logger.py:64 - SQL 쿼리 처리 루프 시작 전
2025-09-13 22:43:56,335 - SourceAnalyzer - DEBUG - logger.py:64 - SQL 쿼리 처리 루프 시작: 1/20
2025-09-13 22:43:56,335 - SourceAnalyzer - DEBUG - logger.py:64 - SQL 쿼리 처리 시작: selectUserById (select)
2025-09-13 22:43:56,335 - SourceAnalyzer - DEBUG - logger.py:64 - GET XML ID 조회: D:\Analyzer\CreateMetaDb\projects\sampleSrc\src\main\resources\mybatis\mapper\UserMapper.xml -> src/main/resources/mybatis/mapper/UserMapper.xml
2025-09-13 22:43:56,335 - SourceAnalyzer - DEBUG - logger.py:64 - 메모리 매핑 테이블 키들: ['src/com/example/dynamicquery/UserMapper.xml', 'src/main/resources/mybatis/mapper/ImplicitJoinMapper.xml', 'src/main/resources/mybatis/mapper/ImplicitJoinTestMapper.xml', 'src/main/resources/mybatis/mapper/MixedErrorMapper.xml', 'src/main/resources/mybatis/mapper/ProductMapper.xml', 'src/main/resources/mybatis/mapper/UserMapper.xml']
2025-09-13 22:43:56,335 - SourceAnalyzer - DEBUG - logger.py:64 - 메모리에서 file_id 조회 성공: src/main/resources/mybatis/mapper/UserMapper.xml -> 27
2025-09-13 22:43:56,335 - SourceAnalyzer - DEBUG - logger.py:64 - 파일 ID 조회 성공: 27
2025-09-13 22:43:56,335 - SourceAnalyzer - DEBUG - logger.py:64 - 컴포넌트 저장 시도: selectUserById (select) -> SQL_SELECT
2025-09-13 22:43:56,335 - SourceAnalyzer - DEBUG - logger.py:64 - Upsert 실행: components
2025-09-13 22:43:56,335 - SourceAnalyzer - DEBUG - logger.py:64 - 데이터: {'project_id': 1, 'component_type': 'SQL_SELECT', 'component_name': 'selectUserById', 'parent_id': None, 'layer': 'SQL', 'file_id': 27, 'line_start': 1, 'line_end': 1, 'hash_value': 'd7e6d6ba0dfdfeac586535a7f75b9731', 'has_error': 'N', 'error_message': None, 'del_yn': 'N'}
2025-09-13 22:43:56,335 - SourceAnalyzer - DEBUG - logger.py:64 - Components upsert 시작: selectUserById (SQL_SELECT)
2025-09-13 22:43:56,335 - SourceAnalyzer - DEBUG - logger.py:64 - 기존 레코드 확인 쿼리: 
                    SELECT component_id FROM components 
                    WHERE project_id = ? AND component_name = ? AND file_id = ?
                    
2025-09-13 22:43:56,335 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 파라미터: (1, 'selectUserById', 27)
2025-09-13 22:43:56,336 - SourceAnalyzer - DEBUG - logger.py:64 - 기존 레코드 조회 결과: <sqlite3.Row object at 0x00000257905C7F40>
2025-09-13 22:43:56,336 - SourceAnalyzer - DEBUG - logger.py:64 - UPDATE 쿼리: 
                        UPDATE components SET component_type = ?, parent_id = ?, layer = ?, line_start = ?, line_end = ?, hash_value = ?, has_error = ?, error_message = ?, del_yn = ?
                        WHERE component_id = ?
                        
2025-09-13 22:43:56,336 - SourceAnalyzer - DEBUG - logger.py:64 - UPDATE 파라미터: ['SQL_SELECT', None, 'SQL', 1, 1, 'd7e6d6ba0dfdfeac586535a7f75b9731', 'N', None, 'N', 591]
2025-09-13 22:43:56,336 - SourceAnalyzer - DEBUG - logger.py:64 - UPDATE 실행 완료: component_id = 591
2025-09-13 22:43:56,336 - SourceAnalyzer - DEBUG - logger.py:64 - 컴포넌트 저장 완료: selectUserById (ID: 591)
2025-09-13 22:43:56,336 - SourceAnalyzer - DEBUG - logger.py:64 - 컴포넌트 저장 결과: component_id = 591
2025-09-13 22:43:56,336 - SourceAnalyzer - DEBUG - logger.py:64 - SQL Content 저장 시작: selectUserById (component_id: 591)
2025-09-13 22:43:56,336 - SourceAnalyzer - DEBUG - logger.py:64 - SQL Content 상대경로: src/main/resources/mybatis/mapper
2025-09-13 22:43:56,336 - SourceAnalyzer - WARNING - logger.py:72 - SQL Content 저장 중 예외 발생 (무시하고 계속 진행): selectUserById - 'sql_query'
2025-09-13 22:43:56,336 - SourceAnalyzer - DEBUG - logger.py:64 - SQL 쿼리 처리 완료: selectUserById
2025-09-13 22:43:56,336 - SourceAnalyzer - DEBUG - logger.py:64 - SQL 쿼리 처리 루프 시작: 2/20
2025-09-13 22:43:56,336 - SourceAnalyzer - DEBUG - logger.py:64 - SQL 쿼리 처리 시작: selectUsersByCondition (select)
2025-09-13 22:43:56,336 - SourceAnalyzer - DEBUG - logger.py:64 - GET XML ID 조회: D:\Analyzer\CreateMetaDb\projects\sampleSrc\src\main\resources\mybatis\mapper\UserMapper.xml -> src/main/resources/mybatis/mapper/UserMapper.xml
2025-09-13 22:43:56,336 - SourceAnalyzer - DEBUG - logger.py:64 - 메모리 매핑 테이블 키들: ['src/com/example/dynamicquery/UserMapper.xml', 'src/main/resources/mybatis/mapper/ImplicitJoinMapper.xml', 'src/main/resources/mybatis/mapper/ImplicitJoinTestMapper.xml', 'src/main/resources/mybatis/mapper/MixedErrorMapper.xml', 'src/main/resources/mybatis/mapper/ProductMapper.xml', 'src/main/resources/mybatis/mapper/UserMapper.xml']
2025-09-13 22:43:56,336 - SourceAnalyzer - DEBUG - logger.py:64 - 메모리에서 file_id 조회 성공: src/main/resources/mybatis/mapper/UserMapper.xml -> 27
2025-09-13 22:43:56,336 - SourceAnalyzer - DEBUG - logger.py:64 - 파일 ID 조회 성공: 27
2025-09-13 22:43:56,336 - SourceAnalyzer - DEBUG - logger.py:64 - 컴포넌트 저장 시도: selectUsersByCondition (select) -> SQL_SELECT
2025-09-13 22:43:56,336 - SourceAnalyzer - DEBUG - logger.py:64 - Upsert 실행: components
2025-09-13 22:43:56,336 - SourceAnalyzer - DEBUG - logger.py:64 - 데이터: {'project_id': 1, 'component_type': 'SQL_SELECT', 'component_name': 'selectUsersByCondition', 'parent_id': None, 'layer': 'SQL', 'file_id': 27, 'line_start': 1, 'line_end': 1, 'hash_value': 'ecf7ccb35b920d87c98b8b3e41af5b68', 'has_error': 'N', 'error_message': None, 'del_yn': 'N'}
2025-09-13 22:43:56,336 - SourceAnalyzer - DEBUG - logger.py:64 - Components upsert 시작: selectUsersByCondition (SQL_SELECT)
2025-09-13 22:43:56,336 - SourceAnalyzer - DEBUG - logger.py:64 - 기존 레코드 확인 쿼리: 
                    SELECT component_id FROM components 
                    WHERE project_id = ? AND component_name = ? AND file_id = ?
                    
2025-09-13 22:43:56,336 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 파라미터: (1, 'selectUsersByCondition', 27)
2025-09-13 22:43:56,336 - SourceAnalyzer - DEBUG - logger.py:64 - 기존 레코드 조회 결과: <sqlite3.Row object at 0x00000257905C7F40>
2025-09-13 22:43:56,336 - SourceAnalyzer - DEBUG - logger.py:64 - UPDATE 쿼리: 
                        UPDATE components SET component_type = ?, parent_id = ?, layer = ?, line_start = ?, line_end = ?, hash_value = ?, has_error = ?, error_message = ?, del_yn = ?
                        WHERE component_id = ?
                        
2025-09-13 22:43:56,336 - SourceAnalyzer - DEBUG - logger.py:64 - UPDATE 파라미터: ['SQL_SELECT', None, 'SQL', 1, 1, 'ecf7ccb35b920d87c98b8b3e41af5b68', 'N', None, 'N', 592]
2025-09-13 22:43:56,336 - SourceAnalyzer - DEBUG - logger.py:64 - UPDATE 실행 완료: component_id = 592
2025-09-13 22:43:56,336 - SourceAnalyzer - DEBUG - logger.py:64 - 컴포넌트 저장 완료: selectUsersByCondition (ID: 592)
2025-09-13 22:43:56,337 - SourceAnalyzer - DEBUG - logger.py:64 - 컴포넌트 저장 결과: component_id = 592
2025-09-13 22:43:56,337 - SourceAnalyzer - DEBUG - logger.py:64 - SQL Content 저장 시작: selectUsersByCondition (component_id: 592)
2025-09-13 22:43:56,337 - SourceAnalyzer - DEBUG - logger.py:64 - SQL Content 상대경로: src/main/resources/mybatis/mapper
2025-09-13 22:43:56,337 - SourceAnalyzer - WARNING - logger.py:72 - SQL Content 저장 중 예외 발생 (무시하고 계속 진행): selectUsersByCondition - 'sql_query'
2025-09-13 22:43:56,337 - SourceAnalyzer - DEBUG - logger.py:64 - SQL 쿼리 처리 완료: selectUsersByCondition
2025-09-13 22:43:56,337 - SourceAnalyzer - DEBUG - logger.py:64 - SQL 쿼리 처리 루프 시작: 3/20
2025-09-13 22:43:56,337 - SourceAnalyzer - DEBUG - logger.py:64 - SQL 쿼리 처리 시작: selectUsersByAdvancedCondition (select)
2025-09-13 22:43:56,337 - SourceAnalyzer - DEBUG - logger.py:64 - GET XML ID 조회: D:\Analyzer\CreateMetaDb\projects\sampleSrc\src\main\resources\mybatis\mapper\UserMapper.xml -> src/main/resources/mybatis/mapper/UserMapper.xml
2025-09-13 22:43:56,337 - SourceAnalyzer - DEBUG - logger.py:64 - 메모리 매핑 테이블 키들: ['src/com/example/dynamicquery/UserMapper.xml', 'src/main/resources/mybatis/mapper/ImplicitJoinMapper.xml', 'src/main/resources/mybatis/mapper/ImplicitJoinTestMapper.xml', 'src/main/resources/mybatis/mapper/MixedErrorMapper.xml', 'src/main/resources/mybatis/mapper/ProductMapper.xml', 'src/main/resources/mybatis/mapper/UserMapper.xml']
2025-09-13 22:43:56,337 - SourceAnalyzer - DEBUG - logger.py:64 - 메모리에서 file_id 조회 성공: src/main/resources/mybatis/mapper/UserMapper.xml -> 27
2025-09-13 22:43:56,337 - SourceAnalyzer - DEBUG - logger.py:64 - 파일 ID 조회 성공: 27
2025-09-13 22:43:56,337 - SourceAnalyzer - DEBUG - logger.py:64 - 컴포넌트 저장 시도: selectUsersByAdvancedCondition (select) -> SQL_SELECT
2025-09-13 22:43:56,337 - SourceAnalyzer - DEBUG - logger.py:64 - Upsert 실행: components
2025-09-13 22:43:56,337 - SourceAnalyzer - DEBUG - logger.py:64 - 데이터: {'project_id': 1, 'component_type': 'SQL_SELECT', 'component_name': 'selectUsersByAdvancedCondition', 'parent_id': None, 'layer': 'SQL', 'file_id': 27, 'line_start': 1, 'line_end': 1, 'hash_value': '474e4bcefb6534d97bf488b3ebac934e', 'has_error': 'N', 'error_message': None, 'del_yn': 'N'}
2025-09-13 22:43:56,337 - SourceAnalyzer - DEBUG - logger.py:64 - Components upsert 시작: selectUsersByAdvancedCondition (SQL_SELECT)
2025-09-13 22:43:56,337 - SourceAnalyzer - DEBUG - logger.py:64 - 기존 레코드 확인 쿼리: 
                    SELECT component_id FROM components 
                    WHERE project_id = ? AND component_name = ? AND file_id = ?
                    
2025-09-13 22:43:56,337 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 파라미터: (1, 'selectUsersByAdvancedCondition', 27)
2025-09-13 22:43:56,337 - SourceAnalyzer - DEBUG - logger.py:64 - 기존 레코드 조회 결과: <sqlite3.Row object at 0x00000257905C7A60>
2025-09-13 22:43:56,337 - SourceAnalyzer - DEBUG - logger.py:64 - UPDATE 쿼리: 
                        UPDATE components SET component_type = ?, parent_id = ?, layer = ?, line_start = ?, line_end = ?, hash_value = ?, has_error = ?, error_message = ?, del_yn = ?
                        WHERE component_id = ?
                        
2025-09-13 22:43:56,337 - SourceAnalyzer - DEBUG - logger.py:64 - UPDATE 파라미터: ['SQL_SELECT', None, 'SQL', 1, 1, '474e4bcefb6534d97bf488b3ebac934e', 'N', None, 'N', 593]
2025-09-13 22:43:56,337 - SourceAnalyzer - DEBUG - logger.py:64 - UPDATE 실행 완료: component_id = 593
2025-09-13 22:43:56,337 - SourceAnalyzer - DEBUG - logger.py:64 - 컴포넌트 저장 완료: selectUsersByAdvancedCondition (ID: 593)
2025-09-13 22:43:56,337 - SourceAnalyzer - DEBUG - logger.py:64 - 컴포넌트 저장 결과: component_id = 593
2025-09-13 22:43:56,337 - SourceAnalyzer - DEBUG - logger.py:64 - SQL Content 저장 시작: selectUsersByAdvancedCondition (component_id: 593)
2025-09-13 22:43:56,337 - SourceAnalyzer - DEBUG - logger.py:64 - SQL Content 상대경로: src/main/resources/mybatis/mapper
2025-09-13 22:43:56,337 - SourceAnalyzer - WARNING - logger.py:72 - SQL Content 저장 중 예외 발생 (무시하고 계속 진행): selectUsersByAdvancedCondition - 'sql_query'
2025-09-13 22:43:56,337 - SourceAnalyzer - DEBUG - logger.py:64 - SQL 쿼리 처리 완료: selectUsersByAdvancedCondition
2025-09-13 22:43:56,337 - SourceAnalyzer - DEBUG - logger.py:64 - SQL 쿼리 처리 루프 시작: 4/20
2025-09-13 22:43:56,337 - SourceAnalyzer - DEBUG - logger.py:64 - SQL 쿼리 처리 시작: selectUsersByType (select)
2025-09-13 22:43:56,338 - SourceAnalyzer - DEBUG - logger.py:64 - GET XML ID 조회: D:\Analyzer\CreateMetaDb\projects\sampleSrc\src\main\resources\mybatis\mapper\UserMapper.xml -> src/main/resources/mybatis/mapper/UserMapper.xml
2025-09-13 22:43:56,338 - SourceAnalyzer - DEBUG - logger.py:64 - 메모리 매핑 테이블 키들: ['src/com/example/dynamicquery/UserMapper.xml', 'src/main/resources/mybatis/mapper/ImplicitJoinMapper.xml', 'src/main/resources/mybatis/mapper/ImplicitJoinTestMapper.xml', 'src/main/resources/mybatis/mapper/MixedErrorMapper.xml', 'src/main/resources/mybatis/mapper/ProductMapper.xml', 'src/main/resources/mybatis/mapper/UserMapper.xml']
2025-09-13 22:43:56,338 - SourceAnalyzer - DEBUG - logger.py:64 - 메모리에서 file_id 조회 성공: src/main/resources/mybatis/mapper/UserMapper.xml -> 27
2025-09-13 22:43:56,338 - SourceAnalyzer - DEBUG - logger.py:64 - 파일 ID 조회 성공: 27
2025-09-13 22:43:56,338 - SourceAnalyzer - DEBUG - logger.py:64 - 컴포넌트 저장 시도: selectUsersByType (select) -> SQL_SELECT
2025-09-13 22:43:56,338 - SourceAnalyzer - DEBUG - logger.py:64 - Upsert 실행: components
2025-09-13 22:43:56,338 - SourceAnalyzer - DEBUG - logger.py:64 - 데이터: {'project_id': 1, 'component_type': 'SQL_SELECT', 'component_name': 'selectUsersByType', 'parent_id': None, 'layer': 'SQL', 'file_id': 27, 'line_start': 1, 'line_end': 1, 'hash_value': '54d2accd33d2d0e73500c229f3d7aa48', 'has_error': 'N', 'error_message': None, 'del_yn': 'N'}
2025-09-13 22:43:56,338 - SourceAnalyzer - DEBUG - logger.py:64 - Components upsert 시작: selectUsersByType (SQL_SELECT)
2025-09-13 22:43:56,338 - SourceAnalyzer - DEBUG - logger.py:64 - 기존 레코드 확인 쿼리: 
                    SELECT component_id FROM components 
                    WHERE project_id = ? AND component_name = ? AND file_id = ?
                    
2025-09-13 22:43:56,338 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 파라미터: (1, 'selectUsersByType', 27)
2025-09-13 22:43:56,338 - SourceAnalyzer - DEBUG - logger.py:64 - 기존 레코드 조회 결과: <sqlite3.Row object at 0x00000257905C7580>
2025-09-13 22:43:56,338 - SourceAnalyzer - DEBUG - logger.py:64 - UPDATE 쿼리: 
                        UPDATE components SET component_type = ?, parent_id = ?, layer = ?, line_start = ?, line_end = ?, hash_value = ?, has_error = ?, error_message = ?, del_yn = ?
                        WHERE component_id = ?
                        
2025-09-13 22:43:56,338 - SourceAnalyzer - DEBUG - logger.py:64 - UPDATE 파라미터: ['SQL_SELECT', None, 'SQL', 1, 1, '54d2accd33d2d0e73500c229f3d7aa48', 'N', None, 'N', 594]
2025-09-13 22:43:56,338 - SourceAnalyzer - DEBUG - logger.py:64 - UPDATE 실행 완료: component_id = 594
2025-09-13 22:43:56,338 - SourceAnalyzer - DEBUG - logger.py:64 - 컴포넌트 저장 완료: selectUsersByType (ID: 594)
2025-09-13 22:43:56,338 - SourceAnalyzer - DEBUG - logger.py:64 - 컴포넌트 저장 결과: component_id = 594
2025-09-13 22:43:56,338 - SourceAnalyzer - DEBUG - logger.py:64 - SQL Content 저장 시작: selectUsersByType (component_id: 594)
2025-09-13 22:43:56,338 - SourceAnalyzer - DEBUG - logger.py:64 - SQL Content 상대경로: src/main/resources/mybatis/mapper
2025-09-13 22:43:56,338 - SourceAnalyzer - WARNING - logger.py:72 - SQL Content 저장 중 예외 발생 (무시하고 계속 진행): selectUsersByType - 'sql_query'
2025-09-13 22:43:56,338 - SourceAnalyzer - DEBUG - logger.py:64 - SQL 쿼리 처리 완료: selectUsersByType
2025-09-13 22:43:56,338 - SourceAnalyzer - DEBUG - logger.py:64 - SQL 쿼리 처리 루프 시작: 5/20
2025-09-13 22:43:56,338 - SourceAnalyzer - DEBUG - logger.py:64 - SQL 쿼리 처리 시작: countUsersByCondition (select)
2025-09-13 22:43:56,338 - SourceAnalyzer - DEBUG - logger.py:64 - GET XML ID 조회: D:\Analyzer\CreateMetaDb\projects\sampleSrc\src\main\resources\mybatis\mapper\UserMapper.xml -> src/main/resources/mybatis/mapper/UserMapper.xml
2025-09-13 22:43:56,338 - SourceAnalyzer - DEBUG - logger.py:64 - 메모리 매핑 테이블 키들: ['src/com/example/dynamicquery/UserMapper.xml', 'src/main/resources/mybatis/mapper/ImplicitJoinMapper.xml', 'src/main/resources/mybatis/mapper/ImplicitJoinTestMapper.xml', 'src/main/resources/mybatis/mapper/MixedErrorMapper.xml', 'src/main/resources/mybatis/mapper/ProductMapper.xml', 'src/main/resources/mybatis/mapper/UserMapper.xml']
2025-09-13 22:43:56,338 - SourceAnalyzer - DEBUG - logger.py:64 - 메모리에서 file_id 조회 성공: src/main/resources/mybatis/mapper/UserMapper.xml -> 27
2025-09-13 22:43:56,338 - SourceAnalyzer - DEBUG - logger.py:64 - 파일 ID 조회 성공: 27
2025-09-13 22:43:56,338 - SourceAnalyzer - DEBUG - logger.py:64 - 컴포넌트 저장 시도: countUsersByCondition (select) -> SQL_SELECT
2025-09-13 22:43:56,338 - SourceAnalyzer - DEBUG - logger.py:64 - Upsert 실행: components
2025-09-13 22:43:56,339 - SourceAnalyzer - DEBUG - logger.py:64 - 데이터: {'project_id': 1, 'component_type': 'SQL_SELECT', 'component_name': 'countUsersByCondition', 'parent_id': None, 'layer': 'SQL', 'file_id': 27, 'line_start': 1, 'line_end': 1, 'hash_value': '2d5b765855ec023f746fc0aa1fa9f7a0', 'has_error': 'N', 'error_message': None, 'del_yn': 'N'}
2025-09-13 22:43:56,339 - SourceAnalyzer - DEBUG - logger.py:64 - Components upsert 시작: countUsersByCondition (SQL_SELECT)
2025-09-13 22:43:56,339 - SourceAnalyzer - DEBUG - logger.py:64 - 기존 레코드 확인 쿼리: 
                    SELECT component_id FROM components 
                    WHERE project_id = ? AND component_name = ? AND file_id = ?
                    
2025-09-13 22:43:56,339 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 파라미터: (1, 'countUsersByCondition', 27)
2025-09-13 22:43:56,339 - SourceAnalyzer - DEBUG - logger.py:64 - 기존 레코드 조회 결과: <sqlite3.Row object at 0x00000257905C7B80>
2025-09-13 22:43:56,339 - SourceAnalyzer - DEBUG - logger.py:64 - UPDATE 쿼리: 
                        UPDATE components SET component_type = ?, parent_id = ?, layer = ?, line_start = ?, line_end = ?, hash_value = ?, has_error = ?, error_message = ?, del_yn = ?
                        WHERE component_id = ?
                        
2025-09-13 22:43:56,339 - SourceAnalyzer - DEBUG - logger.py:64 - UPDATE 파라미터: ['SQL_SELECT', None, 'SQL', 1, 1, '2d5b765855ec023f746fc0aa1fa9f7a0', 'N', None, 'N', 598]
2025-09-13 22:43:56,339 - SourceAnalyzer - DEBUG - logger.py:64 - UPDATE 실행 완료: component_id = 598
2025-09-13 22:43:56,339 - SourceAnalyzer - DEBUG - logger.py:64 - 컴포넌트 저장 완료: countUsersByCondition (ID: 598)
2025-09-13 22:43:56,339 - SourceAnalyzer - DEBUG - logger.py:64 - 컴포넌트 저장 결과: component_id = 598
2025-09-13 22:43:56,339 - SourceAnalyzer - DEBUG - logger.py:64 - SQL Content 저장 시작: countUsersByCondition (component_id: 598)
2025-09-13 22:43:56,339 - SourceAnalyzer - DEBUG - logger.py:64 - SQL Content 상대경로: src/main/resources/mybatis/mapper
2025-09-13 22:43:56,339 - SourceAnalyzer - WARNING - logger.py:72 - SQL Content 저장 중 예외 발생 (무시하고 계속 진행): countUsersByCondition - 'sql_query'
2025-09-13 22:43:56,339 - SourceAnalyzer - DEBUG - logger.py:64 - SQL 쿼리 처리 완료: countUsersByCondition
2025-09-13 22:43:56,339 - SourceAnalyzer - DEBUG - logger.py:64 - SQL 쿼리 처리 루프 시작: 6/20
2025-09-13 22:43:56,339 - SourceAnalyzer - DEBUG - logger.py:64 - SQL 쿼리 처리 시작: getUserStatistics (select)
2025-09-13 22:43:56,339 - SourceAnalyzer - DEBUG - logger.py:64 - GET XML ID 조회: D:\Analyzer\CreateMetaDb\projects\sampleSrc\src\main\resources\mybatis\mapper\UserMapper.xml -> src/main/resources/mybatis/mapper/UserMapper.xml
2025-09-13 22:43:56,339 - SourceAnalyzer - DEBUG - logger.py:64 - 메모리 매핑 테이블 키들: ['src/com/example/dynamicquery/UserMapper.xml', 'src/main/resources/mybatis/mapper/ImplicitJoinMapper.xml', 'src/main/resources/mybatis/mapper/ImplicitJoinTestMapper.xml', 'src/main/resources/mybatis/mapper/MixedErrorMapper.xml', 'src/main/resources/mybatis/mapper/ProductMapper.xml', 'src/main/resources/mybatis/mapper/UserMapper.xml']
2025-09-13 22:43:56,339 - SourceAnalyzer - DEBUG - logger.py:64 - 메모리에서 file_id 조회 성공: src/main/resources/mybatis/mapper/UserMapper.xml -> 27
2025-09-13 22:43:56,339 - SourceAnalyzer - DEBUG - logger.py:64 - 파일 ID 조회 성공: 27
2025-09-13 22:43:56,339 - SourceAnalyzer - DEBUG - logger.py:64 - 컴포넌트 저장 시도: getUserStatistics (select) -> SQL_SELECT
2025-09-13 22:43:56,339 - SourceAnalyzer - DEBUG - logger.py:64 - Upsert 실행: components
2025-09-13 22:43:56,339 - SourceAnalyzer - DEBUG - logger.py:64 - 데이터: {'project_id': 1, 'component_type': 'SQL_SELECT', 'component_name': 'getUserStatistics', 'parent_id': None, 'layer': 'SQL', 'file_id': 27, 'line_start': 1, 'line_end': 1, 'hash_value': 'd0f8f3c60919b3c7665f21461e143ddf', 'has_error': 'N', 'error_message': None, 'del_yn': 'N'}
2025-09-13 22:43:56,339 - SourceAnalyzer - DEBUG - logger.py:64 - Components upsert 시작: getUserStatistics (SQL_SELECT)
2025-09-13 22:43:56,339 - SourceAnalyzer - DEBUG - logger.py:64 - 기존 레코드 확인 쿼리: 
                    SELECT component_id FROM components 
                    WHERE project_id = ? AND component_name = ? AND file_id = ?
                    
2025-09-13 22:43:56,339 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 파라미터: (1, 'getUserStatistics', 27)
2025-09-13 22:43:56,339 - SourceAnalyzer - DEBUG - logger.py:64 - 기존 레코드 조회 결과: <sqlite3.Row object at 0x00000257905C64D0>
2025-09-13 22:43:56,339 - SourceAnalyzer - DEBUG - logger.py:64 - UPDATE 쿼리: 
                        UPDATE components SET component_type = ?, parent_id = ?, layer = ?, line_start = ?, line_end = ?, hash_value = ?, has_error = ?, error_message = ?, del_yn = ?
                        WHERE component_id = ?
                        
2025-09-13 22:43:56,339 - SourceAnalyzer - DEBUG - logger.py:64 - UPDATE 파라미터: ['SQL_SELECT', None, 'SQL', 1, 1, 'd0f8f3c60919b3c7665f21461e143ddf', 'N', None, 'N', 599]
2025-09-13 22:43:56,339 - SourceAnalyzer - DEBUG - logger.py:64 - UPDATE 실행 완료: component_id = 599
2025-09-13 22:43:56,340 - SourceAnalyzer - DEBUG - logger.py:64 - 컴포넌트 저장 완료: getUserStatistics (ID: 599)
2025-09-13 22:43:56,340 - SourceAnalyzer - DEBUG - logger.py:64 - 컴포넌트 저장 결과: component_id = 599
2025-09-13 22:43:56,340 - SourceAnalyzer - DEBUG - logger.py:64 - SQL Content 저장 시작: getUserStatistics (component_id: 599)
2025-09-13 22:43:56,340 - SourceAnalyzer - DEBUG - logger.py:64 - SQL Content 상대경로: src/main/resources/mybatis/mapper
2025-09-13 22:43:56,340 - SourceAnalyzer - WARNING - logger.py:72 - SQL Content 저장 중 예외 발생 (무시하고 계속 진행): getUserStatistics - 'sql_query'
2025-09-13 22:43:56,340 - SourceAnalyzer - DEBUG - logger.py:64 - SQL 쿼리 처리 완료: getUserStatistics
2025-09-13 22:43:56,340 - SourceAnalyzer - DEBUG - logger.py:64 - SQL 쿼리 처리 루프 시작: 7/20
2025-09-13 22:43:56,340 - SourceAnalyzer - DEBUG - logger.py:64 - SQL 쿼리 처리 시작: getUserAgeDistribution (select)
2025-09-13 22:43:56,340 - SourceAnalyzer - DEBUG - logger.py:64 - GET XML ID 조회: D:\Analyzer\CreateMetaDb\projects\sampleSrc\src\main\resources\mybatis\mapper\UserMapper.xml -> src/main/resources/mybatis/mapper/UserMapper.xml
2025-09-13 22:43:56,340 - SourceAnalyzer - DEBUG - logger.py:64 - 메모리 매핑 테이블 키들: ['src/com/example/dynamicquery/UserMapper.xml', 'src/main/resources/mybatis/mapper/ImplicitJoinMapper.xml', 'src/main/resources/mybatis/mapper/ImplicitJoinTestMapper.xml', 'src/main/resources/mybatis/mapper/MixedErrorMapper.xml', 'src/main/resources/mybatis/mapper/ProductMapper.xml', 'src/main/resources/mybatis/mapper/UserMapper.xml']
2025-09-13 22:43:56,340 - SourceAnalyzer - DEBUG - logger.py:64 - 메모리에서 file_id 조회 성공: src/main/resources/mybatis/mapper/UserMapper.xml -> 27
2025-09-13 22:43:56,340 - SourceAnalyzer - DEBUG - logger.py:64 - 파일 ID 조회 성공: 27
2025-09-13 22:43:56,340 - SourceAnalyzer - DEBUG - logger.py:64 - 컴포넌트 저장 시도: getUserAgeDistribution (select) -> SQL_SELECT
2025-09-13 22:43:56,340 - SourceAnalyzer - DEBUG - logger.py:64 - Upsert 실행: components
2025-09-13 22:43:56,340 - SourceAnalyzer - DEBUG - logger.py:64 - 데이터: {'project_id': 1, 'component_type': 'SQL_SELECT', 'component_name': 'getUserAgeDistribution', 'parent_id': None, 'layer': 'SQL', 'file_id': 27, 'line_start': 1, 'line_end': 1, 'hash_value': '86534b900f3ff5c4c3935335b1a68dc5', 'has_error': 'N', 'error_message': None, 'del_yn': 'N'}
2025-09-13 22:43:56,340 - SourceAnalyzer - DEBUG - logger.py:64 - Components upsert 시작: getUserAgeDistribution (SQL_SELECT)
2025-09-13 22:43:56,340 - SourceAnalyzer - DEBUG - logger.py:64 - 기존 레코드 확인 쿼리: 
                    SELECT component_id FROM components 
                    WHERE project_id = ? AND component_name = ? AND file_id = ?
                    
2025-09-13 22:43:56,340 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 파라미터: (1, 'getUserAgeDistribution', 27)
2025-09-13 22:43:56,340 - SourceAnalyzer - DEBUG - logger.py:64 - 기존 레코드 조회 결과: <sqlite3.Row object at 0x00000257905C5F30>
2025-09-13 22:43:56,340 - SourceAnalyzer - DEBUG - logger.py:64 - UPDATE 쿼리: 
                        UPDATE components SET component_type = ?, parent_id = ?, layer = ?, line_start = ?, line_end = ?, hash_value = ?, has_error = ?, error_message = ?, del_yn = ?
                        WHERE component_id = ?
                        
2025-09-13 22:43:56,340 - SourceAnalyzer - DEBUG - logger.py:64 - UPDATE 파라미터: ['SQL_SELECT', None, 'SQL', 1, 1, '86534b900f3ff5c4c3935335b1a68dc5', 'N', None, 'N', 600]
2025-09-13 22:43:56,340 - SourceAnalyzer - DEBUG - logger.py:64 - UPDATE 실행 완료: component_id = 600
2025-09-13 22:43:56,340 - SourceAnalyzer - DEBUG - logger.py:64 - 컴포넌트 저장 완료: getUserAgeDistribution (ID: 600)
2025-09-13 22:43:56,340 - SourceAnalyzer - DEBUG - logger.py:64 - 컴포넌트 저장 결과: component_id = 600
2025-09-13 22:43:56,340 - SourceAnalyzer - DEBUG - logger.py:64 - SQL Content 저장 시작: getUserAgeDistribution (component_id: 600)
2025-09-13 22:43:56,340 - SourceAnalyzer - DEBUG - logger.py:64 - SQL Content 상대경로: src/main/resources/mybatis/mapper
2025-09-13 22:43:56,340 - SourceAnalyzer - WARNING - logger.py:72 - SQL Content 저장 중 예외 발생 (무시하고 계속 진행): getUserAgeDistribution - 'sql_query'
2025-09-13 22:43:56,340 - SourceAnalyzer - DEBUG - logger.py:64 - SQL 쿼리 처리 완료: getUserAgeDistribution
2025-09-13 22:43:56,340 - SourceAnalyzer - DEBUG - logger.py:64 - SQL 쿼리 처리 루프 시작: 8/20
2025-09-13 22:43:56,341 - SourceAnalyzer - DEBUG - logger.py:64 - SQL 쿼리 처리 시작: getUserActivityAnalysis (select)
2025-09-13 22:43:56,341 - SourceAnalyzer - DEBUG - logger.py:64 - GET XML ID 조회: D:\Analyzer\CreateMetaDb\projects\sampleSrc\src\main\resources\mybatis\mapper\UserMapper.xml -> src/main/resources/mybatis/mapper/UserMapper.xml
2025-09-13 22:43:56,341 - SourceAnalyzer - DEBUG - logger.py:64 - 메모리 매핑 테이블 키들: ['src/com/example/dynamicquery/UserMapper.xml', 'src/main/resources/mybatis/mapper/ImplicitJoinMapper.xml', 'src/main/resources/mybatis/mapper/ImplicitJoinTestMapper.xml', 'src/main/resources/mybatis/mapper/MixedErrorMapper.xml', 'src/main/resources/mybatis/mapper/ProductMapper.xml', 'src/main/resources/mybatis/mapper/UserMapper.xml']
2025-09-13 22:43:56,341 - SourceAnalyzer - DEBUG - logger.py:64 - 메모리에서 file_id 조회 성공: src/main/resources/mybatis/mapper/UserMapper.xml -> 27
2025-09-13 22:43:56,341 - SourceAnalyzer - DEBUG - logger.py:64 - 파일 ID 조회 성공: 27
2025-09-13 22:43:56,341 - SourceAnalyzer - DEBUG - logger.py:64 - 컴포넌트 저장 시도: getUserActivityAnalysis (select) -> SQL_SELECT
2025-09-13 22:43:56,341 - SourceAnalyzer - DEBUG - logger.py:64 - Upsert 실행: components
2025-09-13 22:43:56,341 - SourceAnalyzer - DEBUG - logger.py:64 - 데이터: {'project_id': 1, 'component_type': 'SQL_SELECT', 'component_name': 'getUserActivityAnalysis', 'parent_id': None, 'layer': 'SQL', 'file_id': 27, 'line_start': 1, 'line_end': 1, 'hash_value': '84cedac45f22b63747ce01c5da813398', 'has_error': 'N', 'error_message': None, 'del_yn': 'N'}
2025-09-13 22:43:56,341 - SourceAnalyzer - DEBUG - logger.py:64 - Components upsert 시작: getUserActivityAnalysis (SQL_SELECT)
2025-09-13 22:43:56,341 - SourceAnalyzer - DEBUG - logger.py:64 - 기존 레코드 확인 쿼리: 
                    SELECT component_id FROM components 
                    WHERE project_id = ? AND component_name = ? AND file_id = ?
                    
2025-09-13 22:43:56,341 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 파라미터: (1, 'getUserActivityAnalysis', 27)
2025-09-13 22:43:56,341 - SourceAnalyzer - DEBUG - logger.py:64 - 기존 레코드 조회 결과: <sqlite3.Row object at 0x00000257905C7F40>
2025-09-13 22:43:56,341 - SourceAnalyzer - DEBUG - logger.py:64 - UPDATE 쿼리: 
                        UPDATE components SET component_type = ?, parent_id = ?, layer = ?, line_start = ?, line_end = ?, hash_value = ?, has_error = ?, error_message = ?, del_yn = ?
                        WHERE component_id = ?
                        
2025-09-13 22:43:56,341 - SourceAnalyzer - DEBUG - logger.py:64 - UPDATE 파라미터: ['SQL_SELECT', None, 'SQL', 1, 1, '84cedac45f22b63747ce01c5da813398', 'N', None, 'N', 601]
2025-09-13 22:43:56,341 - SourceAnalyzer - DEBUG - logger.py:64 - UPDATE 실행 완료: component_id = 601
2025-09-13 22:43:56,341 - SourceAnalyzer - DEBUG - logger.py:64 - 컴포넌트 저장 완료: getUserActivityAnalysis (ID: 601)
2025-09-13 22:43:56,341 - SourceAnalyzer - DEBUG - logger.py:64 - 컴포넌트 저장 결과: component_id = 601
2025-09-13 22:43:56,341 - SourceAnalyzer - DEBUG - logger.py:64 - SQL Content 저장 시작: getUserActivityAnalysis (component_id: 601)
2025-09-13 22:43:56,341 - SourceAnalyzer - DEBUG - logger.py:64 - SQL Content 상대경로: src/main/resources/mybatis/mapper
2025-09-13 22:43:56,341 - SourceAnalyzer - WARNING - logger.py:72 - SQL Content 저장 중 예외 발생 (무시하고 계속 진행): getUserActivityAnalysis - 'sql_query'
2025-09-13 22:43:56,342 - SourceAnalyzer - DEBUG - logger.py:64 - SQL 쿼리 처리 완료: getUserActivityAnalysis
2025-09-13 22:43:56,342 - SourceAnalyzer - DEBUG - logger.py:64 - SQL 쿼리 처리 루프 시작: 9/20
2025-09-13 22:43:56,342 - SourceAnalyzer - DEBUG - logger.py:64 - SQL 쿼리 처리 시작: searchUsersAdvanced (select)
2025-09-13 22:43:56,342 - SourceAnalyzer - DEBUG - logger.py:64 - GET XML ID 조회: D:\Analyzer\CreateMetaDb\projects\sampleSrc\src\main\resources\mybatis\mapper\UserMapper.xml -> src/main/resources/mybatis/mapper/UserMapper.xml
2025-09-13 22:43:56,342 - SourceAnalyzer - DEBUG - logger.py:64 - 메모리 매핑 테이블 키들: ['src/com/example/dynamicquery/UserMapper.xml', 'src/main/resources/mybatis/mapper/ImplicitJoinMapper.xml', 'src/main/resources/mybatis/mapper/ImplicitJoinTestMapper.xml', 'src/main/resources/mybatis/mapper/MixedErrorMapper.xml', 'src/main/resources/mybatis/mapper/ProductMapper.xml', 'src/main/resources/mybatis/mapper/UserMapper.xml']
2025-09-13 22:43:56,342 - SourceAnalyzer - DEBUG - logger.py:64 - 메모리에서 file_id 조회 성공: src/main/resources/mybatis/mapper/UserMapper.xml -> 27
2025-09-13 22:43:56,342 - SourceAnalyzer - DEBUG - logger.py:64 - 파일 ID 조회 성공: 27
2025-09-13 22:43:56,342 - SourceAnalyzer - DEBUG - logger.py:64 - 컴포넌트 저장 시도: searchUsersAdvanced (select) -> SQL_SELECT
2025-09-13 22:43:56,342 - SourceAnalyzer - DEBUG - logger.py:64 - Upsert 실행: components
2025-09-13 22:43:56,342 - SourceAnalyzer - DEBUG - logger.py:64 - 데이터: {'project_id': 1, 'component_type': 'SQL_SELECT', 'component_name': 'searchUsersAdvanced', 'parent_id': None, 'layer': 'SQL', 'file_id': 27, 'line_start': 1, 'line_end': 1, 'hash_value': 'a719dca1cd796e7b4930b665cef5ea19', 'has_error': 'N', 'error_message': None, 'del_yn': 'N'}
2025-09-13 22:43:56,342 - SourceAnalyzer - DEBUG - logger.py:64 - Components upsert 시작: searchUsersAdvanced (SQL_SELECT)
2025-09-13 22:43:56,342 - SourceAnalyzer - DEBUG - logger.py:64 - 기존 레코드 확인 쿼리: 
                    SELECT component_id FROM components 
                    WHERE project_id = ? AND component_name = ? AND file_id = ?
                    
2025-09-13 22:43:56,342 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 파라미터: (1, 'searchUsersAdvanced', 27)
2025-09-13 22:43:56,342 - SourceAnalyzer - DEBUG - logger.py:64 - 기존 레코드 조회 결과: <sqlite3.Row object at 0x00000257905C7A60>
2025-09-13 22:43:56,342 - SourceAnalyzer - DEBUG - logger.py:64 - UPDATE 쿼리: 
                        UPDATE components SET component_type = ?, parent_id = ?, layer = ?, line_start = ?, line_end = ?, hash_value = ?, has_error = ?, error_message = ?, del_yn = ?
                        WHERE component_id = ?
                        
2025-09-13 22:43:56,342 - SourceAnalyzer - DEBUG - logger.py:64 - UPDATE 파라미터: ['SQL_SELECT', None, 'SQL', 1, 1, 'a719dca1cd796e7b4930b665cef5ea19', 'N', None, 'N', 602]
2025-09-13 22:43:56,342 - SourceAnalyzer - DEBUG - logger.py:64 - UPDATE 실행 완료: component_id = 602
2025-09-13 22:43:56,342 - SourceAnalyzer - DEBUG - logger.py:64 - 컴포넌트 저장 완료: searchUsersAdvanced (ID: 602)
2025-09-13 22:43:56,342 - SourceAnalyzer - DEBUG - logger.py:64 - 컴포넌트 저장 결과: component_id = 602
2025-09-13 22:43:56,342 - SourceAnalyzer - DEBUG - logger.py:64 - SQL Content 저장 시작: searchUsersAdvanced (component_id: 602)
2025-09-13 22:43:56,342 - SourceAnalyzer - DEBUG - logger.py:64 - SQL Content 상대경로: src/main/resources/mybatis/mapper
2025-09-13 22:43:56,342 - SourceAnalyzer - WARNING - logger.py:72 - SQL Content 저장 중 예외 발생 (무시하고 계속 진행): searchUsersAdvanced - 'sql_query'
2025-09-13 22:43:56,342 - SourceAnalyzer - DEBUG - logger.py:64 - SQL 쿼리 처리 완료: searchUsersAdvanced
2025-09-13 22:43:56,342 - SourceAnalyzer - DEBUG - logger.py:64 - SQL 쿼리 처리 루프 시작: 10/20
2025-09-13 22:43:56,342 - SourceAnalyzer - DEBUG - logger.py:64 - SQL 쿼리 처리 시작: getUserGroupStatistics (select)
2025-09-13 22:43:56,343 - SourceAnalyzer - DEBUG - logger.py:64 - GET XML ID 조회: D:\Analyzer\CreateMetaDb\projects\sampleSrc\src\main\resources\mybatis\mapper\UserMapper.xml -> src/main/resources/mybatis/mapper/UserMapper.xml
2025-09-13 22:43:56,343 - SourceAnalyzer - DEBUG - logger.py:64 - 메모리 매핑 테이블 키들: ['src/com/example/dynamicquery/UserMapper.xml', 'src/main/resources/mybatis/mapper/ImplicitJoinMapper.xml', 'src/main/resources/mybatis/mapper/ImplicitJoinTestMapper.xml', 'src/main/resources/mybatis/mapper/MixedErrorMapper.xml', 'src/main/resources/mybatis/mapper/ProductMapper.xml', 'src/main/resources/mybatis/mapper/UserMapper.xml']
2025-09-13 22:43:56,343 - SourceAnalyzer - DEBUG - logger.py:64 - 메모리에서 file_id 조회 성공: src/main/resources/mybatis/mapper/UserMapper.xml -> 27
2025-09-13 22:43:56,343 - SourceAnalyzer - DEBUG - logger.py:64 - 파일 ID 조회 성공: 27
2025-09-13 22:43:56,343 - SourceAnalyzer - DEBUG - logger.py:64 - 컴포넌트 저장 시도: getUserGroupStatistics (select) -> SQL_SELECT
2025-09-13 22:43:56,343 - SourceAnalyzer - DEBUG - logger.py:64 - Upsert 실행: components
2025-09-13 22:43:56,343 - SourceAnalyzer - DEBUG - logger.py:64 - 데이터: {'project_id': 1, 'component_type': 'SQL_SELECT', 'component_name': 'getUserGroupStatistics', 'parent_id': None, 'layer': 'SQL', 'file_id': 27, 'line_start': 1, 'line_end': 1, 'hash_value': '1efc423ae43c36ab7549247425f9e749', 'has_error': 'N', 'error_message': None, 'del_yn': 'N'}
2025-09-13 22:43:56,343 - SourceAnalyzer - DEBUG - logger.py:64 - Components upsert 시작: getUserGroupStatistics (SQL_SELECT)
2025-09-13 22:43:56,343 - SourceAnalyzer - DEBUG - logger.py:64 - 기존 레코드 확인 쿼리: 
                    SELECT component_id FROM components 
                    WHERE project_id = ? AND component_name = ? AND file_id = ?
                    
2025-09-13 22:43:56,343 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 파라미터: (1, 'getUserGroupStatistics', 27)
2025-09-13 22:43:56,343 - SourceAnalyzer - DEBUG - logger.py:64 - 기존 레코드 조회 결과: <sqlite3.Row object at 0x00000257905C7580>
2025-09-13 22:43:56,343 - SourceAnalyzer - DEBUG - logger.py:64 - UPDATE 쿼리: 
                        UPDATE components SET component_type = ?, parent_id = ?, layer = ?, line_start = ?, line_end = ?, hash_value = ?, has_error = ?, error_message = ?, del_yn = ?
                        WHERE component_id = ?
                        
2025-09-13 22:43:56,343 - SourceAnalyzer - DEBUG - logger.py:64 - UPDATE 파라미터: ['SQL_SELECT', None, 'SQL', 1, 1, '1efc423ae43c36ab7549247425f9e749', 'N', None, 'N', 603]
2025-09-13 22:43:56,343 - SourceAnalyzer - DEBUG - logger.py:64 - UPDATE 실행 완료: component_id = 603
2025-09-13 22:43:56,343 - SourceAnalyzer - DEBUG - logger.py:64 - 컴포넌트 저장 완료: getUserGroupStatistics (ID: 603)
2025-09-13 22:43:56,343 - SourceAnalyzer - DEBUG - logger.py:64 - 컴포넌트 저장 결과: component_id = 603
2025-09-13 22:43:56,343 - SourceAnalyzer - DEBUG - logger.py:64 - SQL Content 저장 시작: getUserGroupStatistics (component_id: 603)
2025-09-13 22:43:56,343 - SourceAnalyzer - DEBUG - logger.py:64 - SQL Content 상대경로: src/main/resources/mybatis/mapper
2025-09-13 22:43:56,343 - SourceAnalyzer - WARNING - logger.py:72 - SQL Content 저장 중 예외 발생 (무시하고 계속 진행): getUserGroupStatistics - 'sql_query'
2025-09-13 22:43:56,343 - SourceAnalyzer - DEBUG - logger.py:64 - SQL 쿼리 처리 완료: getUserGroupStatistics
2025-09-13 22:43:56,343 - SourceAnalyzer - DEBUG - logger.py:64 - SQL 쿼리 처리 루프 시작: 11/20
2025-09-13 22:43:56,343 - SourceAnalyzer - DEBUG - logger.py:64 - SQL 쿼리 처리 시작: getUserWithPreferences (select)
2025-09-13 22:43:56,343 - SourceAnalyzer - DEBUG - logger.py:64 - GET XML ID 조회: D:\Analyzer\CreateMetaDb\projects\sampleSrc\src\main\resources\mybatis\mapper\UserMapper.xml -> src/main/resources/mybatis/mapper/UserMapper.xml
2025-09-13 22:43:56,343 - SourceAnalyzer - DEBUG - logger.py:64 - 메모리 매핑 테이블 키들: ['src/com/example/dynamicquery/UserMapper.xml', 'src/main/resources/mybatis/mapper/ImplicitJoinMapper.xml', 'src/main/resources/mybatis/mapper/ImplicitJoinTestMapper.xml', 'src/main/resources/mybatis/mapper/MixedErrorMapper.xml', 'src/main/resources/mybatis/mapper/ProductMapper.xml', 'src/main/resources/mybatis/mapper/UserMapper.xml']
2025-09-13 22:43:56,343 - SourceAnalyzer - DEBUG - logger.py:64 - 메모리에서 file_id 조회 성공: src/main/resources/mybatis/mapper/UserMapper.xml -> 27
2025-09-13 22:43:56,343 - SourceAnalyzer - DEBUG - logger.py:64 - 파일 ID 조회 성공: 27
2025-09-13 22:43:56,343 - SourceAnalyzer - DEBUG - logger.py:64 - 컴포넌트 저장 시도: getUserWithPreferences (select) -> SQL_SELECT
2025-09-13 22:43:56,343 - SourceAnalyzer - DEBUG - logger.py:64 - Upsert 실행: components
2025-09-13 22:43:56,343 - SourceAnalyzer - DEBUG - logger.py:64 - 데이터: {'project_id': 1, 'component_type': 'SQL_SELECT', 'component_name': 'getUserWithPreferences', 'parent_id': None, 'layer': 'SQL', 'file_id': 27, 'line_start': 1, 'line_end': 1, 'hash_value': 'b3141c4b476875b9d03bb6505c044cc7', 'has_error': 'N', 'error_message': None, 'del_yn': 'N'}
2025-09-13 22:43:56,343 - SourceAnalyzer - DEBUG - logger.py:64 - Components upsert 시작: getUserWithPreferences (SQL_SELECT)
2025-09-13 22:43:56,343 - SourceAnalyzer - DEBUG - logger.py:64 - 기존 레코드 확인 쿼리: 
                    SELECT component_id FROM components 
                    WHERE project_id = ? AND component_name = ? AND file_id = ?
                    
2025-09-13 22:43:56,344 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 파라미터: (1, 'getUserWithPreferences', 27)
2025-09-13 22:43:56,344 - SourceAnalyzer - DEBUG - logger.py:64 - 기존 레코드 조회 결과: <sqlite3.Row object at 0x00000257905C7B80>
2025-09-13 22:43:56,344 - SourceAnalyzer - DEBUG - logger.py:64 - UPDATE 쿼리: 
                        UPDATE components SET component_type = ?, parent_id = ?, layer = ?, line_start = ?, line_end = ?, hash_value = ?, has_error = ?, error_message = ?, del_yn = ?
                        WHERE component_id = ?
                        
2025-09-13 22:43:56,344 - SourceAnalyzer - DEBUG - logger.py:64 - UPDATE 파라미터: ['SQL_SELECT', None, 'SQL', 1, 1, 'b3141c4b476875b9d03bb6505c044cc7', 'N', None, 'N', 604]
2025-09-13 22:43:56,344 - SourceAnalyzer - DEBUG - logger.py:64 - UPDATE 실행 완료: component_id = 604
2025-09-13 22:43:56,344 - SourceAnalyzer - DEBUG - logger.py:64 - 컴포넌트 저장 완료: getUserWithPreferences (ID: 604)
2025-09-13 22:43:56,344 - SourceAnalyzer - DEBUG - logger.py:64 - 컴포넌트 저장 결과: component_id = 604
2025-09-13 22:43:56,344 - SourceAnalyzer - DEBUG - logger.py:64 - SQL Content 저장 시작: getUserWithPreferences (component_id: 604)
2025-09-13 22:43:56,344 - SourceAnalyzer - DEBUG - logger.py:64 - SQL Content 상대경로: src/main/resources/mybatis/mapper
2025-09-13 22:43:56,344 - SourceAnalyzer - WARNING - logger.py:72 - SQL Content 저장 중 예외 발생 (무시하고 계속 진행): getUserWithPreferences - 'sql_query'
2025-09-13 22:43:56,344 - SourceAnalyzer - DEBUG - logger.py:64 - SQL 쿼리 처리 완료: getUserWithPreferences
2025-09-13 22:43:56,344 - SourceAnalyzer - DEBUG - logger.py:64 - SQL 쿼리 처리 루프 시작: 12/20
2025-09-13 22:43:56,344 - SourceAnalyzer - DEBUG - logger.py:64 - SQL 쿼리 처리 시작: getUserWithPreferencesAndType (select)
2025-09-13 22:43:56,344 - SourceAnalyzer - DEBUG - logger.py:64 - GET XML ID 조회: D:\Analyzer\CreateMetaDb\projects\sampleSrc\src\main\resources\mybatis\mapper\UserMapper.xml -> src/main/resources/mybatis/mapper/UserMapper.xml
2025-09-13 22:43:56,344 - SourceAnalyzer - DEBUG - logger.py:64 - 메모리 매핑 테이블 키들: ['src/com/example/dynamicquery/UserMapper.xml', 'src/main/resources/mybatis/mapper/ImplicitJoinMapper.xml', 'src/main/resources/mybatis/mapper/ImplicitJoinTestMapper.xml', 'src/main/resources/mybatis/mapper/MixedErrorMapper.xml', 'src/main/resources/mybatis/mapper/ProductMapper.xml', 'src/main/resources/mybatis/mapper/UserMapper.xml']
2025-09-13 22:43:56,344 - SourceAnalyzer - DEBUG - logger.py:64 - 메모리에서 file_id 조회 성공: src/main/resources/mybatis/mapper/UserMapper.xml -> 27
2025-09-13 22:43:56,344 - SourceAnalyzer - DEBUG - logger.py:64 - 파일 ID 조회 성공: 27
2025-09-13 22:43:56,344 - SourceAnalyzer - DEBUG - logger.py:64 - 컴포넌트 저장 시도: getUserWithPreferencesAndType (select) -> SQL_SELECT
2025-09-13 22:43:56,344 - SourceAnalyzer - DEBUG - logger.py:64 - Upsert 실행: components
2025-09-13 22:43:56,344 - SourceAnalyzer - DEBUG - logger.py:64 - 데이터: {'project_id': 1, 'component_type': 'SQL_SELECT', 'component_name': 'getUserWithPreferencesAndType', 'parent_id': None, 'layer': 'SQL', 'file_id': 27, 'line_start': 1, 'line_end': 1, 'hash_value': '7c4ad7f3890026dd9b4175d999afd2cb', 'has_error': 'N', 'error_message': None, 'del_yn': 'N'}
2025-09-13 22:43:56,344 - SourceAnalyzer - DEBUG - logger.py:64 - Components upsert 시작: getUserWithPreferencesAndType (SQL_SELECT)
2025-09-13 22:43:56,344 - SourceAnalyzer - DEBUG - logger.py:64 - 기존 레코드 확인 쿼리: 
                    SELECT component_id FROM components 
                    WHERE project_id = ? AND component_name = ? AND file_id = ?
                    
2025-09-13 22:43:56,344 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 파라미터: (1, 'getUserWithPreferencesAndType', 27)
2025-09-13 22:43:56,344 - SourceAnalyzer - DEBUG - logger.py:64 - 기존 레코드 조회 결과: <sqlite3.Row object at 0x00000257905C64D0>
2025-09-13 22:43:56,344 - SourceAnalyzer - DEBUG - logger.py:64 - UPDATE 쿼리: 
                        UPDATE components SET component_type = ?, parent_id = ?, layer = ?, line_start = ?, line_end = ?, hash_value = ?, has_error = ?, error_message = ?, del_yn = ?
                        WHERE component_id = ?
                        
2025-09-13 22:43:56,344 - SourceAnalyzer - DEBUG - logger.py:64 - UPDATE 파라미터: ['SQL_SELECT', None, 'SQL', 1, 1, '7c4ad7f3890026dd9b4175d999afd2cb', 'N', None, 'N', 605]
2025-09-13 22:43:56,344 - SourceAnalyzer - DEBUG - logger.py:64 - UPDATE 실행 완료: component_id = 605
2025-09-13 22:43:56,344 - SourceAnalyzer - DEBUG - logger.py:64 - 컴포넌트 저장 완료: getUserWithPreferencesAndType (ID: 605)
2025-09-13 22:43:56,344 - SourceAnalyzer - DEBUG - logger.py:64 - 컴포넌트 저장 결과: component_id = 605
2025-09-13 22:43:56,345 - SourceAnalyzer - DEBUG - logger.py:64 - SQL Content 저장 시작: getUserWithPreferencesAndType (component_id: 605)
2025-09-13 22:43:56,345 - SourceAnalyzer - DEBUG - logger.py:64 - SQL Content 상대경로: src/main/resources/mybatis/mapper
2025-09-13 22:43:56,345 - SourceAnalyzer - WARNING - logger.py:72 - SQL Content 저장 중 예외 발생 (무시하고 계속 진행): getUserWithPreferencesAndType - 'sql_query'
2025-09-13 22:43:56,345 - SourceAnalyzer - DEBUG - logger.py:64 - SQL 쿼리 처리 완료: getUserWithPreferencesAndType
2025-09-13 22:43:56,345 - SourceAnalyzer - DEBUG - logger.py:64 - SQL 쿼리 처리 루프 시작: 13/20
2025-09-13 22:43:56,345 - SourceAnalyzer - DEBUG - logger.py:64 - SQL 쿼리 처리 시작: getUserActivityLog (select)
2025-09-13 22:43:56,345 - SourceAnalyzer - DEBUG - logger.py:64 - GET XML ID 조회: D:\Analyzer\CreateMetaDb\projects\sampleSrc\src\main\resources\mybatis\mapper\UserMapper.xml -> src/main/resources/mybatis/mapper/UserMapper.xml
2025-09-13 22:43:56,345 - SourceAnalyzer - DEBUG - logger.py:64 - 메모리 매핑 테이블 키들: ['src/com/example/dynamicquery/UserMapper.xml', 'src/main/resources/mybatis/mapper/ImplicitJoinMapper.xml', 'src/main/resources/mybatis/mapper/ImplicitJoinTestMapper.xml', 'src/main/resources/mybatis/mapper/MixedErrorMapper.xml', 'src/main/resources/mybatis/mapper/ProductMapper.xml', 'src/main/resources/mybatis/mapper/UserMapper.xml']
2025-09-13 22:43:56,345 - SourceAnalyzer - DEBUG - logger.py:64 - 메모리에서 file_id 조회 성공: src/main/resources/mybatis/mapper/UserMapper.xml -> 27
2025-09-13 22:43:56,345 - SourceAnalyzer - DEBUG - logger.py:64 - 파일 ID 조회 성공: 27
2025-09-13 22:43:56,345 - SourceAnalyzer - DEBUG - logger.py:64 - 컴포넌트 저장 시도: getUserActivityLog (select) -> SQL_SELECT
2025-09-13 22:43:56,345 - SourceAnalyzer - DEBUG - logger.py:64 - Upsert 실행: components
2025-09-13 22:43:56,345 - SourceAnalyzer - DEBUG - logger.py:64 - 데이터: {'project_id': 1, 'component_type': 'SQL_SELECT', 'component_name': 'getUserActivityLog', 'parent_id': None, 'layer': 'SQL', 'file_id': 27, 'line_start': 1, 'line_end': 1, 'hash_value': '844c695c4874dc915641622e5b2b125a', 'has_error': 'N', 'error_message': None, 'del_yn': 'N'}
2025-09-13 22:43:56,345 - SourceAnalyzer - DEBUG - logger.py:64 - Components upsert 시작: getUserActivityLog (SQL_SELECT)
2025-09-13 22:43:56,345 - SourceAnalyzer - DEBUG - logger.py:64 - 기존 레코드 확인 쿼리: 
                    SELECT component_id FROM components 
                    WHERE project_id = ? AND component_name = ? AND file_id = ?
                    
2025-09-13 22:43:56,345 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 파라미터: (1, 'getUserActivityLog', 27)
2025-09-13 22:43:56,345 - SourceAnalyzer - DEBUG - logger.py:64 - 기존 레코드 조회 결과: <sqlite3.Row object at 0x00000257905C5F30>
2025-09-13 22:43:56,345 - SourceAnalyzer - DEBUG - logger.py:64 - UPDATE 쿼리: 
                        UPDATE components SET component_type = ?, parent_id = ?, layer = ?, line_start = ?, line_end = ?, hash_value = ?, has_error = ?, error_message = ?, del_yn = ?
                        WHERE component_id = ?
                        
2025-09-13 22:43:56,345 - SourceAnalyzer - DEBUG - logger.py:64 - UPDATE 파라미터: ['SQL_SELECT', None, 'SQL', 1, 1, '844c695c4874dc915641622e5b2b125a', 'N', None, 'N', 606]
2025-09-13 22:43:56,345 - SourceAnalyzer - DEBUG - logger.py:64 - UPDATE 실행 완료: component_id = 606
2025-09-13 22:43:56,345 - SourceAnalyzer - DEBUG - logger.py:64 - 컴포넌트 저장 완료: getUserActivityLog (ID: 606)
2025-09-13 22:43:56,345 - SourceAnalyzer - DEBUG - logger.py:64 - 컴포넌트 저장 결과: component_id = 606
2025-09-13 22:43:56,345 - SourceAnalyzer - DEBUG - logger.py:64 - SQL Content 저장 시작: getUserActivityLog (component_id: 606)
2025-09-13 22:43:56,345 - SourceAnalyzer - DEBUG - logger.py:64 - SQL Content 상대경로: src/main/resources/mybatis/mapper
2025-09-13 22:43:56,345 - SourceAnalyzer - WARNING - logger.py:72 - SQL Content 저장 중 예외 발생 (무시하고 계속 진행): getUserActivityLog - 'sql_query'
2025-09-13 22:43:56,345 - SourceAnalyzer - DEBUG - logger.py:64 - SQL 쿼리 처리 완료: getUserActivityLog
2025-09-13 22:43:56,345 - SourceAnalyzer - DEBUG - logger.py:64 - SQL 쿼리 처리 루프 시작: 14/20
2025-09-13 22:43:56,345 - SourceAnalyzer - DEBUG - logger.py:64 - SQL 쿼리 처리 시작: getUserSettings (select)
2025-09-13 22:43:56,345 - SourceAnalyzer - DEBUG - logger.py:64 - GET XML ID 조회: D:\Analyzer\CreateMetaDb\projects\sampleSrc\src\main\resources\mybatis\mapper\UserMapper.xml -> src/main/resources/mybatis/mapper/UserMapper.xml
2025-09-13 22:43:56,346 - SourceAnalyzer - DEBUG - logger.py:64 - 메모리 매핑 테이블 키들: ['src/com/example/dynamicquery/UserMapper.xml', 'src/main/resources/mybatis/mapper/ImplicitJoinMapper.xml', 'src/main/resources/mybatis/mapper/ImplicitJoinTestMapper.xml', 'src/main/resources/mybatis/mapper/MixedErrorMapper.xml', 'src/main/resources/mybatis/mapper/ProductMapper.xml', 'src/main/resources/mybatis/mapper/UserMapper.xml']
2025-09-13 22:43:56,346 - SourceAnalyzer - DEBUG - logger.py:64 - 메모리에서 file_id 조회 성공: src/main/resources/mybatis/mapper/UserMapper.xml -> 27
2025-09-13 22:43:56,346 - SourceAnalyzer - DEBUG - logger.py:64 - 파일 ID 조회 성공: 27
2025-09-13 22:43:56,346 - SourceAnalyzer - DEBUG - logger.py:64 - 컴포넌트 저장 시도: getUserSettings (select) -> SQL_SELECT
2025-09-13 22:43:56,346 - SourceAnalyzer - DEBUG - logger.py:64 - Upsert 실행: components
2025-09-13 22:43:56,346 - SourceAnalyzer - DEBUG - logger.py:64 - 데이터: {'project_id': 1, 'component_type': 'SQL_SELECT', 'component_name': 'getUserSettings', 'parent_id': None, 'layer': 'SQL', 'file_id': 27, 'line_start': 1, 'line_end': 1, 'hash_value': 'a69d5994050f14e975f1e2759a68adbc', 'has_error': 'N', 'error_message': None, 'del_yn': 'N'}
2025-09-13 22:43:56,346 - SourceAnalyzer - DEBUG - logger.py:64 - Components upsert 시작: getUserSettings (SQL_SELECT)
2025-09-13 22:43:56,346 - SourceAnalyzer - DEBUG - logger.py:64 - 기존 레코드 확인 쿼리: 
                    SELECT component_id FROM components 
                    WHERE project_id = ? AND component_name = ? AND file_id = ?
                    
2025-09-13 22:43:56,346 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 파라미터: (1, 'getUserSettings', 27)
2025-09-13 22:43:56,346 - SourceAnalyzer - DEBUG - logger.py:64 - 기존 레코드 조회 결과: <sqlite3.Row object at 0x00000257905C7F40>
2025-09-13 22:43:56,346 - SourceAnalyzer - DEBUG - logger.py:64 - UPDATE 쿼리: 
                        UPDATE components SET component_type = ?, parent_id = ?, layer = ?, line_start = ?, line_end = ?, hash_value = ?, has_error = ?, error_message = ?, del_yn = ?
                        WHERE component_id = ?
                        
2025-09-13 22:43:56,346 - SourceAnalyzer - DEBUG - logger.py:64 - UPDATE 파라미터: ['SQL_SELECT', None, 'SQL', 1, 1, 'a69d5994050f14e975f1e2759a68adbc', 'N', None, 'N', 607]
2025-09-13 22:43:56,346 - SourceAnalyzer - DEBUG - logger.py:64 - UPDATE 실행 완료: component_id = 607
2025-09-13 22:43:56,346 - SourceAnalyzer - DEBUG - logger.py:64 - 컴포넌트 저장 완료: getUserSettings (ID: 607)
2025-09-13 22:43:56,346 - SourceAnalyzer - DEBUG - logger.py:64 - 컴포넌트 저장 결과: component_id = 607
2025-09-13 22:43:56,346 - SourceAnalyzer - DEBUG - logger.py:64 - SQL Content 저장 시작: getUserSettings (component_id: 607)
2025-09-13 22:43:56,346 - SourceAnalyzer - DEBUG - logger.py:64 - SQL Content 상대경로: src/main/resources/mybatis/mapper
2025-09-13 22:43:56,346 - SourceAnalyzer - WARNING - logger.py:72 - SQL Content 저장 중 예외 발생 (무시하고 계속 진행): getUserSettings - 'sql_query'
2025-09-13 22:43:56,346 - SourceAnalyzer - DEBUG - logger.py:64 - SQL 쿼리 처리 완료: getUserSettings
2025-09-13 22:43:56,346 - SourceAnalyzer - DEBUG - logger.py:64 - SQL 쿼리 처리 루프 시작: 15/20
2025-09-13 22:43:56,346 - SourceAnalyzer - DEBUG - logger.py:64 - SQL 쿼리 처리 시작: getUserWithNewTable (select)
2025-09-13 22:43:56,346 - SourceAnalyzer - DEBUG - logger.py:64 - GET XML ID 조회: D:\Analyzer\CreateMetaDb\projects\sampleSrc\src\main\resources\mybatis\mapper\UserMapper.xml -> src/main/resources/mybatis/mapper/UserMapper.xml
2025-09-13 22:43:56,346 - SourceAnalyzer - DEBUG - logger.py:64 - 메모리 매핑 테이블 키들: ['src/com/example/dynamicquery/UserMapper.xml', 'src/main/resources/mybatis/mapper/ImplicitJoinMapper.xml', 'src/main/resources/mybatis/mapper/ImplicitJoinTestMapper.xml', 'src/main/resources/mybatis/mapper/MixedErrorMapper.xml', 'src/main/resources/mybatis/mapper/ProductMapper.xml', 'src/main/resources/mybatis/mapper/UserMapper.xml']
2025-09-13 22:43:56,346 - SourceAnalyzer - DEBUG - logger.py:64 - 메모리에서 file_id 조회 성공: src/main/resources/mybatis/mapper/UserMapper.xml -> 27
2025-09-13 22:43:56,346 - SourceAnalyzer - DEBUG - logger.py:64 - 파일 ID 조회 성공: 27
2025-09-13 22:43:56,346 - SourceAnalyzer - DEBUG - logger.py:64 - 컴포넌트 저장 시도: getUserWithNewTable (select) -> SQL_SELECT
2025-09-13 22:43:56,346 - SourceAnalyzer - DEBUG - logger.py:64 - Upsert 실행: components
2025-09-13 22:43:56,346 - SourceAnalyzer - DEBUG - logger.py:64 - 데이터: {'project_id': 1, 'component_type': 'SQL_SELECT', 'component_name': 'getUserWithNewTable', 'parent_id': None, 'layer': 'SQL', 'file_id': 27, 'line_start': 1, 'line_end': 1, 'hash_value': '6821eed9badfb9faec65f9b432c81c64', 'has_error': 'N', 'error_message': None, 'del_yn': 'N'}
2025-09-13 22:43:56,346 - SourceAnalyzer - DEBUG - logger.py:64 - Components upsert 시작: getUserWithNewTable (SQL_SELECT)
2025-09-13 22:43:56,346 - SourceAnalyzer - DEBUG - logger.py:64 - 기존 레코드 확인 쿼리: 
                    SELECT component_id FROM components 
                    WHERE project_id = ? AND component_name = ? AND file_id = ?
                    
2025-09-13 22:43:56,347 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 파라미터: (1, 'getUserWithNewTable', 27)
2025-09-13 22:43:56,347 - SourceAnalyzer - DEBUG - logger.py:64 - 기존 레코드 조회 결과: <sqlite3.Row object at 0x00000257905C7A60>
2025-09-13 22:43:56,347 - SourceAnalyzer - DEBUG - logger.py:64 - UPDATE 쿼리: 
                        UPDATE components SET component_type = ?, parent_id = ?, layer = ?, line_start = ?, line_end = ?, hash_value = ?, has_error = ?, error_message = ?, del_yn = ?
                        WHERE component_id = ?
                        
2025-09-13 22:43:56,347 - SourceAnalyzer - DEBUG - logger.py:64 - UPDATE 파라미터: ['SQL_SELECT', None, 'SQL', 1, 1, '6821eed9badfb9faec65f9b432c81c64', 'N', None, 'N', 610]
2025-09-13 22:43:56,347 - SourceAnalyzer - DEBUG - logger.py:64 - UPDATE 실행 완료: component_id = 610
2025-09-13 22:43:56,347 - SourceAnalyzer - DEBUG - logger.py:64 - 컴포넌트 저장 완료: getUserWithNewTable (ID: 610)
2025-09-13 22:43:56,347 - SourceAnalyzer - DEBUG - logger.py:64 - 컴포넌트 저장 결과: component_id = 610
2025-09-13 22:43:56,347 - SourceAnalyzer - DEBUG - logger.py:64 - SQL Content 저장 시작: getUserWithNewTable (component_id: 610)
2025-09-13 22:43:56,347 - SourceAnalyzer - DEBUG - logger.py:64 - SQL Content 상대경로: src/main/resources/mybatis/mapper
2025-09-13 22:43:56,347 - SourceAnalyzer - WARNING - logger.py:72 - SQL Content 저장 중 예외 발생 (무시하고 계속 진행): getUserWithNewTable - 'sql_query'
2025-09-13 22:43:56,347 - SourceAnalyzer - DEBUG - logger.py:64 - SQL 쿼리 처리 완료: getUserWithNewTable
2025-09-13 22:43:56,347 - SourceAnalyzer - DEBUG - logger.py:64 - SQL 쿼리 처리 루프 시작: 16/20
2025-09-13 22:43:56,347 - SourceAnalyzer - DEBUG - logger.py:64 - SQL 쿼리 처리 시작: insertUserDynamic (insert)
2025-09-13 22:43:56,347 - SourceAnalyzer - DEBUG - logger.py:64 - GET XML ID 조회: D:\Analyzer\CreateMetaDb\projects\sampleSrc\src\main\resources\mybatis\mapper\UserMapper.xml -> src/main/resources/mybatis/mapper/UserMapper.xml
2025-09-13 22:43:56,347 - SourceAnalyzer - DEBUG - logger.py:64 - 메모리 매핑 테이블 키들: ['src/com/example/dynamicquery/UserMapper.xml', 'src/main/resources/mybatis/mapper/ImplicitJoinMapper.xml', 'src/main/resources/mybatis/mapper/ImplicitJoinTestMapper.xml', 'src/main/resources/mybatis/mapper/MixedErrorMapper.xml', 'src/main/resources/mybatis/mapper/ProductMapper.xml', 'src/main/resources/mybatis/mapper/UserMapper.xml']
2025-09-13 22:43:56,347 - SourceAnalyzer - DEBUG - logger.py:64 - 메모리에서 file_id 조회 성공: src/main/resources/mybatis/mapper/UserMapper.xml -> 27
2025-09-13 22:43:56,347 - SourceAnalyzer - DEBUG - logger.py:64 - 파일 ID 조회 성공: 27
2025-09-13 22:43:56,347 - SourceAnalyzer - DEBUG - logger.py:64 - 컴포넌트 저장 시도: insertUserDynamic (insert) -> SQL_INSERT
2025-09-13 22:43:56,347 - SourceAnalyzer - DEBUG - logger.py:64 - Upsert 실행: components
2025-09-13 22:43:56,347 - SourceAnalyzer - DEBUG - logger.py:64 - 데이터: {'project_id': 1, 'component_type': 'SQL_INSERT', 'component_name': 'insertUserDynamic', 'parent_id': None, 'layer': 'SQL', 'file_id': 27, 'line_start': 1, 'line_end': 1, 'hash_value': '431803c67f8397af66112fbeb6fc054b', 'has_error': 'N', 'error_message': None, 'del_yn': 'N'}
2025-09-13 22:43:56,347 - SourceAnalyzer - DEBUG - logger.py:64 - Components upsert 시작: insertUserDynamic (SQL_INSERT)
2025-09-13 22:43:56,347 - SourceAnalyzer - DEBUG - logger.py:64 - 기존 레코드 확인 쿼리: 
                    SELECT component_id FROM components 
                    WHERE project_id = ? AND component_name = ? AND file_id = ?
                    
2025-09-13 22:43:56,347 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 파라미터: (1, 'insertUserDynamic', 27)
2025-09-13 22:43:56,347 - SourceAnalyzer - DEBUG - logger.py:64 - 기존 레코드 조회 결과: <sqlite3.Row object at 0x00000257905C7580>
2025-09-13 22:43:56,348 - SourceAnalyzer - DEBUG - logger.py:64 - UPDATE 쿼리: 
                        UPDATE components SET component_type = ?, parent_id = ?, layer = ?, line_start = ?, line_end = ?, hash_value = ?, has_error = ?, error_message = ?, del_yn = ?
                        WHERE component_id = ?
                        
2025-09-13 22:43:56,348 - SourceAnalyzer - DEBUG - logger.py:64 - UPDATE 파라미터: ['SQL_INSERT', None, 'SQL', 1, 1, '431803c67f8397af66112fbeb6fc054b', 'N', None, 'N', 596]
2025-09-13 22:43:56,348 - SourceAnalyzer - DEBUG - logger.py:64 - UPDATE 실행 완료: component_id = 596
2025-09-13 22:43:56,348 - SourceAnalyzer - DEBUG - logger.py:64 - 컴포넌트 저장 완료: insertUserDynamic (ID: 596)
2025-09-13 22:43:56,348 - SourceAnalyzer - DEBUG - logger.py:64 - 컴포넌트 저장 결과: component_id = 596
2025-09-13 22:43:56,348 - SourceAnalyzer - DEBUG - logger.py:64 - SQL Content 저장 시작: insertUserDynamic (component_id: 596)
2025-09-13 22:43:56,348 - SourceAnalyzer - DEBUG - logger.py:64 - SQL Content 상대경로: src/main/resources/mybatis/mapper
2025-09-13 22:43:56,348 - SourceAnalyzer - WARNING - logger.py:72 - SQL Content 저장 중 예외 발생 (무시하고 계속 진행): insertUserDynamic - 'sql_query'
2025-09-13 22:43:56,348 - SourceAnalyzer - DEBUG - logger.py:64 - SQL 쿼리 처리 완료: insertUserDynamic
2025-09-13 22:43:56,348 - SourceAnalyzer - DEBUG - logger.py:64 - SQL 쿼리 처리 루프 시작: 17/20
2025-09-13 22:43:56,348 - SourceAnalyzer - DEBUG - logger.py:64 - SQL 쿼리 처리 시작: insertUserPreferences (insert)
2025-09-13 22:43:56,348 - SourceAnalyzer - DEBUG - logger.py:64 - GET XML ID 조회: D:\Analyzer\CreateMetaDb\projects\sampleSrc\src\main\resources\mybatis\mapper\UserMapper.xml -> src/main/resources/mybatis/mapper/UserMapper.xml
2025-09-13 22:43:56,348 - SourceAnalyzer - DEBUG - logger.py:64 - 메모리 매핑 테이블 키들: ['src/com/example/dynamicquery/UserMapper.xml', 'src/main/resources/mybatis/mapper/ImplicitJoinMapper.xml', 'src/main/resources/mybatis/mapper/ImplicitJoinTestMapper.xml', 'src/main/resources/mybatis/mapper/MixedErrorMapper.xml', 'src/main/resources/mybatis/mapper/ProductMapper.xml', 'src/main/resources/mybatis/mapper/UserMapper.xml']
2025-09-13 22:43:56,348 - SourceAnalyzer - DEBUG - logger.py:64 - 메모리에서 file_id 조회 성공: src/main/resources/mybatis/mapper/UserMapper.xml -> 27
2025-09-13 22:43:56,348 - SourceAnalyzer - DEBUG - logger.py:64 - 파일 ID 조회 성공: 27
2025-09-13 22:43:56,348 - SourceAnalyzer - DEBUG - logger.py:64 - 컴포넌트 저장 시도: insertUserPreferences (insert) -> SQL_INSERT
2025-09-13 22:43:56,348 - SourceAnalyzer - DEBUG - logger.py:64 - Upsert 실행: components
2025-09-13 22:43:56,348 - SourceAnalyzer - DEBUG - logger.py:64 - 데이터: {'project_id': 1, 'component_type': 'SQL_INSERT', 'component_name': 'insertUserPreferences', 'parent_id': None, 'layer': 'SQL', 'file_id': 27, 'line_start': 1, 'line_end': 1, 'hash_value': '23e8c4a1a6f8860414fc2f78bbc492d3', 'has_error': 'N', 'error_message': None, 'del_yn': 'N'}
2025-09-13 22:43:56,348 - SourceAnalyzer - DEBUG - logger.py:64 - Components upsert 시작: insertUserPreferences (SQL_INSERT)
2025-09-13 22:43:56,348 - SourceAnalyzer - DEBUG - logger.py:64 - 기존 레코드 확인 쿼리: 
                    SELECT component_id FROM components 
                    WHERE project_id = ? AND component_name = ? AND file_id = ?
                    
2025-09-13 22:43:56,348 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 파라미터: (1, 'insertUserPreferences', 27)
2025-09-13 22:43:56,348 - SourceAnalyzer - DEBUG - logger.py:64 - 기존 레코드 조회 결과: <sqlite3.Row object at 0x00000257905C7B80>
2025-09-13 22:43:56,348 - SourceAnalyzer - DEBUG - logger.py:64 - UPDATE 쿼리: 
                        UPDATE components SET component_type = ?, parent_id = ?, layer = ?, line_start = ?, line_end = ?, hash_value = ?, has_error = ?, error_message = ?, del_yn = ?
                        WHERE component_id = ?
                        
2025-09-13 22:43:56,348 - SourceAnalyzer - DEBUG - logger.py:64 - UPDATE 파라미터: ['SQL_INSERT', None, 'SQL', 1, 1, '23e8c4a1a6f8860414fc2f78bbc492d3', 'N', None, 'N', 609]
2025-09-13 22:43:56,348 - SourceAnalyzer - DEBUG - logger.py:64 - UPDATE 실행 완료: component_id = 609
2025-09-13 22:43:56,349 - SourceAnalyzer - DEBUG - logger.py:64 - 컴포넌트 저장 완료: insertUserPreferences (ID: 609)
2025-09-13 22:43:56,349 - SourceAnalyzer - DEBUG - logger.py:64 - 컴포넌트 저장 결과: component_id = 609
2025-09-13 22:43:56,349 - SourceAnalyzer - DEBUG - logger.py:64 - SQL Content 저장 시작: insertUserPreferences (component_id: 609)
2025-09-13 22:43:56,349 - SourceAnalyzer - DEBUG - logger.py:64 - SQL Content 상대경로: src/main/resources/mybatis/mapper
2025-09-13 22:43:56,349 - SourceAnalyzer - WARNING - logger.py:72 - SQL Content 저장 중 예외 발생 (무시하고 계속 진행): insertUserPreferences - 'sql_query'
2025-09-13 22:43:56,349 - SourceAnalyzer - DEBUG - logger.py:64 - SQL 쿼리 처리 완료: insertUserPreferences
2025-09-13 22:43:56,349 - SourceAnalyzer - DEBUG - logger.py:64 - SQL 쿼리 처리 루프 시작: 18/20
2025-09-13 22:43:56,349 - SourceAnalyzer - DEBUG - logger.py:64 - SQL 쿼리 처리 시작: updateUserDynamic (update)
2025-09-13 22:43:56,349 - SourceAnalyzer - DEBUG - logger.py:64 - GET XML ID 조회: D:\Analyzer\CreateMetaDb\projects\sampleSrc\src\main\resources\mybatis\mapper\UserMapper.xml -> src/main/resources/mybatis/mapper/UserMapper.xml
2025-09-13 22:43:56,349 - SourceAnalyzer - DEBUG - logger.py:64 - 메모리 매핑 테이블 키들: ['src/com/example/dynamicquery/UserMapper.xml', 'src/main/resources/mybatis/mapper/ImplicitJoinMapper.xml', 'src/main/resources/mybatis/mapper/ImplicitJoinTestMapper.xml', 'src/main/resources/mybatis/mapper/MixedErrorMapper.xml', 'src/main/resources/mybatis/mapper/ProductMapper.xml', 'src/main/resources/mybatis/mapper/UserMapper.xml']
2025-09-13 22:43:56,349 - SourceAnalyzer - DEBUG - logger.py:64 - 메모리에서 file_id 조회 성공: src/main/resources/mybatis/mapper/UserMapper.xml -> 27
2025-09-13 22:43:56,349 - SourceAnalyzer - DEBUG - logger.py:64 - 파일 ID 조회 성공: 27
2025-09-13 22:43:56,349 - SourceAnalyzer - DEBUG - logger.py:64 - 컴포넌트 저장 시도: updateUserDynamic (update) -> SQL_UPDATE
2025-09-13 22:43:56,349 - SourceAnalyzer - DEBUG - logger.py:64 - Upsert 실행: components
2025-09-13 22:43:56,349 - SourceAnalyzer - DEBUG - logger.py:64 - 데이터: {'project_id': 1, 'component_type': 'SQL_UPDATE', 'component_name': 'updateUserDynamic', 'parent_id': None, 'layer': 'SQL', 'file_id': 27, 'line_start': 1, 'line_end': 1, 'hash_value': '0251d581016f96487f2bd9196804080b', 'has_error': 'N', 'error_message': None, 'del_yn': 'N'}
2025-09-13 22:43:56,349 - SourceAnalyzer - DEBUG - logger.py:64 - Components upsert 시작: updateUserDynamic (SQL_UPDATE)
2025-09-13 22:43:56,349 - SourceAnalyzer - DEBUG - logger.py:64 - 기존 레코드 확인 쿼리: 
                    SELECT component_id FROM components 
                    WHERE project_id = ? AND component_name = ? AND file_id = ?
                    
2025-09-13 22:43:56,349 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 파라미터: (1, 'updateUserDynamic', 27)
2025-09-13 22:43:56,349 - SourceAnalyzer - DEBUG - logger.py:64 - 기존 레코드 조회 결과: <sqlite3.Row object at 0x00000257905C64D0>
2025-09-13 22:43:56,349 - SourceAnalyzer - DEBUG - logger.py:64 - UPDATE 쿼리: 
                        UPDATE components SET component_type = ?, parent_id = ?, layer = ?, line_start = ?, line_end = ?, hash_value = ?, has_error = ?, error_message = ?, del_yn = ?
                        WHERE component_id = ?
                        
2025-09-13 22:43:56,349 - SourceAnalyzer - DEBUG - logger.py:64 - UPDATE 파라미터: ['SQL_UPDATE', None, 'SQL', 1, 1, '0251d581016f96487f2bd9196804080b', 'N', None, 'N', 595]
2025-09-13 22:43:56,349 - SourceAnalyzer - DEBUG - logger.py:64 - UPDATE 실행 완료: component_id = 595
2025-09-13 22:43:56,349 - SourceAnalyzer - DEBUG - logger.py:64 - 컴포넌트 저장 완료: updateUserDynamic (ID: 595)
2025-09-13 22:43:56,349 - SourceAnalyzer - DEBUG - logger.py:64 - 컴포넌트 저장 결과: component_id = 595
2025-09-13 22:43:56,349 - SourceAnalyzer - DEBUG - logger.py:64 - SQL Content 저장 시작: updateUserDynamic (component_id: 595)
2025-09-13 22:43:56,349 - SourceAnalyzer - DEBUG - logger.py:64 - SQL Content 상대경로: src/main/resources/mybatis/mapper
2025-09-13 22:43:56,349 - SourceAnalyzer - WARNING - logger.py:72 - SQL Content 저장 중 예외 발생 (무시하고 계속 진행): updateUserDynamic - 'sql_query'
2025-09-13 22:43:56,349 - SourceAnalyzer - DEBUG - logger.py:64 - SQL 쿼리 처리 완료: updateUserDynamic
2025-09-13 22:43:56,349 - SourceAnalyzer - DEBUG - logger.py:64 - SQL 쿼리 처리 루프 시작: 19/20
2025-09-13 22:43:56,349 - SourceAnalyzer - DEBUG - logger.py:64 - SQL 쿼리 처리 시작: updateUserPreferences (update)
2025-09-13 22:43:56,350 - SourceAnalyzer - DEBUG - logger.py:64 - GET XML ID 조회: D:\Analyzer\CreateMetaDb\projects\sampleSrc\src\main\resources\mybatis\mapper\UserMapper.xml -> src/main/resources/mybatis/mapper/UserMapper.xml
2025-09-13 22:43:56,350 - SourceAnalyzer - DEBUG - logger.py:64 - 메모리 매핑 테이블 키들: ['src/com/example/dynamicquery/UserMapper.xml', 'src/main/resources/mybatis/mapper/ImplicitJoinMapper.xml', 'src/main/resources/mybatis/mapper/ImplicitJoinTestMapper.xml', 'src/main/resources/mybatis/mapper/MixedErrorMapper.xml', 'src/main/resources/mybatis/mapper/ProductMapper.xml', 'src/main/resources/mybatis/mapper/UserMapper.xml']
2025-09-13 22:43:56,350 - SourceAnalyzer - DEBUG - logger.py:64 - 메모리에서 file_id 조회 성공: src/main/resources/mybatis/mapper/UserMapper.xml -> 27
2025-09-13 22:43:56,350 - SourceAnalyzer - DEBUG - logger.py:64 - 파일 ID 조회 성공: 27
2025-09-13 22:43:56,350 - SourceAnalyzer - DEBUG - logger.py:64 - 컴포넌트 저장 시도: updateUserPreferences (update) -> SQL_UPDATE
2025-09-13 22:43:56,350 - SourceAnalyzer - DEBUG - logger.py:64 - Upsert 실행: components
2025-09-13 22:43:56,350 - SourceAnalyzer - DEBUG - logger.py:64 - 데이터: {'project_id': 1, 'component_type': 'SQL_UPDATE', 'component_name': 'updateUserPreferences', 'parent_id': None, 'layer': 'SQL', 'file_id': 27, 'line_start': 1, 'line_end': 1, 'hash_value': '2c243cff67aa14183fa02bdfe2206dad', 'has_error': 'N', 'error_message': None, 'del_yn': 'N'}
2025-09-13 22:43:56,350 - SourceAnalyzer - DEBUG - logger.py:64 - Components upsert 시작: updateUserPreferences (SQL_UPDATE)
2025-09-13 22:43:56,350 - SourceAnalyzer - DEBUG - logger.py:64 - 기존 레코드 확인 쿼리: 
                    SELECT component_id FROM components 
                    WHERE project_id = ? AND component_name = ? AND file_id = ?
                    
2025-09-13 22:43:56,350 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 파라미터: (1, 'updateUserPreferences', 27)
2025-09-13 22:43:56,350 - SourceAnalyzer - DEBUG - logger.py:64 - 기존 레코드 조회 결과: <sqlite3.Row object at 0x00000257905C5F30>
2025-09-13 22:43:56,350 - SourceAnalyzer - DEBUG - logger.py:64 - UPDATE 쿼리: 
                        UPDATE components SET component_type = ?, parent_id = ?, layer = ?, line_start = ?, line_end = ?, hash_value = ?, has_error = ?, error_message = ?, del_yn = ?
                        WHERE component_id = ?
                        
2025-09-13 22:43:56,350 - SourceAnalyzer - DEBUG - logger.py:64 - UPDATE 파라미터: ['SQL_UPDATE', None, 'SQL', 1, 1, '2c243cff67aa14183fa02bdfe2206dad', 'N', None, 'N', 608]
2025-09-13 22:43:56,350 - SourceAnalyzer - DEBUG - logger.py:64 - UPDATE 실행 완료: component_id = 608
2025-09-13 22:43:56,350 - SourceAnalyzer - DEBUG - logger.py:64 - 컴포넌트 저장 완료: updateUserPreferences (ID: 608)
2025-09-13 22:43:56,350 - SourceAnalyzer - DEBUG - logger.py:64 - 컴포넌트 저장 결과: component_id = 608
2025-09-13 22:43:56,350 - SourceAnalyzer - DEBUG - logger.py:64 - SQL Content 저장 시작: updateUserPreferences (component_id: 608)
2025-09-13 22:43:56,350 - SourceAnalyzer - DEBUG - logger.py:64 - SQL Content 상대경로: src/main/resources/mybatis/mapper
2025-09-13 22:43:56,350 - SourceAnalyzer - WARNING - logger.py:72 - SQL Content 저장 중 예외 발생 (무시하고 계속 진행): updateUserPreferences - 'sql_query'
2025-09-13 22:43:56,350 - SourceAnalyzer - DEBUG - logger.py:64 - SQL 쿼리 처리 완료: updateUserPreferences
2025-09-13 22:43:56,350 - SourceAnalyzer - DEBUG - logger.py:64 - SQL 쿼리 처리 루프 시작: 20/20
2025-09-13 22:43:56,350 - SourceAnalyzer - DEBUG - logger.py:64 - SQL 쿼리 처리 시작: deleteUsersByCondition (delete)
2025-09-13 22:43:56,350 - SourceAnalyzer - DEBUG - logger.py:64 - GET XML ID 조회: D:\Analyzer\CreateMetaDb\projects\sampleSrc\src\main\resources\mybatis\mapper\UserMapper.xml -> src/main/resources/mybatis/mapper/UserMapper.xml
2025-09-13 22:43:56,350 - SourceAnalyzer - DEBUG - logger.py:64 - 메모리 매핑 테이블 키들: ['src/com/example/dynamicquery/UserMapper.xml', 'src/main/resources/mybatis/mapper/ImplicitJoinMapper.xml', 'src/main/resources/mybatis/mapper/ImplicitJoinTestMapper.xml', 'src/main/resources/mybatis/mapper/MixedErrorMapper.xml', 'src/main/resources/mybatis/mapper/ProductMapper.xml', 'src/main/resources/mybatis/mapper/UserMapper.xml']
2025-09-13 22:43:56,350 - SourceAnalyzer - DEBUG - logger.py:64 - 메모리에서 file_id 조회 성공: src/main/resources/mybatis/mapper/UserMapper.xml -> 27
2025-09-13 22:43:56,350 - SourceAnalyzer - DEBUG - logger.py:64 - 파일 ID 조회 성공: 27
2025-09-13 22:43:56,350 - SourceAnalyzer - DEBUG - logger.py:64 - 컴포넌트 저장 시도: deleteUsersByCondition (delete) -> SQL_DELETE
2025-09-13 22:43:56,350 - SourceAnalyzer - DEBUG - logger.py:64 - Upsert 실행: components
2025-09-13 22:43:56,351 - SourceAnalyzer - DEBUG - logger.py:64 - 데이터: {'project_id': 1, 'component_type': 'SQL_DELETE', 'component_name': 'deleteUsersByCondition', 'parent_id': None, 'layer': 'SQL', 'file_id': 27, 'line_start': 1, 'line_end': 1, 'hash_value': '4fd8b5a65fc409d88076a0d241391c0c', 'has_error': 'N', 'error_message': None, 'del_yn': 'N'}
2025-09-13 22:43:56,351 - SourceAnalyzer - DEBUG - logger.py:64 - Components upsert 시작: deleteUsersByCondition (SQL_DELETE)
2025-09-13 22:43:56,351 - SourceAnalyzer - DEBUG - logger.py:64 - 기존 레코드 확인 쿼리: 
                    SELECT component_id FROM components 
                    WHERE project_id = ? AND component_name = ? AND file_id = ?
                    
2025-09-13 22:43:56,351 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 파라미터: (1, 'deleteUsersByCondition', 27)
2025-09-13 22:43:56,351 - SourceAnalyzer - DEBUG - logger.py:64 - 기존 레코드 조회 결과: <sqlite3.Row object at 0x00000257905C7F40>
2025-09-13 22:43:56,351 - SourceAnalyzer - DEBUG - logger.py:64 - UPDATE 쿼리: 
                        UPDATE components SET component_type = ?, parent_id = ?, layer = ?, line_start = ?, line_end = ?, hash_value = ?, has_error = ?, error_message = ?, del_yn = ?
                        WHERE component_id = ?
                        
2025-09-13 22:43:56,351 - SourceAnalyzer - DEBUG - logger.py:64 - UPDATE 파라미터: ['SQL_DELETE', None, 'SQL', 1, 1, '4fd8b5a65fc409d88076a0d241391c0c', 'N', None, 'N', 597]
2025-09-13 22:43:56,351 - SourceAnalyzer - DEBUG - logger.py:64 - UPDATE 실행 완료: component_id = 597
2025-09-13 22:43:56,351 - SourceAnalyzer - DEBUG - logger.py:64 - 컴포넌트 저장 완료: deleteUsersByCondition (ID: 597)
2025-09-13 22:43:56,351 - SourceAnalyzer - DEBUG - logger.py:64 - 컴포넌트 저장 결과: component_id = 597
2025-09-13 22:43:56,351 - SourceAnalyzer - DEBUG - logger.py:64 - SQL Content 저장 시작: deleteUsersByCondition (component_id: 597)
2025-09-13 22:43:56,351 - SourceAnalyzer - DEBUG - logger.py:64 - SQL Content 상대경로: src/main/resources/mybatis/mapper
2025-09-13 22:43:56,351 - SourceAnalyzer - WARNING - logger.py:72 - SQL Content 저장 중 예외 발생 (무시하고 계속 진행): deleteUsersByCondition - 'sql_query'
2025-09-13 22:43:56,351 - SourceAnalyzer - DEBUG - logger.py:64 - SQL 쿼리 처리 완료: deleteUsersByCondition
2025-09-13 22:43:56,351 - SourceAnalyzer - INFO - logger.py:68 - === SQL 쿼리 처리 완료 ===
2025-09-13 22:43:56,351 - SourceAnalyzer - INFO - logger.py:68 - 처리된 쿼리 수: 20
2025-09-13 22:43:56,351 - SourceAnalyzer - INFO - logger.py:68 - 건너뜀 쿼리 수: 0
2025-09-13 22:43:56,351 - SourceAnalyzer - INFO - logger.py:68 - 컴포넌트 ID 매핑 크기: 20
2025-09-13 22:43:56,351 - SourceAnalyzer - INFO - logger.py:68 - SQL 컴포넌트 저장 완료: 20개 (건너뜀: 0개)
2025-09-13 22:43:56,351 - SourceAnalyzer - INFO - logger.py:68 - process_sql_queries 호출 후: result=True
2025-09-13 22:43:56,351 - SourceAnalyzer - INFO - logger.py:68 - SQL Content Processor 처리 결과: True
2025-09-13 22:43:56,351 - SourceAnalyzer - INFO - logger.py:68 - === XML 로딩 엔진: SQL 컴포넌트 저장 완료 ===
2025-09-13 22:43:56,351 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 실행 성공: 
                SELECT c.component_id 
          ...
2025-09-13 22:43:56,351 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 실행 성공: 
                SELECT c.component_id 
          ...
2025-09-13 22:43:56,351 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 실행 성공: 
                SELECT c.component_id 
          ...
2025-09-13 22:43:56,352 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 실행 성공: 
                SELECT c.component_id 
          ...
2025-09-13 22:43:56,352 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 실행 성공: 
                SELECT c.component_id 
          ...
2025-09-13 22:43:56,352 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 실행 성공: 
                SELECT c.component_id 
          ...
2025-09-13 22:43:56,352 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 실행 성공: 
                SELECT c.component_id 
          ...
2025-09-13 22:43:56,352 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 실행 성공: 
                SELECT c.component_id 
          ...
2025-09-13 22:43:56,352 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 실행 성공: 
                SELECT c.component_id 
          ...
2025-09-13 22:43:56,352 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 실행 성공: 
                SELECT c.component_id 
          ...
2025-09-13 22:43:56,352 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 실행 성공: 
                SELECT c.component_id 
          ...
2025-09-13 22:43:56,352 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 실행 성공: 
                SELECT c.component_id 
          ...
2025-09-13 22:43:56,352 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 실행 성공: 
                SELECT c.component_id 
          ...
2025-09-13 22:43:56,352 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 실행 성공: 
                SELECT c.component_id 
          ...
2025-09-13 22:43:56,352 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 실행 성공: 
                SELECT c.component_id 
          ...
2025-09-13 22:43:56,352 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 실행 성공: 
                SELECT c.component_id 
          ...
2025-09-13 22:43:56,352 - SourceAnalyzer - DEBUG - logger.py:64 - 배치 쿼리 실행 성공: 
            INSERT OR IGNORE INTO relationships (..., 처리된 행: 8
2025-09-13 22:43:56,353 - SourceAnalyzer - INFO - logger.py:68 - JOIN 관계 저장 완료: 8개
2025-09-13 22:43:56,353 - SourceAnalyzer - INFO - logger.py:68 - === XML 로딩 통계 ===
2025-09-13 22:43:56,353 - SourceAnalyzer - INFO - logger.py:68 - 처리된 XML 파일: 5개
2025-09-13 22:43:56,353 - SourceAnalyzer - INFO - logger.py:68 - 추출된 SQL 쿼리: 54개
2025-09-13 22:43:56,353 - SourceAnalyzer - INFO - logger.py:68 - 생성된 SQL 컴포넌트: 54개
2025-09-13 22:43:56,353 - SourceAnalyzer - INFO - logger.py:68 - 생성된 JOIN 관계: 44개
2025-09-13 22:43:56,353 - SourceAnalyzer - INFO - logger.py:68 - 생성된 inferred 테이블: 6개
2025-09-13 22:43:56,353 - SourceAnalyzer - INFO - logger.py:68 - 생성된 inferred 컬럼: 0개
2025-09-13 22:43:56,353 - SourceAnalyzer - INFO - logger.py:68 - 오류 발생: 1개
2025-09-13 22:43:56,353 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 실행 성공: 
            SELECT 
                COUNT(*) as t...
2025-09-13 22:43:56,353 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 실행 성공: 
            SELECT 
                file_path, fi...
2025-09-13 22:43:56,353 - SourceAnalyzer - DEBUG - logger.py:64 - 쿼리 실행 성공: 
            SELECT 
                query_type,
 ...
2025-09-13 22:43:56,353 - SourceAnalyzer - INFO - logger.py:68 - === SQL Content 통계 ===
2025-09-13 22:43:56,353 - SourceAnalyzer - INFO - logger.py:68 - 저장된 SQL 내용: 0개
2025-09-13 22:43:56,353 - SourceAnalyzer - INFO - logger.py:68 - 총 압축 크기: None bytes
2025-09-13 22:43:56,353 - SourceAnalyzer - INFO - logger.py:68 - 평균 압축 크기: 0.00 bytes
2025-09-13 22:43:56,353 - SourceAnalyzer - INFO - logger.py:68 - 최대 압축 크기: None bytes
2025-09-13 22:43:56,353 - SourceAnalyzer - INFO - logger.py:68 - 최소 압축 크기: None bytes
2025-09-13 22:43:56,353 - SourceAnalyzer - INFO - logger.py:68 - === XML 로딩 완료 ===
2025-09-13 22:43:56,354 - SourceAnalyzer - DEBUG - logger.py:64 - 데이터베이스 연결 해제: D:\Analyzer\CreateMetaDb\projects\sampleSrc\metadata.db
2025-09-13 22:43:56,354 - SourceAnalyzer - DEBUG - logger.py:64 - 데이터베이스 연결 해제: D:\Analyzer\CreateMetaDb\projects\sampleSrc\SqlContent.db
2025-09-13 22:43:56,354 - SourceAnalyzer - INFO - logger.py:68 - SQL Content 데이터베이스 연결 해제
2025-09-13 22:43:56,355 - SourceAnalyzer - DEBUG - logger.py:64 - 데이터베이스 연결 해제: D:\Analyzer\CreateMetaDb\projects\sampleSrc\SqlContent.db
2025-09-13 22:43:56,355 - SourceAnalyzer - INFO - logger.py:68 - SQL Content 데이터베이스 연결 해제
2025-09-13 22:43:56,355 - SourceAnalyzer - INFO - logger.py:68 - 3단계 완료: XML 파일 분석 및 SQL 컴포넌트 등록 + JOIN 관계 분석
2025-09-13 22:43:56,355 - SourceAnalyzer - INFO - logger.py:68 - 1-3단계 테스트 완료
