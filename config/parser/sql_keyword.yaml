# SQL 키워드 정의 파일 (리뉴얼)
# 소스코드 분석 시 SQL 관련 키워드를 체크하는 용도
# Oracle 전용, 메뉴얼 기반으로 체계적으로 재구성

# SQL 예약어 (Oracle 기준)
sql_reserved_keywords:
  # DDL (Data Definition Language)
  - "CREATE"
  - "ALTER"
  - "DROP"
  - "TRUNCATE"
  - "RENAME"
  - "COMMENT"
  
  # DML (Data Manipulation Language)
  - "SELECT"
  - "INSERT"
  - "UPDATE"
  - "DELETE"
  - "MERGE"
  
  # DCL (Data Control Language)
  - "GRANT"
  - "REVOKE"
  
  # TCL (Transaction Control Language)
  - "COMMIT"
  - "ROLLBACK"
  - "SAVEPOINT"
  
  # 조인 관련
  - "JOIN"
  - "INNER"
  - "LEFT"
  - "RIGHT"
  - "FULL"
  - "OUTER"
  - "CROSS"
  - "NATURAL"
  
  # 조건절
  - "WHERE"
  - "HAVING"
  - "GROUP"
  - "ORDER"
  - "BY"
  - "ASC"
  - "DESC"
  - "DISTINCT"
  - "UNION"
  - "ALL"
  - "INTERSECT"
  - "MINUS"
  
  # 연산자
  - "AND"
  - "OR"
  - "NOT"
  - "IN"
  - "EXISTS"
  - "BETWEEN"
  - "LIKE"
  - "IS"
  - "NULL"
  - "CASE"
  - "WHEN"
  - "THEN"
  - "ELSE"
  - "END"
  
  # 함수
  - "COUNT"
  - "SUM"
  - "AVG"
  - "MIN"
  - "MAX"
  - "ROUND"
  - "TRUNC"
  - "SUBSTR"
  - "LENGTH"
  - "UPPER"
  - "LOWER"
  - "TO_CHAR"
  - "TO_DATE"
  - "TO_NUMBER"
  - "NVL"
  - "DECODE"
  - "COALESCE"
  
  # Oracle 특화 함수
  - "ROWNUM"
  - "ROWID"
  - "DUAL"
  - "SYSDATE"
  - "SYSTIMESTAMP"
  - "USER"
  - "LEVEL"
  - "CONNECT"
  - "PRIOR"
  - "START"
  - "WITH"
  - "RECURSIVE"
  
  # 분석 함수
  - "OVER"
  - "PARTITION"
  - "RANK"
  - "DENSE_RANK"
  - "ROW_NUMBER"
  - "LAG"
  - "LEAD"
  - "FIRST_VALUE"
  - "LAST_VALUE"
  - "NTILE"
  - "PERCENT_RANK"
  - "CUME_DIST"

# SQL 함수 패턴 (정규식)
sql_function_patterns:
  # 집계 함수
  aggregate_functions:
    - "COUNT\\(.*\\)"
    - "SUM\\(.*\\)"
    - "AVG\\(.*\\)"
    - "MIN\\(.*\\)"
    - "MAX\\(.*\\)"
    - "STDDEV\\(.*\\)"
    - "VARIANCE\\(.*\\)"
  
  # 문자열 함수
  string_functions:
    - "SUBSTR\\(.*\\)"
    - "LENGTH\\(.*\\)"
    - "UPPER\\(.*\\)"
    - "LOWER\\(.*\\)"
    - "TRIM\\(.*\\)"
    - "LTRIM\\(.*\\)"
    - "RTRIM\\(.*\\)"
    - "REPLACE\\(.*\\)"
    - "INSTR\\(.*\\)"
    - "LPAD\\(.*\\)"
    - "RPAD\\(.*\\)"
  
  # 날짜 함수
  date_functions:
    - "TO_CHAR\\(.*\\)"
    - "TO_DATE\\(.*\\)"
    - "SYSDATE"
    - "SYSTIMESTAMP"
    - "ADD_MONTHS\\(.*\\)"
    - "MONTHS_BETWEEN\\(.*\\)"
    - "LAST_DAY\\(.*\\)"
    - "NEXT_DAY\\(.*\\)"
    - "EXTRACT\\(.*\\)"
  
  # 숫자 함수
  number_functions:
    - "ROUND\\(.*\\)"
    - "TRUNC\\(.*\\)"
    - "MOD\\(.*\\)"
    - "POWER\\(.*\\)"
    - "SQRT\\(.*\\)"
    - "ABS\\(.*\\)"
    - "CEIL\\(.*\\)"
    - "FLOOR\\(.*\\)"
    - "SIGN\\(.*\\)"
  
  # 변환 함수
  conversion_functions:
    - "TO_NUMBER\\(.*\\)"
    - "TO_CHAR\\(.*\\)"
    - "TO_DATE\\(.*\\)"
    - "CAST\\(.*\\)"
  
  # NULL 처리 함수
  null_functions:
    - "NVL\\(.*\\)"
    - "NVL2\\(.*\\)"
    - "COALESCE\\(.*\\)"
    - "NULLIF\\(.*\\)"

# 테이블 제외 패턴 (분석에서 제외할 테이블)
exclude_table_patterns:
  - "^DUAL$"
  - "^SYS\\."
  - "^USER_"
  - "^ALL_"
  - "^DBA_"
  - "^V\\$"
  - "^GV\\$"
  - "^X\\$"
  - "^TEMP_"
  - "^TMP_"

# 컬럼 제외 패턴 (분석에서 제외할 컬럼명)
exclude_column_patterns:
  # SQL 키워드
  - "^SELECT$"
  - "^FROM$"
  - "^WHERE$"
  - "^GROUP$"
  - "^ORDER$"
  - "^HAVING$"
  - "^JOIN$"
  - "^INNER$"
  - "^LEFT$"
  - "^RIGHT$"
  - "^FULL$"
  - "^OUTER$"
  - "^CROSS$"
  - "^NATURAL$"
  - "^UNION$"
  - "^ALL$"
  - "^DISTINCT$"
  - "^ASC$"
  - "^DESC$"
  - "^AND$"
  - "^OR$"
  - "^NOT$"
  - "^IN$"
  - "^EXISTS$"
  - "^BETWEEN$"
  - "^LIKE$"
  - "^IS$"
  - "^NULL$"
  - "^CASE$"
  - "^WHEN$"
  - "^THEN$"
  - "^ELSE$"
  - "^END$"
  
  # 함수명
  - "^COUNT$"
  - "^SUM$"
  - "^AVG$"
  - "^MIN$"
  - "^MAX$"
  - "^ROUND$"
  - "^TRUNC$"
  - "^SUBSTR$"
  - "^LENGTH$"
  - "^UPPER$"
  - "^LOWER$"
  - "^TO_CHAR$"
  - "^TO_DATE$"
  - "^TO_NUMBER$"
  - "^NVL$"
  - "^DECODE$"
  - "^COALESCE$"
  
  # Oracle 특화
  - "^ROWNUM$"
  - "^ROWID$"
  - "^DUAL$"
  - "^SYSDATE$"
  - "^SYSTIMESTAMP$"
  - "^USER$"
  - "^LEVEL$"
  - "^CONNECT$"
  - "^PRIOR$"
  - "^START$"
  - "^WITH$"
  - "^RECURSIVE$"
  
  # 분석 함수
  - "^OVER$"
  - "^PARTITION$"
  - "^RANK$"
  - "^DENSE_RANK$"
  - "^ROW_NUMBER$"
  - "^LAG$"
  - "^LEAD$"
  - "^FIRST_VALUE$"
  - "^LAST_VALUE$"
  - "^NTILE$"
  - "^PERCENT_RANK$"
  - "^CUME_DIST$"
  
  # 일반적인 alias/별칭
  - "^A$"
  - "^B$"
  - "^C$"
  - "^D$"
  - "^E$"
  - "^F$"
  - "^G$"
  - "^H$"
  - "^I$"
  - "^J$"
  - "^K$"
  - "^L$"
  - "^M$"
  - "^N$"
  - "^O$"
  - "^P$"
  - "^Q$"
  - "^R$"
  - "^S$"
  - "^T$"
  - "^U$"
  - "^V$"
  - "^W$"
  - "^X$"
  - "^Y$"
  - "^Z$"
  
  # 숫자 패턴
  - "^\\d+$"
  - "^\\d+\\.\\d+$"
  
  # 특수 문자
  - "^\\*$"
  - "^\\+$"
  - "^\\-$"
  - "^\\/$"
  - "^\\%$"
  - "^\\=$"
  - "^\\<$"
  - "^\\>$"
  - "^\\!$"
  - "^\\@$"
  - "^\\#$"
  - "^\\$$"
  - "^\\^$"
  - "^\\&$"
  - "^\\|$"
  - "^\\~$"
  - "^\\`$"

# MyBatis Dynamic SQL 태그
mybatis_dynamic_tags:
  - "if"
  - "choose"
  - "when"
  - "otherwise"
  - "trim"
  - "where"
  - "set"
  - "foreach"
  - "bind"
  - "sql"
  - "include"
  - "resultMap"
  - "parameterMap"
  - "result"
  - "association"
  - "collection"
  - "discriminator"
  - "constructor"
  - "id"

# JPA JPQL 키워드
jpql_keywords:
  - "SELECT"
  - "FROM"
  - "WHERE"
  - "GROUP"
  - "HAVING"
  - "ORDER"
  - "BY"
  - "ASC"
  - "DESC"
  - "DISTINCT"
  - "JOIN"
  - "INNER"
  - "LEFT"
  - "RIGHT"
  - "FETCH"
  - "ON"
  - "AND"
  - "OR"
  - "NOT"
  - "IN"
  - "EXISTS"
  - "BETWEEN"
  - "LIKE"
  - "IS"
  - "NULL"
  - "EMPTY"
  - "MEMBER"
  - "OF"
  - "CASE"
  - "WHEN"
  - "THEN"
  - "ELSE"
  - "END"
  - "NEW"
  - "OBJECT"
  - "FUNCTION"
  - "COLLECTION"
  - "INDEX"
  - "KEY"
  - "VALUE"
  - "ENTRY"
  - "TYPE"
  - "TREAT"
  - "CAST"

# 정규식 패턴 (고급 매칭용)
sql_core_patterns:
  - "^SELECT\\s+.*\\s+FROM\\s+"
  - "^INSERT\\s+INTO\\s+"
  - "^UPDATE\\s+.*\\s+SET\\s+"
  - "^DELETE\\s+FROM\\s+"
  - "^MERGE\\s+INTO\\s+"
  - "^CREATE\\s+TABLE\\s+"
  - "^ALTER\\s+TABLE\\s+"
  - "^DROP\\s+TABLE\\s+"
  - "^TRUNCATE\\s+TABLE\\s+"

# SQL 문장 타입 분류
sql_statement_types:
  select:
    patterns:
      - "^SELECT\\s+.*\\s+FROM\\s+"
      - "^SELECT\\s+.*\\s+WHERE\\s+"
      - "^SELECT\\s+.*\\s+GROUP\\s+BY\\s+"
      - "^SELECT\\s+.*\\s+ORDER\\s+BY\\s+"
      - "^SELECT\\s+.*\\s+HAVING\\s+"
  
  insert:
    patterns:
      - "^INSERT\\s+INTO\\s+"
      - "^INSERT\\s+.*\\s+VALUES\\s+"
      - "^INSERT\\s+.*\\s+SELECT\\s+"
  
  update:
    patterns:
      - "^UPDATE\\s+.*\\s+SET\\s+"
      - "^UPDATE\\s+.*\\s+WHERE\\s+"
  
  delete:
    patterns:
      - "^DELETE\\s+FROM\\s+"
      - "^DELETE\\s+.*\\s+WHERE\\s+"
  
  merge:
    patterns:
      - "^MERGE\\s+INTO\\s+"
      - "^MERGE\\s+.*\\s+USING\\s+"
      - "^MERGE\\s+.*\\s+WHEN\\s+"
  
  ddl:
    patterns:
      - "^CREATE\\s+TABLE\\s+"
      - "^CREATE\\s+VIEW\\s+"
      - "^CREATE\\s+INDEX\\s+"
      - "^CREATE\\s+SEQUENCE\\s+"
      - "^ALTER\\s+TABLE\\s+"
      - "^ALTER\\s+VIEW\\s+"
      - "^DROP\\s+TABLE\\s+"
      - "^DROP\\s+VIEW\\s+"
      - "^DROP\\s+INDEX\\s+"
      - "^TRUNCATE\\s+TABLE\\s+"

# JOIN 관계 분석 패턴 (Oracle SQL 메뉴얼 기반)
join_relationship_patterns:
  # 명시적 JOIN (Explicit JOIN) - Oracle SQL 표준 구문
  explicit_joins:
    # INNER JOIN (별칭 선택적 처리)
    - |
      \b(?:INNER\s+)?JOIN\s+([a-zA-Z_][a-zA-Z0-9_]*)(?:\s+[a-zA-Z_][a-zA-Z0-9_]*)?\s+ON\s+([a-zA-Z0-9_.]+\s*=\s*[a-zA-Z0-9_.]+)
    
    # LEFT/RIGHT/FULL OUTER JOIN (별칭 선택적 처리)
    - |
      \b(?:LEFT|RIGHT|FULL)(?:\s+OUTER)?\s+JOIN\s+([a-zA-Z_][a-zA-Z0-9_]*)(?:\s+[a-zA-Z_][a-zA-Z0-9_]*)?\s+ON\s+([a-zA-Z0-9_.]+\s*=\s*[a-zA-Z0-9_.]+)
    
    # CROSS JOIN
    - |
      \bCROSS\s+JOIN\s+([a-zA-Z_][a-zA-Z0-9_]*)(?:\s+[a-zA-Z_][a-zA-Z0-9_]*)?
    
    # NATURAL JOIN
    - |
      \bNATURAL\s+JOIN\s+([a-zA-Z_][a-zA-Z0-9_]*)(?:\s+[a-zA-Z_][a-zA-Z0-9_]*)?
  
  # 암시적 JOIN (Implicit JOIN) - Oracle 전통적 구문 (USER RULES: 메뉴얼 기반)
  implicit_joins:
    # 2개 테이블 암시적 JOIN (별칭 포함, WHERE 있음) - Oracle SQL 메뉴얼 기반
    - "\\bFROM\\s+([a-zA-Z_][a-zA-Z0-9_]*)\\s+[a-zA-Z_][a-zA-Z0-9_]*\\s*,\\s*([a-zA-Z_][a-zA-Z0-9_]*)\\s+[a-zA-Z_][a-zA-Z0-9_]*\\s+WHERE\\s+([^,\\s]+)\\s*=\\s*([^,\\s]+)"
    
    # 2개 테이블 암시적 JOIN (별칭 없음, WHERE 있음) - Oracle SQL 메뉴얼 기반
    - "\\bFROM\\s+([a-zA-Z_][a-zA-Z0-9_]*)\\s*,\\s*([a-zA-Z_][a-zA-Z0-9_]*)\\s+WHERE\\s+([^,\\s]+)\\s*=\\s*([^,\\s]+)"
    
    # 2개 테이블 암시적 JOIN (별칭 포함, WHERE 없음) - Oracle SQL 메뉴얼 기반
    - "\\bFROM\\s+([a-zA-Z_][a-zA-Z0-9_]*)\\s+[a-zA-Z_][a-zA-Z0-9_]*\\s*,\\s*([a-zA-Z_][a-zA-Z0-9_]*)\\s+[a-zA-Z_][a-zA-Z0-9_]*\\s+(?:ORDER|GROUP|HAVING|UNION|$)"
    
    # 2개 테이블 암시적 JOIN (별칭 없음, WHERE 없음) - Oracle SQL 메뉴얼 기반
    - "\\bFROM\\s+([a-zA-Z_][a-zA-Z0-9_]*)\\s*,\\s*([a-zA-Z_][a-zA-Z0-9_]*)\\s+(?:ORDER|GROUP|HAVING|UNION|$)"
    
    # 3개 테이블 암시적 JOIN (별칭 포함, WHERE 있음) - Oracle SQL 메뉴얼 기반
    - "\\bFROM\\s+([a-zA-Z_][a-zA-Z0-9_]*)\\s+[a-zA-Z_][a-zA-Z0-9_]*\\s*,\\s*([a-zA-Z_][a-zA-Z0-9_]*)\\s+[a-zA-Z_][a-zA-Z0-9_]*\\s*,\\s*([a-zA-Z_][a-zA-Z0-9_]*)\\s+[a-zA-Z_][a-zA-Z0-9_]*\\s+WHERE\\s+([^,\\s]+)\\s*=\\s*([^,\\s]+)\\s+AND\\s+([^,\\s]+)\\s*=\\s*([^,\\s]+)"
    
    # 3개 테이블 암시적 JOIN (별칭 없음, WHERE 있음) - Oracle SQL 메뉴얼 기반
    - "\\bFROM\\s+([a-zA-Z_][a-zA-Z0-9_]*)\\s*,\\s*([a-zA-Z_][a-zA-Z0-9_]*)\\s*,\\s*([a-zA-Z_][a-zA-Z0-9_]*)\\s+WHERE\\s+([^,\\s]+)\\s*=\\s*([^,\\s]+)\\s+AND\\s+([^,\\s]+)\\s*=\\s*([^,\\s]+)"
    
    # 3개 테이블 암시적 JOIN (별칭 포함, WHERE 없음) - Oracle SQL 메뉴얼 기반
    - "\\bFROM\\s+([a-zA-Z_][a-zA-Z0-9_]*)\\s+[a-zA-Z_][a-zA-Z0-9_]*\\s*,\\s*([a-zA-Z_][a-zA-Z0-9_]*)\\s+[a-zA-Z_][a-zA-Z0-9_]*\\s*,\\s*([a-zA-Z_][a-zA-Z0-9_]*)\\s+[a-zA-Z_][a-zA-Z0-9_]*\\s+(?:ORDER|GROUP|HAVING|UNION|$)"
    
    # 3개 테이블 암시적 JOIN (별칭 없음, WHERE 없음) - Oracle SQL 메뉴얼 기반
    - "\\bFROM\\s+([a-zA-Z_][a-zA-Z0-9_]*)\\s*,\\s*([a-zA-Z_][a-zA-Z0-9_]*)\\s*,\\s*([a-zA-Z_][a-zA-Z0-9_]*)\\s+(?:ORDER|GROUP|HAVING|UNION|$)"
    
    # 4개 테이블 암시적 JOIN (별칭 포함, WHERE 있음) - Oracle SQL 메뉴얼 기반
    - "\\bFROM\\s+([a-zA-Z_][a-zA-Z0-9_]*)\\s+[a-zA-Z_][a-zA-Z0-9_]*\\s*,\\s*([a-zA-Z_][a-zA-Z0-9_]*)\\s+[a-zA-Z_][a-zA-Z0-9_]*\\s*,\\s*([a-zA-Z_][a-zA-Z0-9_]*)\\s+[a-zA-Z_][a-zA-Z0-9_]*\\s*,\\s*([a-zA-Z_][a-zA-Z0-9_]*)\\s+[a-zA-Z_][a-zA-Z0-9_]*\\s+WHERE\\s+([^,\\s]+)\\s*=\\s*([^,\\s]+)\\s+AND\\s+([^,\\s]+)\\s*=\\s*([^,\\s]+)"
    
    # 4개 테이블 암시적 JOIN (별칭 없음, WHERE 있음) - Oracle SQL 메뉴얼 기반
    - "\\bFROM\\s+([a-zA-Z_][a-zA-Z0-9_]*)\\s*,\\s*([a-zA-Z_][a-zA-Z0-9_]*)\\s*,\\s*([a-zA-Z_][a-zA-Z0-9_]*)\\s*,\\s*([a-zA-Z_][a-zA-Z0-9_]*)\\s+WHERE\\s+([^,\\s]+)\\s*=\\s*([^,\\s]+)\\s+AND\\s+([^,\\s]+)\\s*=\\s*([^,\\s]+)"
    
    # 4개 테이블 암시적 JOIN (별칭 포함, WHERE 없음) - Oracle SQL 메뉴얼 기반
    - "\\bFROM\\s+([a-zA-Z_][a-zA-Z0-9_]*)\\s+[a-zA-Z_][a-zA-Z0-9_]*\\s*,\\s*([a-zA-Z_][a-zA-Z0-9_]*)\\s+[a-zA-Z_][a-zA-Z0-9_]*\\s*,\\s*([a-zA-Z_][a-zA-Z0-9_]*)\\s+[a-zA-Z_][a-zA-Z0-9_]*\\s*,\\s*([a-zA-Z_][a-zA-Z0-9_]*)\\s+[a-zA-Z_][a-zA-Z0-9_]*\\s+(?:ORDER|GROUP|HAVING|UNION|$)"
    
    # 4개 테이블 암시적 JOIN (별칭 없음, WHERE 없음) - Oracle SQL 메뉴얼 기반
    - "\\bFROM\\s+([a-zA-Z_][a-zA-Z0-9_]*)\\s*,\\s*([a-zA-Z_][a-zA-Z0-9_]*)\\s*,\\s*([a-zA-Z_][a-zA-Z0-9_]*)\\s*,\\s*([a-zA-Z_][a-zA-Z0-9_]*)\\s+(?:ORDER|GROUP|HAVING|UNION|$)"

# 테이블명 추출 패턴 (JOIN 분석용) - Oracle SQL 메뉴얼 기반
table_extraction_patterns:
  # FROM 절 테이블명 추출 (별칭 제외)
  from_clause:
    # 단일 테이블 (별칭 포함/미포함)
    - "\\bFROM\\s+([a-zA-Z_][a-zA-Z0-9_]*(?:\\.[a-zA-Z_][a-zA-Z0-9_]*)?)\\s+([a-zA-Z_][a-zA-Z0-9_]*)"
    - "\\bFROM\\s+([a-zA-Z_][a-zA-Z0-9_]*(?:\\.[a-zA-Z_][a-zA-Z0-9_]*)?)"
    
    # 다중 테이블 (콤마로 구분, 별칭 포함/미포함)
    - "\\bFROM\\s+([a-zA-Z_][a-zA-Z0-9_]*(?:\\.[a-zA-Z_][a-zA-Z0-9_]*)?)\\s+[a-zA-Z_][a-zA-Z0-9_]*\\s*,\\s*([a-zA-Z_][a-zA-Z0-9_]*(?:\\.[a-zA-Z_][a-zA-Z0-9_]*)?)\\s+[a-zA-Z_][a-zA-Z0-9_]*"
    - "\\bFROM\\s+([a-zA-Z_][a-zA-Z0-9_]*(?:\\.[a-zA-Z_][a-zA-Z0-9_]*)?)\\s*,\\s*([a-zA-Z_][a-zA-Z0-9_]*(?:\\.[a-zA-Z_][a-zA-Z0-9_]*)?)"
    
    # 3개 이상 테이블
    - "\\bFROM\\s+([a-zA-Z_][a-zA-Z0-9_]*(?:\\.[a-zA-Z_][a-zA-Z0-9_]*)?)\\s+[a-zA-Z_][a-zA-Z0-9_]*\\s*,\\s*([a-zA-Z_][a-zA-Z0-9_]*(?:\\.[a-zA-Z_][a-zA-Z0-9_]*)?)\\s+[a-zA-Z_][a-zA-Z0-9_]*\\s*,\\s*([a-zA-Z_][a-zA-Z0-9_]*(?:\\.[a-zA-Z_][a-zA-Z0-9_]*)?)\\s+[a-zA-Z_][a-zA-Z0-9_]*"
    - "\\bFROM\\s+([a-zA-Z_][a-zA-Z0-9_]*(?:\\.[a-zA-Z_][a-zA-Z0-9_]*)?)\\s*,\\s*([a-zA-Z_][a-zA-Z0-9_]*(?:\\.[a-zA-Z_][a-zA-Z0-9_]*)?)\\s*,\\s*([a-zA-Z_][a-zA-Z0-9_]*(?:\\.[a-zA-Z_][a-zA-Z0-9_]*)?)"
  
  # JOIN 절 테이블명 추출 (별칭 제외)
  join_clause:
    # INNER JOIN
    - "\\bINNER\\s+JOIN\\s+([a-zA-Z_][a-zA-Z0-9_]*(?:\\.[a-zA-Z_][a-zA-Z0-9_]*)?)\\s+[a-zA-Z_][a-zA-Z0-9_]*"
    - "\\bINNER\\s+JOIN\\s+([a-zA-Z_][a-zA-Z0-9_]*(?:\\.[a-zA-Z_][a-zA-Z0-9_]*)?)"
    - "\\bJOIN\\s+([a-zA-Z_][a-zA-Z0-9_]*(?:\\.[a-zA-Z_][a-zA-Z0-9_]*)?)\\s+[a-zA-Z_][a-zA-Z0-9_]*"
    - "\\bJOIN\\s+([a-zA-Z_][a-zA-Z0-9_]*(?:\\.[a-zA-Z_][a-zA-Z0-9_]*)?)"
    
    # LEFT JOIN
    - "\\bLEFT\\s+JOIN\\s+([a-zA-Z_][a-zA-Z0-9_]*(?:\\.[a-zA-Z_][a-zA-Z0-9_]*)?)\\s+[a-zA-Z_][a-zA-Z0-9_]*"
    - "\\bLEFT\\s+JOIN\\s+([a-zA-Z_][a-zA-Z0-9_]*(?:\\.[a-zA-Z_][a-zA-Z0-9_]*)?)"
    - "\\bLEFT\\s+OUTER\\s+JOIN\\s+([a-zA-Z_][a-zA-Z0-9_]*(?:\\.[a-zA-Z_][a-zA-Z0-9_]*)?)\\s+[a-zA-Z_][a-zA-Z0-9_]*"
    - "\\bLEFT\\s+OUTER\\s+JOIN\\s+([a-zA-Z_][a-zA-Z0-9_]*(?:\\.[a-zA-Z_][a-zA-Z0-9_]*)?)"
    
    # RIGHT JOIN
    - "\\bRIGHT\\s+JOIN\\s+([a-zA-Z_][a-zA-Z0-9_]*(?:\\.[a-zA-Z_][a-zA-Z0-9_]*)?)\\s+[a-zA-Z_][a-zA-Z0-9_]*"
    - "\\bRIGHT\\s+JOIN\\s+([a-zA-Z_][a-zA-Z0-9_]*(?:\\.[a-zA-Z_][a-zA-Z0-9_]*)?)"
    - "\\bRIGHT\\s+OUTER\\s+JOIN\\s+([a-zA-Z_][a-zA-Z0-9_]*(?:\\.[a-zA-Z_][a-zA-Z0-9_]*)?)\\s+[a-zA-Z_][a-zA-Z0-9_]*"
    - "\\bRIGHT\\s+OUTER\\s+JOIN\\s+([a-zA-Z_][a-zA-Z0-9_]*(?:\\.[a-zA-Z_][a-zA-Z0-9_]*)?)"
    
    # FULL JOIN
    - "\\bFULL\\s+JOIN\\s+([a-zA-Z_][a-zA-Z0-9_]*(?:\\.[a-zA-Z_][a-zA-Z0-9_]*)?)\\s+[a-zA-Z_][a-zA-Z0-9_]*"
    - "\\bFULL\\s+JOIN\\s+([a-zA-Z_][a-zA-Z0-9_]*(?:\\.[a-zA-Z_][a-zA-Z0-9_]*)?)"
    - "\\bFULL\\s+OUTER\\s+JOIN\\s+([a-zA-Z_][a-zA-Z0-9_]*(?:\\.[a-zA-Z_][a-zA-Z0-9_]*)?)\\s+[a-zA-Z_][a-zA-Z0-9_]*"
    - "\\bFULL\\s+OUTER\\s+JOIN\\s+([a-zA-Z_][a-zA-Z0-9_]*(?:\\.[a-zA-Z_][a-zA-Z0-9_]*)?)"
    
    # CROSS JOIN
    - "\\bCROSS\\s+JOIN\\s+([a-zA-Z_][a-zA-Z0-9_]*(?:\\.[a-zA-Z_][a-zA-Z0-9_]*)?)\\s+[a-zA-Z_][a-zA-Z0-9_]*"
    - "\\bCROSS\\s+JOIN\\s+([a-zA-Z_][a-zA-Z0-9_]*(?:\\.[a-zA-Z_][a-zA-Z0-9_]*)?)"
    
    # NATURAL JOIN
    - "\\bNATURAL\\s+JOIN\\s+([a-zA-Z_][a-zA-Z0-9_]*(?:\\.[a-zA-Z_][a-zA-Z0-9_]*)?)\\s+[a-zA-Z_][a-zA-Z0-9_]*"
    - "\\bNATURAL\\s+JOIN\\s+([a-zA-Z_][a-zA-Z0-9_]*(?:\\.[a-zA-Z_][a-zA-Z0-9_]*)?)"

# MyBatis 동적 SQL JOIN 패턴
mybatis_join_patterns:
  # MyBatis XML에서 JOIN 구문 (동적 SQL 포함)
  dynamic_joins:
    - "\\bLEFT\\s+JOIN\\s+([a-zA-Z_][a-zA-Z0-9_]*)\\s+([a-zA-Z_][a-zA-Z0-9_]*)\\s+ON\\s+([^,\\s]+)\\s*=\\s*([^,\\s]+)"
    - "\\bINNER\\s+JOIN\\s+([a-zA-Z_][a-zA-Z0-9_]*)\\s+([a-zA-Z_][a-zA-Z0-9_]*)\\s+ON\\s+([^,\\s]+)\\s*=\\s*([^,\\s]+)"
    - "\\bRIGHT\\s+JOIN\\s+([a-zA-Z_][a-zA-Z0-9_]*)\\s+([a-zA-Z_][a-zA-Z0-9_]*)\\s+ON\\s+([^,\\s]+)\\s*=\\s*([^,\\s]+)"
  
  # MyBatis 동적 SQL 태그 내부의 JOIN
  conditional_joins:
    - "<if[^>]*>.*?\\bLEFT\\s+JOIN\\s+([a-zA-Z_][a-zA-Z0-9_]*)\\s+([a-zA-Z_][a-zA-Z0-9_]*)\\s+ON\\s+([^,\\s]+)\\s*=\\s*([^,\\s]+).*?</if>"
    - "<choose>.*?\\bLEFT\\s+JOIN\\s+([a-zA-Z_][a-zA-Z0-9_]*)\\s+([a-zA-Z_][a-zA-Z0-9_]*)\\s+ON\\s+([^,\\s]+)\\s*=\\s*([^,\\s]+).*?</choose>"

# 관계 타입 정의
relationship_types:
  # 쿼리 관련 관계
  query_table: "QUERY_TABLE"
  
  # JOIN 관련 관계
  join_explicit: "JOIN_EXPLICIT"
  join_implicit: "JOIN_IMPLICIT"
  where_join: "WHERE_JOIN"
  
  # 외래키 관련 관계
  foreign_key: "FOREIGN_KEY"
  
  # 기타 관계
  left_join: "LEFT_JOIN"
  inner_join: "INNER_JOIN"

# 컴포넌트 타입 정의
component_types:
  # SQL 관련 컴포넌트
  sql_select: "SQL_SELECT"
  sql_insert: "SQL_INSERT"
  sql_update: "SQL_UPDATE"
  sql_delete: "SQL_DELETE"
  sql_merge: "SQL_MERGE"
  
  # 테이블 관련 컴포넌트
  table: "TABLE"
  column: "COLUMN"
  
  # 파일 타입
  xml: "XML"
  csv: "CSV"
  dummy: "DUMMY"

# 해시 값 정의
hash_values:
  csv_loaded: "CSV_LOADED"
  inferred: "INFERRED"
  default: "-"

# 기본값 정의
default_values:
  table_owner: "UNKNOWN"
  column_owner: "UNKNOWN"
  layer_db: "DB"

# 관계 타입 정의
relationship_types:
  - "QUERY_TABLE"
  - "JOIN_EXPLICIT"
  - "JOIN_IMPLICIT"
  - "WHERE_JOIN"
  - "FOREIGN_KEY"
  - "LEFT_JOIN"
  - "INNER_JOIN"

# JOIN 타입 정의
join_types:
  - "INNER_JOIN"
  - "LEFT_JOIN"
  - "RIGHT_JOIN"
  - "FULL_JOIN"
  - "CROSS_JOIN"
  - "NATURAL_JOIN"
  - "IMPLICIT"
  - "EXPLICIT"

# 컴포넌트 타입 정의
component_types:
  - "SQL_SELECT"
  - "SQL_INSERT"
  - "SQL_UPDATE"
  - "SQL_DELETE"
  - "SQL_MERGE"
  - "TABLE"
  - "COLUMN"
  - "XML"
  - "CSV"
  - "DUMMY"

# 해시 값 정의
hash_values:
  csv_loaded: "CSV_LOADED"
  inferred: "INFERRED"
  default: "-"

# 파일 타입 정의
file_types:
  - "XML"
  - "CSV"
  - "DUMMY"

# 테이블명 추출 패턴 (XML 파싱용)
table_extraction_patterns:
  - pattern: "\\bFROM\\s+([a-zA-Z_][a-zA-Z0-9_]*)"
    description: "FROM table_name"
  - pattern: "\\bJOIN\\s+([a-zA-Z_][a-zA-Z0-9_]*)"
    description: "JOIN table_name"
  - pattern: "\\bINNER\\s+JOIN\\s+([a-zA-Z_][a-zA-Z0-9_]*)"
    description: "INNER JOIN table_name"
  - pattern: "\\bLEFT\\s+JOIN\\s+([a-zA-Z_][a-zA-Z0-9_]*)"
    description: "LEFT JOIN table_name"
  - pattern: "\\bRIGHT\\s+JOIN\\s+([a-zA-Z_][a-zA-Z0-9_]*)"
    description: "RIGHT JOIN table_name"
  - pattern: "\\bOUTER\\s+JOIN\\s+([a-zA-Z_][a-zA-Z0-9_]*)"
    description: "OUTER JOIN table_name"
  - pattern: "\\bINSERT\\s+INTO\\s+([a-zA-Z_][a-zA-Z0-9_]*)"
    description: "INSERT INTO table_name"
  - pattern: "\\bUPDATE\\s+([a-zA-Z_][a-zA-Z0-9_]*)"
    description: "UPDATE table_name"
  - pattern: "\\bDELETE\\s+FROM\\s+([a-zA-Z_][a-zA-Z0-9_]*)"
    description: "DELETE FROM table_name"

# JOIN 패턴 정의 (XML 파싱용)
join_patterns:
  # ANSI JOIN 패턴들 (표준 SQL) - 공백 유연성과 테이블 별칭 고려
  ansi_join_patterns:
    - pattern: "INNER\\s*JOIN\\s+([a-zA-Z_][a-zA-Z0-9_]*)\\s+([a-zA-Z_][a-zA-Z0-9_]*)\\s*ON\\s+([a-zA-Z_][a-zA-Z0-9_.]*\\s*=\\s*[a-zA-Z_][a-zA-Z0-9_.]*)"
      join_type: "JOIN_EXPLICIT"
      description: "ANSI INNER JOIN"
    - pattern: "LEFT\\s*JOIN\\s+([a-zA-Z_][a-zA-Z0-9_]*)\\s+([a-zA-Z_][a-zA-Z0-9_]*)\\s*ON\\s+([a-zA-Z_][a-zA-Z0-9_.]*\\s*=\\s*[a-zA-Z_][a-zA-Z0-9_.]*)"
      join_type: "JOIN_EXPLICIT"
      description: "ANSI LEFT JOIN"
    - pattern: "RIGHT\\s*JOIN\\s+([a-zA-Z_][a-zA-Z0-9_]*)\\s+([a-zA-Z_][a-zA-Z0-9_]*)\\s*ON\\s+([a-zA-Z_][a-zA-Z0-9_.]*\\s*=\\s*[a-zA-Z_][a-zA-Z0-9_.]*)"
      join_type: "JOIN_EXPLICIT"
      description: "ANSI RIGHT JOIN"
    - pattern: "FULL\\s*OUTER\\s*JOIN\\s+([a-zA-Z_][a-zA-Z0-9_]*)\\s+([a-zA-Z_][a-zA-Z0-9_]*)\\s*ON\\s+([a-zA-Z_][a-zA-Z0-9_.]*\\s*=\\s*[a-zA-Z_][a-zA-Z0-9_.]*)"
      join_type: "JOIN_EXPLICIT"
      description: "ANSI FULL OUTER JOIN"
    - pattern: "LEFT\\s*OUTER\\s*JOIN\\s+([a-zA-Z_][a-zA-Z0-9_]*)\\s+([a-zA-Z_][a-zA-Z0-9_]*)\\s*ON\\s+([a-zA-Z_][a-zA-Z0-9_.]*\\s*=\\s*[a-zA-Z_][a-zA-Z0-9_.]*)"
      join_type: "JOIN_EXPLICIT"
      description: "ANSI LEFT OUTER JOIN"
    - pattern: "RIGHT\\s*OUTER\\s*JOIN\\s+([a-zA-Z_][a-zA-Z0-9_]*)\\s+([a-zA-Z_][a-zA-Z0-9_]*)\\s*ON\\s+([a-zA-Z_][a-zA-Z0-9_.]*\\s*=\\s*[a-zA-Z_][a-zA-Z0-9_.]*)"
      join_type: "JOIN_EXPLICIT"
      description: "ANSI RIGHT OUTER JOIN"
  
  # Oracle Implicit JOIN 패턴들
  oracle_implicit_join_patterns:
    - pattern: "([a-zA-Z_][a-zA-Z0-9_]*(?:\\.[a-zA-Z_][a-zA-Z0-9_]*)?)\\s*\\(\\+\\)"
      join_type: "JOIN_IMPLICIT"
      description: "Oracle OUTER JOIN (+)"
    - pattern: ",\\s*([a-zA-Z_][a-zA-Z0-9_]*(?:\\.[a-zA-Z_][a-zA-Z0-9_]*)?)"
      join_type: "JOIN_IMPLICIT"
      description: "Oracle Implicit JOIN (콤마로 구분된 테이블들)"
    - pattern: "FROM\\s+([a-zA-Z_][a-zA-Z0-9_]*)\\s+[a-zA-Z_][a-zA-Z0-9_]*\\s*,\\s*([a-zA-Z_][a-zA-Z0-9_]*)\\s+[a-zA-Z_][a-zA-Z0-9_]*\\s+WHERE\\s+([a-zA-Z_][a-zA-Z0-9_]*)\\.[a-zA-Z_][a-zA-Z0-9_]*\\s*=\\s*([a-zA-Z_][a-zA-Z0-9_]*)\\.[a-zA-Z_][a-zA-Z0-9_]*"
      join_type: "JOIN_IMPLICIT"
      description: "Implicit JOIN with WHERE condition (table1, table2 WHERE alias1.col = alias2.col)"

# MyBatis 동적 SQL 태그 패턴 (XML 파싱용)
mybatis_dynamic_tag_patterns:
  - pattern: "<where>.*?</where>"
    description: "WHERE 태그와 내용"
  - pattern: "<if[^>]*>.*?</if>"
    description: "IF 조건 태그와 내용"
  - pattern: "<choose>.*?</choose>"
    description: "CHOOSE 태그와 내용"
  - pattern: "<when[^>]*>.*?</when>"
    description: "WHEN 조건 태그와 내용"
  - pattern: "<otherwise>.*?</otherwise>"
    description: "OTHERWISE 태그와 내용"
  - pattern: "<foreach[^>]*>.*?</foreach>"
    description: "FOREACH 반복 태그와 내용"
  - pattern: "<set>.*?</set>"
    description: "SET 태그와 내용"
  - pattern: "<trim[^>]*>.*?</trim>"
    description: "TRIM 태그와 내용"

# 컬럼-테이블 매핑 규칙 (별칭 생략된 경우)
column_table_mapping:
  # 외래키 컬럼명 -> 테이블명 매핑
  DEPT_ID: "DEPARTMENTS"
  USER_ID: "USER_PROFILES"
  TYPE_CODE: "USER_TYPES"
  ROLE_ID: "ROLES"
  CUSTOMER_ID: "CUSTOMERS"
  ORDER_ID: "ORDER_ITEMS"
  PRODUCT_ID: "PRODUCTS"
  CATEGORY_ID: "CATEGORIES"
  BRAND_ID: "BRANDS"
  SUPPLIER_ID: "SUPPLIERS"
  WAREHOUSE_ID: "WAREHOUSES"
  INVENTORY_ID: "INVENTORIES"
  REVIEW_ID: "PRODUCT_REVIEWS"
  DISCOUNT_ID: "DISCOUNTS"

# 통합 SQL 분석 패턴 (USER RULES: 설정 파일 기반) - 통합개발계획서 기준
sql_analysis_patterns:
  # FROM 절 분석 패턴
  from_clause:
    - "FROM\\s+([a-zA-Z_][a-zA-Z0-9_]*)(?:\\s+([a-zA-Z_][a-zA-Z0-9_]*))?(?:\\s*,\\s*([a-zA-Z_][a-zA-Z0-9_]*)(?:\\s+([a-zA-Z_][a-zA-Z0-9_]*))?)?"

  # EXPLICIT JOIN 분석 패턴
  explicit_joins:
    # LEFT JOIN 패턴 (별칭 선택적, ON 조건절 포함)
    - "(LEFT\\s+(?:OUTER\\s+)?JOIN)\\s+([a-zA-Z_][a-zA-Z0-9_]*)(?:\\s+([a-zA-Z_][a-zA-Z0-9_]*))?\\s+ON\\s+(.+?)(?=\\s+(?:LEFT|RIGHT|FULL|INNER|CROSS|NATURAL|WHERE|GROUP|ORDER|$))"
    # INNER JOIN 패턴
    - "(INNER\\s+JOIN)\\s+([a-zA-Z_][a-zA-Z0-9_]*)(?:\\s+([a-zA-Z_][a-zA-Z0-9_]*))?\\s+ON\\s+(.+?)(?=\\s+(?:LEFT|RIGHT|FULL|INNER|CROSS|NATURAL|WHERE|GROUP|ORDER|$))"
    # RIGHT JOIN 패턴
    - "(RIGHT\\s+(?:OUTER\\s+)?JOIN)\\s+([a-zA-Z_][a-zA-Z0-9_]*)(?:\\s+([a-zA-Z_][a-zA-Z0-9_]*))?\\s+ON\\s+(.+?)(?=\\s+(?:LEFT|RIGHT|FULL|INNER|CROSS|NATURAL|WHERE|GROUP|ORDER|$))"
    # FULL OUTER JOIN 패턴
    - "(FULL\\s+OUTER\\s+JOIN)\\s+([a-zA-Z_][a-zA-Z0-9_]*)(?:\\s+([a-zA-Z_][a-zA-Z0-9_]*))?\\s+ON\\s+(.+?)(?=\\s+(?:LEFT|RIGHT|FULL|INNER|CROSS|NATURAL|WHERE|GROUP|ORDER|$))"
    # CROSS JOIN 패턴 (ON 조건절 없음)
    - "(CROSS\\s+JOIN)\\s+([a-zA-Z_][a-zA-Z0-9_]*)(?:\\s+([a-zA-Z_][a-zA-Z0-9_]*))?"
    # NATURAL JOIN 패턴 (ON 조건절 없음)
    - "(NATURAL\\s+JOIN)\\s+([a-zA-Z_][a-zA-Z0-9_]*)(?:\\s+([a-zA-Z_][a-zA-Z0-9_]*))?"

  # IMPLICIT JOIN 분석 패턴 (WHERE 절)
  implicit_joins:
    # 별칭 있는 조건 (u.id = o.user_id)
    - "([a-zA-Z_][a-zA-Z0-9_]*)\\.([a-zA-Z_][a-zA-Z0-9_]*)\\s*=\\s*([a-zA-Z_][a-zA-Z0-9_]*)\\.([a-zA-Z_][a-zA-Z0-9_]*)"
    # Oracle (+) 외부 조인 구문
    - "([a-zA-Z_][a-zA-Z0-9_]*)\\.([a-zA-Z_][a-zA-Z0-9_]*)\\s*\\(\\+\\)\\s*=\\s*([a-zA-Z_][a-zA-Z0-9_]*)\\.([a-zA-Z_][a-zA-Z0-9_]*)"
    # 별칭 없는 조건 (id = user_id)
    - "\\b([a-zA-Z_][a-zA-Z0-9_]*)\\s*=\\s*([a-zA-Z_][a-zA-Z0-9_]*)\\b"

# JOIN 타입 매핑 (USER RULES: 설정 파일 기반)
join_type_mapping:
  "LEFT\\s+(?:OUTER\\s+)?JOIN": "LEFT_JOIN"
  "INNER\\s+JOIN": "INNER_JOIN"
  "RIGHT\\s+(?:OUTER\\s+)?JOIN": "RIGHT_JOIN"
  "FULL\\s+OUTER\\s+JOIN": "FULL_OUTER_JOIN"
  "CROSS\\s+JOIN": "CROSS_JOIN"
  "NATURAL\\s+JOIN": "NATURAL_JOIN"
  "ORACLE_OUTER": "ORACLE_OUTER_JOIN"

# 동적 쿼리 태그 패턴 (USER RULES: 설정 파일 기반)
dynamic_sql_patterns:
  # MyBatis 동적 태그 패턴
  dynamic_tags:
    - "<if\\s+test=[\"'][^\"']*[\"'][^>]*>(.*?)</if>"
    - "<choose\\s*>(.*?)</choose>"
    - "<when\\s+test=[\"'][^\"']*[\"'][^>]*>(.*?)</when>"
    - "<otherwise\\s*>(.*?)</otherwise>"
    - "<foreach\\s+[^>]*>(.*?)</foreach>"

  # JOIN이 포함된 동적 태그 감지 패턴
  dynamic_join_detection:
    - "<if[^>]*>.*?(?:LEFT|RIGHT|FULL|INNER|CROSS|NATURAL)\\s+JOIN.*?</if>"
