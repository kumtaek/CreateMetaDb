<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.example.mapper.ImplicitJoinMapper">
    
    <!-- 암시적 조인 - WHERE 절에서 테이블 연결 -->
    <select id="selectUsersWithOrders" parameterType="map" resultType="map">
        SELECT u.user_id, u.username, o.order_id, o.total_amount
        FROM users u, orders o
        WHERE u.user_id = o.user_id
        AND u.status = #{status}
        AND o.order_date >= #{fromDate}
    </select>
    
    <!-- 암시적 조인 - 복잡한 WHERE 조건 -->
    <select id="selectUsersWithOrderDetails" parameterType="map" resultType="map">
        SELECT u.user_id, u.username, o.order_id, oi.product_id, p.product_name
        FROM users u, orders o, order_items oi, products p
        WHERE u.user_id = o.user_id
        AND o.order_id = oi.order_id
        AND oi.product_id = p.product_id
        AND u.status = #{status}
        AND o.order_date >= #{fromDate}
    </select>
    
    <!-- 암시적 조인 - EXISTS 서브쿼리 -->
    <select id="selectUsersWithActiveOrders" parameterType="string" resultType="map">
        SELECT u.user_id, u.username, u.email
        FROM users u
        WHERE u.status = #{status}
        AND EXISTS (
            SELECT 1 FROM orders o 
            WHERE u.user_id = o.user_id 
            AND o.order_status = 'COMPLETED'
        )
    </select>
    
    <!-- 암시적 조인 - IN 서브쿼리 -->
    <select id="selectUsersWithRecentOrders" parameterType="map" resultType="map">
        SELECT u.user_id, u.username, u.email
        FROM users u
        WHERE u.user_id IN (
            SELECT o.user_id 
            FROM orders o 
            WHERE o.order_date >= #{fromDate}
        )
        AND u.status = #{status}
    </select>
    
    <!-- 암시적 조인 - 복잡한 조건 -->
    <select id="selectUsersWithOrderStatistics" parameterType="map" resultType="map">
        SELECT u.user_id, u.username, 
               COUNT(o.order_id) as order_count,
               SUM(o.total_amount) as total_amount
        FROM users u, orders o
        WHERE u.user_id = o.user_id
        AND u.status = #{status}
        AND o.order_date >= #{fromDate}
        GROUP BY u.user_id, u.username
        HAVING COUNT(o.order_id) > #{minOrderCount}
    </select>
</mapper>
