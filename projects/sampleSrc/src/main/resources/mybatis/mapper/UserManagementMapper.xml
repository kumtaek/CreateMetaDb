<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.example.mapper.UserManagementMapper">
    
    <!-- 사용자 목록 조회 -->
    <select id="selectUsers" parameterType="map" resultType="com.example.model.User">
        SELECT u.user_id, u.username, u.email, u.status, u.created_at
        FROM users u
        <where>
            <if test="status != null and status != ''">
                AND u.status = #{status}
            </if>
            <if test="userType != null and userType != ''">
                AND u.user_type = #{userType}
            </if>
        </where>
        ORDER BY u.created_at DESC
    </select>
    
    <!-- 사용자 상세 조회 -->
    <select id="selectUserById" parameterType="long" resultType="com.example.model.User">
        SELECT u.*, up.first_name, up.last_name, up.phone
        FROM users u
        LEFT JOIN user_profiles up ON u.user_id = up.user_id
        WHERE u.user_id = #{userId}
    </select>
    
    <!-- 사용자 통계 조회 -->
    <select id="selectUserStatistics" resultType="map">
        SELECT 
            COUNT(*) as total_users,
            COUNT(CASE WHEN status = 'ACTIVE' THEN 1 END) as active_users,
            COUNT(CASE WHEN status = 'INACTIVE' THEN 1 END) as inactive_users
        FROM users
    </select>
    
    <!-- 사용자 상태 업데이트 -->
    <update id="updateUserStatus" parameterType="map">
        UPDATE users 
        SET status = #{newStatus}, updated_at = SYSDATE
        WHERE user_id = #{userId}
    </update>
    
    <!-- 비활성 사용자 삭제 -->
    <delete id="deleteInactiveUsers" parameterType="string">
        DELETE FROM users 
        WHERE status = 'INACTIVE' 
        AND last_login_at < #{cutoffDate}
    </delete>
    
    <!-- 사용자 등록 -->
    <insert id="insertUser" parameterType="com.example.model.User">
        INSERT INTO users (username, email, password, status, created_at)
        VALUES (#{username}, #{email}, #{password}, #{status}, SYSDATE)
    </insert>
</mapper>
